/* The following code was generated by JFlex 1.7.0 */

package compisproyect;  
import static compisproyect.Tokens.*; 


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/herma/Documents/NetBeansProjects/compisProyect/src/compisproyect/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\7\1\10\1\63\1\63\1\10\22\0\1\16\1\3\1\0"+
    "\1\6\1\0\1\3\1\6\1\15\2\6\1\11\1\4\1\5\1\13"+
    "\1\17\1\12\1\2\1\2\10\2\1\0\1\6\1\3\1\64\1\3"+
    "\1\0\1\6\1\30\1\44\1\41\1\31\1\20\1\42\1\50\1\43"+
    "\1\45\1\57\1\52\1\36\1\53\1\35\1\40\1\37\1\60\1\34"+
    "\1\46\1\33\1\14\1\55\1\54\1\32\1\47\1\51\1\6\1\0"+
    "\1\6\1\0\1\56\1\0\4\1\1\21\1\25\1\1\1\62\1\22"+
    "\2\1\1\26\1\1\1\23\4\1\1\27\1\24\2\1\1\61\3\1"+
    "\1\6\1\6\1\6\7\0\1\63\u1fa2\0\1\63\1\63\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\1\1\2\1\3\1\4\1\1\1\5\1\6\1\7"+
    "\1\6\1\10\1\11\1\12\1\3\1\2\32\3\1\13"+
    "\1\14\1\0\1\6\1\0\3\3\1\0\7\3\1\15"+
    "\7\3\1\15\13\3\1\15\13\3\1\15\15\3\2\15"+
    "\2\3\1\15\27\3\2\15\21\3\1\15\20\3\2\14"+
    "\2\0\5\3\1\15\2\3\1\16\5\3\1\15\3\3"+
    "\1\15\6\3\1\15\66\3\1\15\26\3\1\15\13\3"+
    "\1\15\2\3\1\15\7\3\1\15\13\3\1\15\4\3"+
    "\1\15\10\3\1\17\1\20\7\3\1\0\14\3\1\15"+
    "\7\3\1\15\3\3\1\15\1\3\1\15\14\3\1\15"+
    "\15\3\1\15\2\3\1\15\2\3\1\15\20\3\1\15"+
    "\41\3\2\15\4\3\1\0\15\3\1\15\47\3\1\15"+
    "\31\3\2\15\1\0\51\3\1\0\13\3\2\15\12\3"+
    "\1\15\4\3\1\15\10\3\1\15\2\3\1\15\34\3"+
    "\1\15\23\3";

  private static int [] zzUnpackAction() {
    int [] result = new int[662];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\65\0\152\0\237\0\65\0\324\0\u0109\0\65"+
    "\0\u013e\0\u0173\0\u01a8\0\u01dd\0\u0212\0\u0247\0\u027c\0\u02b1"+
    "\0\u02e6\0\u031b\0\u0350\0\u0385\0\u03ba\0\u03ef\0\u0424\0\u0459"+
    "\0\u048e\0\u04c3\0\u04f8\0\u052d\0\u0562\0\u0597\0\u05cc\0\u0601"+
    "\0\u0636\0\u066b\0\u06a0\0\u06d5\0\u070a\0\u073f\0\u0774\0\u07a9"+
    "\0\65\0\u07de\0\u0813\0\u0848\0\u087d\0\u08b2\0\u08e7\0\u091c"+
    "\0\u0951\0\u0986\0\u09bb\0\u09f0\0\u0a25\0\u0a5a\0\u0a8f\0\u0ac4"+
    "\0\152\0\u0af9\0\u0b2e\0\u0b63\0\u0b98\0\u0bcd\0\u0c02\0\u0c37"+
    "\0\u0c6c\0\u0ca1\0\u0cd6\0\u0d0b\0\u0d40\0\u0d75\0\u0daa\0\u0ddf"+
    "\0\u0e14\0\u0e49\0\u0e7e\0\u0eb3\0\u0ee8\0\u0f1d\0\u0f52\0\u0f87"+
    "\0\u0fbc\0\u0ff1\0\u1026\0\u105b\0\u1090\0\u10c5\0\u10fa\0\u112f"+
    "\0\u1164\0\u1199\0\u11ce\0\u1203\0\u1238\0\u126d\0\u12a2\0\u12d7"+
    "\0\u130c\0\u1341\0\u1376\0\u13ab\0\u13e0\0\u1415\0\u144a\0\u147f"+
    "\0\u14b4\0\u14e9\0\u151e\0\u1553\0\u1588\0\u15bd\0\u15f2\0\u1627"+
    "\0\u165c\0\u1691\0\u16c6\0\u16fb\0\u1730\0\u1765\0\u179a\0\u17cf"+
    "\0\u1804\0\u1839\0\u186e\0\u18a3\0\u18d8\0\u190d\0\u1942\0\u1977"+
    "\0\u19ac\0\u19e1\0\u1a16\0\u1a4b\0\u1a80\0\u1ab5\0\u1aea\0\u1b1f"+
    "\0\u1b54\0\u1b89\0\u1bbe\0\u1bf3\0\u1c28\0\u1c5d\0\u1c92\0\u1cc7"+
    "\0\u1cfc\0\u1d31\0\u1d66\0\u1d9b\0\u1dd0\0\u1e05\0\u1e3a\0\u1e6f"+
    "\0\u1ea4\0\u1ed9\0\u1f0e\0\u1f43\0\u1f78\0\u1fad\0\u1fe2\0\u2017"+
    "\0\u204c\0\u2081\0\u20b6\0\u20eb\0\u2120\0\u2155\0\u218a\0\u21bf"+
    "\0\u21f4\0\u2229\0\u225e\0\u2293\0\u22c8\0\u22fd\0\u2332\0\u2367"+
    "\0\u239c\0\u23d1\0\65\0\u2406\0\u243b\0\u2470\0\u24a5\0\u24da"+
    "\0\u250f\0\u2544\0\u2579\0\u25ae\0\u25e3\0\u2618\0\u264d\0\u2682"+
    "\0\u0ee8\0\u26b7\0\u26ec\0\u2721\0\u2756\0\u278b\0\u27c0\0\u27f5"+
    "\0\u282a\0\u285f\0\u2894\0\u28c9\0\u28fe\0\u2933\0\u2968\0\u299d"+
    "\0\u29d2\0\u2a07\0\u2a3c\0\u2a71\0\u2aa6\0\u2adb\0\u2b10\0\u2b45"+
    "\0\u2b7a\0\u2baf\0\u2be4\0\u2c19\0\u2c4e\0\u2c83\0\u2cb8\0\u2ced"+
    "\0\u2d22\0\u2d57\0\u2d8c\0\u2dc1\0\u2df6\0\u2e2b\0\u2e60\0\u2e95"+
    "\0\u2eca\0\u2eff\0\u2f34\0\u2f69\0\u2f9e\0\u2fd3\0\u3008\0\u303d"+
    "\0\u3072\0\u30a7\0\u30dc\0\u3111\0\u3146\0\u317b\0\u31b0\0\u31e5"+
    "\0\u321a\0\u324f\0\u3284\0\u32b9\0\u32ee\0\u3323\0\u3358\0\u338d"+
    "\0\u33c2\0\u33f7\0\u342c\0\u3461\0\u3496\0\u34cb\0\u3500\0\u3535"+
    "\0\u356a\0\u359f\0\u35d4\0\u3609\0\u363e\0\u3673\0\u36a8\0\u36dd"+
    "\0\u3712\0\u3747\0\u377c\0\u37b1\0\u37e6\0\u2367\0\u381b\0\u3850"+
    "\0\u3885\0\u38ba\0\u38ef\0\u3924\0\u3959\0\u398e\0\u39c3\0\u39f8"+
    "\0\u3a2d\0\u3a62\0\u3a97\0\u3acc\0\u3b01\0\u3b36\0\u3b6b\0\u3ba0"+
    "\0\u3bd5\0\u3c0a\0\u3c3f\0\u3c74\0\u3ca9\0\u3cde\0\u3d13\0\u3d48"+
    "\0\u3d7d\0\u3db2\0\u3de7\0\u3e1c\0\u3e51\0\u3e86\0\u3ebb\0\u3ef0"+
    "\0\u3f25\0\u3f5a\0\u3f8f\0\u3fc4\0\u3ff9\0\u402e\0\u4063\0\u4098"+
    "\0\u40cd\0\u4102\0\65\0\65\0\u4137\0\u416c\0\u41a1\0\u41d6"+
    "\0\u420b\0\u4240\0\u4275\0\u42aa\0\u42df\0\u4314\0\u4349\0\u437e"+
    "\0\u43b3\0\u43e8\0\u441d\0\u4452\0\u4487\0\u44bc\0\u44f1\0\u4526"+
    "\0\u455b\0\u4590\0\u45c5\0\u45fa\0\u462f\0\u4664\0\u4699\0\u46ce"+
    "\0\u4703\0\u4738\0\u476d\0\u47a2\0\u47d7\0\u480c\0\u4841\0\u4876"+
    "\0\u48ab\0\u48e0\0\u4915\0\u494a\0\u497f\0\u49b4\0\u49e9\0\u4a1e"+
    "\0\u4a53\0\u4a88\0\u4abd\0\u4af2\0\u4b27\0\u4b5c\0\u4b91\0\u4bc6"+
    "\0\u4bfb\0\u4c30\0\u4c65\0\u4c9a\0\u4ccf\0\u4d04\0\u4d39\0\u4d6e"+
    "\0\u4da3\0\u4dd8\0\u4e0d\0\u4e42\0\u4e77\0\u4eac\0\u4ee1\0\u4f16"+
    "\0\u4f4b\0\u4f80\0\u4fb5\0\u4fea\0\u501f\0\u5054\0\u5089\0\u50be"+
    "\0\u50f3\0\u5128\0\u515d\0\u5192\0\u51c7\0\u3f5a\0\u51fc\0\u5231"+
    "\0\u5266\0\u529b\0\u52d0\0\u5305\0\u533a\0\u536f\0\u53a4\0\u53d9"+
    "\0\u540e\0\u5443\0\u5478\0\u54ad\0\u54e2\0\u5517\0\u554c\0\u5581"+
    "\0\u55b6\0\u55eb\0\u5620\0\u5655\0\u568a\0\u56bf\0\u56f4\0\u5729"+
    "\0\u575e\0\u5793\0\u57c8\0\u57fd\0\u5832\0\u5867\0\u589c\0\u58d1"+
    "\0\u5906\0\u593b\0\u5970\0\u59a5\0\u59da\0\u5a0f\0\u5a44\0\u5a79"+
    "\0\u5aae\0\u5ae3\0\u25e3\0\u5b18\0\u5b4d\0\u5b82\0\u5bb7\0\u5bec"+
    "\0\u5c21\0\u5c56\0\u5c8b\0\u5cc0\0\u5cf5\0\u5d2a\0\u5d5f\0\u5d94"+
    "\0\u5dc9\0\u5dfe\0\u5e33\0\u5e68\0\u5e9d\0\u5ed2\0\u5f07\0\u5f3c"+
    "\0\u5f71\0\u5fa6\0\u5fdb\0\u6010\0\u6045\0\u607a\0\u60af\0\u60e4"+
    "\0\u6119\0\u614e\0\u6183\0\u61b8\0\u61ed\0\u6222\0\u6257\0\u628c"+
    "\0\u62c1\0\u398e\0\u62f6\0\u632b\0\u6360\0\u6395\0\u63ca\0\u63ff"+
    "\0\u6434\0\u6469\0\u649e\0\u64d3\0\u6508\0\u653d\0\u6572\0\u65a7"+
    "\0\u65dc\0\u6611\0\u6646\0\u667b\0\u66b0\0\u66e5\0\u671a\0\u674f"+
    "\0\u6784\0\u67b9\0\u67ee\0\u6823\0\u6858\0\u688d\0\u68c2\0\u68f7"+
    "\0\u692c\0\u6961\0\u6996\0\u69cb\0\u6a00\0\u6a35\0\u6a6a\0\u6a9f"+
    "\0\u4bc6\0\u2618\0\u6ad4\0\u6b09\0\u6b3e\0\u6b73\0\u6ba8\0\u6bdd"+
    "\0\u6c12\0\u6c47\0\u6c7c\0\u6cb1\0\u6ce6\0\u6d1b\0\u6d50\0\u6d85"+
    "\0\u6dba\0\u6def\0\u6e24\0\u6e59\0\u6e8e\0\u6ec3\0\u6ef8\0\u6f2d"+
    "\0\u6f62\0\u6f97\0\u6fcc\0\u7001\0\u7036\0\u706b\0\u70a0\0\u70d5"+
    "\0\u710a\0\u713f\0\u7174\0\u71a9\0\u71de\0\u7213\0\u7248\0\u727d"+
    "\0\u72b2\0\u72e7\0\u731c\0\u7351\0\u7386\0\u73bb\0\u73f0\0\u7425"+
    "\0\u745a\0\u748f\0\u74c4\0\u74f9\0\u752e\0\u7563\0\u7598\0\u75cd"+
    "\0\u7602\0\u2f69\0\u7637\0\u766c\0\u76a1\0\u76d6\0\u770b\0\u7740"+
    "\0\u7775\0\u77aa\0\u147f\0\u77df\0\u72e7\0\u7814\0\u7849\0\u3bd5"+
    "\0\u787e\0\65\0\u78b3\0\u78e8\0\u791d\0\u7952\0\u7987\0\u79bc"+
    "\0\u79f1\0\u7a26\0\u7a5b\0\u7a90\0\u7ac5\0\u7afa\0\u7b2f\0\u7b64"+
    "\0\u7b99\0\u7bce\0\u7c03\0\u7c38\0\u7c6d\0\u7ca2\0\u7cd7\0\u7d0c"+
    "\0\u7d41\0\u7d76\0\u7dab\0\u7de0\0\u7e15\0\u7e4a\0\u7e7f\0\u7eb4"+
    "\0\u7ee9\0\u7f1e\0\u7f53\0\u7f88\0\u7fbd\0\u7ff2\0\u8027\0\u805c"+
    "\0\u8091\0\u80c6\0\u80fb\0\u8130\0\u8165\0\u819a\0\u81cf\0\u8204"+
    "\0\u8239\0\u826e\0\u82a3\0\u82d8\0\u830d\0\u8342\0\u7a5b\0\u8377"+
    "\0\u83ac\0\u83e1\0\u8416\0\u844b\0\u8480\0\u84b5";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[662];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\2\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\11\1\10\1\17"+
    "\1\20\1\21\5\3\1\22\1\23\1\3\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
    "\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45"+
    "\1\46\1\3\1\47\1\3\1\50\1\3\1\0\1\51"+
    "\66\0\2\3\11\0\1\3\3\0\43\3\4\0\1\4"+
    "\14\0\1\52\47\0\1\4\64\0\1\4\2\0\1\11"+
    "\1\0\2\11\5\0\1\11\53\0\1\11\1\0\2\11"+
    "\5\0\1\11\60\0\1\53\64\0\1\54\54\0\1\4"+
    "\10\0\1\55\52\0\2\3\11\0\1\3\3\0\15\3"+
    "\1\56\1\3\1\57\6\3\1\60\14\3\3\0\1\61"+
    "\12\0\1\61\3\0\43\61\3\0\2\3\11\0\1\3"+
    "\3\0\12\3\1\62\1\3\1\63\1\64\1\65\7\3"+
    "\1\66\14\3\3\0\2\3\11\0\1\3\3\0\6\3"+
    "\1\67\34\3\3\0\2\3\11\0\1\3\3\0\3\3"+
    "\1\70\1\3\1\71\35\3\3\0\2\3\11\0\1\72"+
    "\3\0\11\3\1\73\1\3\1\71\1\74\1\75\1\76"+
    "\2\3\1\77\2\3\1\100\1\3\1\101\6\3\1\102"+
    "\5\3\3\0\2\3\11\0\1\103\3\0\1\104\7\3"+
    "\1\105\3\3\1\106\3\3\1\107\3\3\1\110\1\111"+
    "\15\3\3\0\2\3\11\0\1\3\3\0\1\112\7\3"+
    "\1\113\3\3\1\114\3\3\1\115\2\3\1\116\1\3"+
    "\1\117\1\120\14\3\3\0\2\3\11\0\1\121\3\0"+
    "\1\122\7\3\1\123\7\3\1\124\4\3\1\125\15\3"+
    "\3\0\2\3\11\0\1\126\3\0\1\127\7\3\1\130"+
    "\7\3\1\131\1\132\21\3\3\0\2\3\11\0\1\3"+
    "\3\0\1\133\7\3\1\134\7\3\1\135\4\3\1\136"+
    "\15\3\3\0\2\3\11\0\1\137\3\0\1\140\7\3"+
    "\1\141\3\3\1\142\1\3\1\143\1\3\1\144\4\3"+
    "\1\145\15\3\3\0\2\3\11\0\1\146\3\0\14\3"+
    "\1\147\1\150\1\3\1\151\1\3\1\152\1\153\12\3"+
    "\1\154\5\3\3\0\2\3\11\0\1\155\3\0\10\3"+
    "\1\156\3\3\1\157\1\3\1\160\1\3\1\161\2\3"+
    "\1\162\17\3\3\0\2\3\11\0\1\163\3\0\1\164"+
    "\7\3\1\165\3\3\1\166\1\3\1\167\1\3\1\170"+
    "\4\3\1\171\15\3\3\0\2\3\11\0\1\3\3\0"+
    "\10\3\1\172\7\3\1\173\22\3\3\0\2\3\11\0"+
    "\1\174\3\0\1\175\7\3\1\176\3\3\1\177\3\3"+
    "\1\200\4\3\1\201\1\3\1\71\13\3\3\0\2\3"+
    "\11\0\1\3\3\0\11\3\1\202\3\3\1\203\4\3"+
    "\1\71\3\3\1\204\4\3\1\205\7\3\3\0\2\3"+
    "\11\0\1\206\3\0\1\207\7\3\1\210\2\3\1\211"+
    "\3\3\1\212\1\213\1\214\1\3\1\215\1\3\1\216"+
    "\1\3\1\217\3\3\1\220\4\3\1\221\2\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\222\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\223\13\3\1\224\1\3\1\225"+
    "\1\3\1\226\22\3\3\0\2\3\11\0\1\3\3\0"+
    "\20\3\1\227\22\3\3\0\2\3\11\0\1\3\3\0"+
    "\1\230\24\3\1\231\15\3\3\0\2\3\11\0\1\3"+
    "\3\0\1\232\7\3\1\233\7\3\1\234\4\3\1\235"+
    "\15\3\3\0\2\3\11\0\1\3\3\0\10\3\1\236"+
    "\3\3\1\237\3\3\1\240\2\3\1\241\1\3\1\242"+
    "\15\3\3\0\2\3\11\0\1\3\3\0\10\3\1\243"+
    "\14\3\1\244\15\3\3\0\2\3\11\0\1\3\3\0"+
    "\20\3\1\245\22\3\3\0\2\3\11\0\1\3\3\0"+
    "\42\3\1\246\4\0\1\52\1\0\2\247\5\0\1\247"+
    "\4\0\2\250\43\0\11\251\1\0\53\251\10\54\1\0"+
    "\52\54\1\0\1\54\65\252\1\0\2\3\11\0\1\3"+
    "\3\0\17\3\1\253\5\3\1\254\4\3\1\255\10\3"+
    "\3\0\2\3\11\0\1\3\3\0\11\3\1\256\5\3"+
    "\1\257\23\3\3\0\2\3\11\0\1\3\3\0\1\260"+
    "\7\3\1\261\14\3\1\262\15\3\3\0\2\61\11\0"+
    "\1\61\1\263\1\61\1\0\43\61\3\0\2\3\11\0"+
    "\1\3\3\0\1\264\12\3\1\265\5\3\1\266\3\3"+
    "\1\267\15\3\3\0\2\3\11\0\1\3\3\0\14\3"+
    "\1\270\26\3\3\0\2\3\11\0\1\3\3\0\11\3"+
    "\1\271\31\3\3\0\2\3\11\0\1\3\3\0\26\3"+
    "\1\74\14\3\3\0\2\3\11\0\1\3\3\0\21\3"+
    "\1\272\21\3\3\0\2\3\11\0\1\3\3\0\7\3"+
    "\1\273\33\3\3\0\2\3\11\0\1\3\3\0\4\3"+
    "\1\71\36\3\3\0\2\3\11\0\1\3\3\0\13\3"+
    "\1\274\27\3\3\0\2\3\11\0\1\3\3\0\10\3"+
    "\2\71\31\3\3\0\2\3\11\0\1\3\3\0\1\71"+
    "\42\3\3\0\2\3\11\0\1\3\3\0\11\3\1\71"+
    "\15\3\1\71\13\3\3\0\2\3\11\0\1\3\3\0"+
    "\13\3\1\257\2\3\1\275\24\3\3\0\2\3\11\0"+
    "\1\3\3\0\13\3\1\276\27\3\3\0\2\3\11\0"+
    "\1\3\3\0\26\3\1\277\14\3\3\0\2\3\11\0"+
    "\1\3\3\0\21\3\1\71\4\3\1\300\14\3\3\0"+
    "\2\3\11\0\1\3\3\0\30\3\1\71\12\3\3\0"+
    "\2\3\11\0\1\3\3\0\33\3\1\301\7\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\302\4\3\1\230"+
    "\1\303\2\3\1\304\1\305\3\3\1\306\14\3\3\0"+
    "\2\3\11\0\1\3\3\0\13\3\1\307\13\3\1\71"+
    "\13\3\3\0\2\3\11\0\1\3\3\0\20\3\1\301"+
    "\22\3\3\0\2\3\11\0\1\310\3\0\33\3\1\311"+
    "\7\3\3\0\2\3\11\0\1\3\3\0\21\3\1\312"+
    "\21\3\3\0\2\3\11\0\1\3\3\0\10\3\1\313"+
    "\15\3\1\314\14\3\3\0\2\3\11\0\1\3\3\0"+
    "\12\3\1\315\20\3\1\316\7\3\3\0\2\3\11\0"+
    "\1\3\3\0\24\3\1\317\16\3\3\0\2\3\11\0"+
    "\1\320\3\0\10\3\1\321\14\3\1\322\1\3\1\323"+
    "\13\3\3\0\2\3\11\0\1\3\3\0\17\3\1\71"+
    "\23\3\3\0\2\3\11\0\1\3\3\0\1\324\42\3"+
    "\3\0\2\3\11\0\1\3\3\0\33\3\1\325\7\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\326\42\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\74\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\327\2\3\1\330"+
    "\2\3\1\331\1\332\1\3\1\333\1\334\3\3\1\335"+
    "\6\3\1\336\5\3\3\0\2\3\11\0\1\3\3\0"+
    "\25\3\1\337\15\3\3\0\2\3\11\0\1\3\3\0"+
    "\16\3\1\340\15\3\1\341\6\3\3\0\2\3\11\0"+
    "\1\3\3\0\30\3\1\342\12\3\3\0\2\3\11\0"+
    "\1\3\3\0\16\3\1\343\14\3\1\344\7\3\3\0"+
    "\2\3\11\0\1\3\3\0\12\3\1\223\30\3\3\0"+
    "\2\3\11\0\1\3\3\0\13\3\1\345\17\3\1\346"+
    "\7\3\3\0\2\3\11\0\1\3\3\0\13\3\1\71"+
    "\1\3\1\347\3\3\1\350\21\3\3\0\2\3\11\0"+
    "\1\3\3\0\23\3\1\222\17\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\351\11\3\1\223\12\3\1\352"+
    "\5\3\3\0\2\3\11\0\1\3\3\0\15\3\1\353"+
    "\10\3\1\223\14\3\3\0\2\3\11\0\1\3\3\0"+
    "\10\3\1\354\10\3\1\355\12\3\1\257\6\3\3\0"+
    "\2\3\11\0\1\3\3\0\15\3\1\356\14\3\1\74"+
    "\10\3\3\0\2\3\11\0\1\3\3\0\24\3\1\357"+
    "\16\3\3\0\2\3\11\0\1\3\3\0\14\3\1\360"+
    "\26\3\3\0\2\3\11\0\1\3\3\0\11\3\1\71"+
    "\2\3\1\361\11\3\1\362\14\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\363\17\3\1\364\4\3\1\365\15\3"+
    "\3\0\2\3\11\0\1\3\3\0\10\3\1\324\32\3"+
    "\3\0\2\3\11\0\1\3\3\0\26\3\1\366\14\3"+
    "\3\0\2\3\11\0\1\3\3\0\35\3\1\367\5\3"+
    "\3\0\2\3\11\0\1\3\3\0\13\3\1\370\27\3"+
    "\3\0\2\3\11\0\1\3\3\0\11\3\1\257\31\3"+
    "\3\0\2\3\11\0\1\3\3\0\16\3\1\230\24\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\371\12\3\1\276"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\13\3\1\372"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\22\3\1\373"+
    "\20\3\3\0\2\3\11\0\1\3\3\0\1\374\42\3"+
    "\3\0\2\3\11\0\1\3\3\0\14\3\1\375\26\3"+
    "\3\0\2\3\11\0\1\3\3\0\13\3\1\376\12\3"+
    "\1\377\14\3\3\0\2\3\11\0\1\3\3\0\1\u0100"+
    "\17\3\1\u0101\22\3\3\0\2\3\11\0\1\u0102\3\0"+
    "\20\3\1\65\22\3\3\0\2\3\11\0\1\u0103\3\0"+
    "\10\3\1\u0104\3\3\1\u0105\1\u0106\1\u0107\14\3\1\u0108"+
    "\7\3\3\0\2\3\11\0\1\3\3\0\1\u0109\7\3"+
    "\1\u010a\32\3\3\0\2\3\11\0\1\3\3\0\15\3"+
    "\1\u010b\1\u010c\24\3\3\0\2\3\11\0\1\3\3\0"+
    "\13\3\1\u010d\27\3\3\0\2\3\11\0\1\3\3\0"+
    "\16\3\1\65\24\3\3\0\2\3\11\0\1\3\3\0"+
    "\1\u010e\17\3\1\u010f\22\3\3\0\2\3\11\0\1\3"+
    "\3\0\20\3\1\u0110\22\3\3\0\2\3\11\0\1\u0111"+
    "\3\0\14\3\1\u0112\26\3\3\0\2\3\11\0\1\3"+
    "\3\0\14\3\1\u0113\1\3\1\u0114\24\3\3\0\2\3"+
    "\11\0\1\3\3\0\35\3\1\u0115\5\3\3\0\2\3"+
    "\11\0\1\u0116\3\0\16\3\1\u0117\24\3\3\0\2\3"+
    "\11\0\1\3\3\0\16\3\1\u0118\24\3\3\0\2\3"+
    "\11\0\1\3\3\0\13\3\1\u0119\14\3\1\245\12\3"+
    "\3\0\2\3\11\0\1\3\3\0\21\3\1\u011a\21\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\u011b\17\3\1\u011c"+
    "\22\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u011d"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u011e"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\1\u011f\42\3"+
    "\3\0\2\3\11\0\1\3\3\0\11\3\1\u0120\1\3"+
    "\1\u0121\1\3\1\257\1\3\1\u0122\1\3\1\u0123\3\3"+
    "\1\u0124\1\u0125\14\3\3\0\2\3\11\0\1\3\3\0"+
    "\20\3\1\u0126\22\3\3\0\2\3\11\0\1\3\3\0"+
    "\33\3\1\u0127\7\3\3\0\2\3\11\0\1\3\3\0"+
    "\24\3\1\u0128\6\3\1\71\7\3\3\0\2\3\11\0"+
    "\1\3\3\0\13\3\1\u0129\2\3\1\u012a\2\3\1\u012b"+
    "\4\3\1\u012c\4\3\1\u012d\7\3\3\0\2\3\11\0"+
    "\1\3\3\0\35\3\1\74\5\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u012e\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u012f\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\33\3\1\74\7\3\3\0\2\3\11\0"+
    "\1\3\3\0\14\3\1\u0130\6\3\1\u0131\17\3\3\0"+
    "\2\3\11\0\1\u0132\3\0\43\3\3\0\2\3\11\0"+
    "\1\3\3\0\31\3\1\74\11\3\3\0\2\3\11\0"+
    "\1\3\3\0\26\3\1\u0133\14\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u0134\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\16\3\1\u0135\24\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u0116\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\13\3\1\71\27\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u0103\7\3\1\u0136\22\3\3\0"+
    "\2\3\11\0\1\3\3\0\20\3\1\u0137\22\3\3\0"+
    "\2\3\11\0\1\3\3\0\13\3\1\u0138\27\3\3\0"+
    "\2\3\11\0\1\3\3\0\15\3\1\74\25\3\3\0"+
    "\2\3\11\0\1\3\3\0\27\3\1\71\13\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\u010c\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\261\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\12\3\1\71\1\u010d\27\3"+
    "\3\0\2\3\11\0\1\3\3\0\11\3\1\u0139\3\3"+
    "\1\200\25\3\3\0\2\3\11\0\1\3\3\0\15\3"+
    "\1\u013a\25\3\3\0\2\3\11\0\1\3\3\0\25\3"+
    "\1\u013b\15\3\3\0\2\3\11\0\1\3\3\0\25\3"+
    "\1\u013c\15\3\3\0\2\3\11\0\1\3\3\0\14\3"+
    "\1\u0118\26\3\3\0\2\3\11\0\1\3\3\0\1\u013d"+
    "\24\3\1\121\15\3\3\0\2\3\11\0\1\3\3\0"+
    "\13\3\1\u013e\27\3\3\0\2\3\11\0\1\3\3\0"+
    "\14\3\1\u013f\1\3\1\u0140\24\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\u0141\42\3\3\0\2\3\11\0\1\3"+
    "\3\0\25\3\1\324\15\3\3\0\2\3\11\0\1\3"+
    "\3\0\2\3\1\u0142\40\3\4\0\1\247\64\0\1\247"+
    "\1\0\2\247\5\0\1\247\51\0\11\251\2\u0143\52\251"+
    "\10\252\1\u0144\54\252\1\0\2\3\11\0\1\3\3\0"+
    "\25\3\1\145\15\3\3\0\2\3\11\0\1\3\3\0"+
    "\20\3\1\324\17\3\1\u0145\2\3\3\0\2\3\11\0"+
    "\1\3\3\0\15\3\1\u0146\25\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u013c\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\u0116\42\3\3\0\2\3\11\0\1\3"+
    "\3\0\14\3\1\71\26\3\3\0\2\3\11\0\1\3"+
    "\3\0\30\3\1\74\12\3\3\0\2\3\11\0\1\3"+
    "\3\0\15\3\1\102\25\3\3\0\2\3\11\0\1\3"+
    "\3\0\21\3\1\u013a\21\3\3\0\2\3\11\0\1\3"+
    "\3\0\1\u0147\13\3\1\u0148\26\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\u0149\42\3\3\0\2\3\11\0\1\3"+
    "\3\0\13\3\1\71\12\3\1\u014a\14\3\3\0\2\3"+
    "\11\0\1\3\3\0\16\3\1\u014b\24\3\3\0\2\3"+
    "\10\0\1\u014c\1\3\3\0\43\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u014d\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\3\1\71\41\3\3\0\2\3\11\0"+
    "\1\3\3\0\23\3\1\u014e\17\3\3\0\2\3\11\0"+
    "\1\3\3\0\20\3\1\u014f\22\3\3\0\2\3\11\0"+
    "\1\3\3\0\25\3\1\u0150\15\3\3\0\2\3\11\0"+
    "\1\3\3\0\20\3\1\u0151\22\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\u0152\42\3\3\0\2\3\11\0\1\3"+
    "\3\0\16\3\1\u0153\24\3\3\0\2\3\11\0\1\3"+
    "\3\0\1\u0154\42\3\3\0\2\3\11\0\1\3\3\0"+
    "\16\3\1\u0155\6\3\1\u0156\15\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\u0157\7\3\1\u0158\32\3\3\0\2\3"+
    "\11\0\1\3\3\0\21\3\1\u0159\21\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\71\7\3\1\u015a\32\3\3\0"+
    "\2\3\11\0\1\3\3\0\24\3\1\121\16\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\245\32\3\3\0"+
    "\2\3\11\0\1\3\3\0\21\3\1\71\21\3\3\0"+
    "\2\3\11\0\1\3\3\0\30\3\1\u015b\12\3\3\0"+
    "\2\3\11\0\1\3\3\0\13\3\1\u015c\5\3\1\u015d"+
    "\10\3\1\71\10\3\3\0\2\3\11\0\1\3\3\0"+
    "\13\3\1\u015e\27\3\3\0\2\3\11\0\1\3\3\0"+
    "\17\3\1\u015f\23\3\3\0\2\3\11\0\1\3\3\0"+
    "\16\3\1\u0160\24\3\3\0\2\3\11\0\1\3\3\0"+
    "\1\71\14\3\1\u014f\25\3\3\0\2\3\11\0\1\3"+
    "\3\0\15\3\1\u0161\7\3\1\u0162\15\3\3\0\2\3"+
    "\11\0\1\3\3\0\30\3\1\u0163\2\3\1\71\7\3"+
    "\3\0\2\3\11\0\1\3\3\0\36\3\1\u0164\4\3"+
    "\3\0\2\3\11\0\1\3\3\0\15\3\1\71\25\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\u0165\42\3\3\0"+
    "\2\3\11\0\1\3\3\0\40\3\1\u0166\2\3\3\0"+
    "\2\3\11\0\1\3\3\0\11\3\1\u0167\4\3\1\71"+
    "\24\3\3\0\2\3\11\0\1\u0168\3\0\43\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\u0169\32\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\u016a\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\20\3\1\u016b\22\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u016c\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\13\3\1\u016d\27\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\u016e\17\3\1\u016f\22\3\3\0"+
    "\2\3\11\0\1\3\3\0\26\3\1\u0170\14\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\u0171\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\21\3\1\u0172\4\3\1\71"+
    "\1\3\1\u0173\12\3\3\0\2\3\11\0\1\3\3\0"+
    "\23\3\1\223\17\3\3\0\2\3\11\0\1\3\3\0"+
    "\16\3\1\u0174\24\3\3\0\2\3\11\0\1\3\3\0"+
    "\1\u0175\42\3\3\0\2\3\11\0\1\u0176\3\0\25\3"+
    "\1\u0177\15\3\3\0\2\3\11\0\1\3\3\0\1\u0178"+
    "\42\3\3\0\2\3\11\0\1\3\3\0\1\71\20\3"+
    "\1\u0179\21\3\3\0\2\3\11\0\1\3\3\0\23\3"+
    "\1\u017a\17\3\3\0\2\3\11\0\1\3\3\0\11\3"+
    "\1\u0115\31\3\3\0\2\3\11\0\1\3\3\0\1\u010c"+
    "\42\3\3\0\2\3\11\0\1\3\3\0\30\3\1\u017b"+
    "\12\3\3\0\2\3\11\0\1\3\3\0\11\3\1\71"+
    "\31\3\3\0\2\3\11\0\1\3\3\0\10\3\1\u010c"+
    "\32\3\3\0\2\3\11\0\1\3\3\0\1\u017c\42\3"+
    "\3\0\2\3\11\0\1\3\3\0\16\3\1\u017d\24\3"+
    "\3\0\2\3\11\0\1\3\3\0\21\3\1\u017e\21\3"+
    "\3\0\2\3\11\0\1\3\3\0\13\3\1\u017f\27\3"+
    "\3\0\2\3\11\0\1\3\3\0\21\3\1\355\21\3"+
    "\3\0\2\3\11\0\1\3\3\0\17\3\1\u0155\1\3"+
    "\1\u0180\4\3\1\u0181\14\3\3\0\2\3\11\0\1\3"+
    "\3\0\21\3\1\u0182\21\3\3\0\2\3\11\0\1\3"+
    "\3\0\15\3\1\223\2\3\1\u0116\12\3\1\u0183\1\3"+
    "\1\u0184\5\3\3\0\2\3\11\0\1\3\3\0\25\3"+
    "\1\77\15\3\3\0\2\3\11\0\1\3\3\0\20\3"+
    "\1\223\22\3\3\0\2\3\11\0\1\3\3\0\1\u0116"+
    "\16\3\1\u0122\23\3\3\0\2\3\11\0\1\3\3\0"+
    "\15\3\1\u0185\25\3\3\0\2\3\11\0\1\3\3\0"+
    "\1\u0186\42\3\3\0\2\3\11\0\1\3\3\0\26\3"+
    "\1\u0187\14\3\3\0\2\3\11\0\1\3\3\0\14\3"+
    "\1\u0188\26\3\3\0\2\3\11\0\1\3\3\0\14\3"+
    "\1\u0189\11\3\1\u018a\14\3\3\0\2\3\11\0\1\3"+
    "\3\0\10\3\1\u018b\32\3\3\0\2\3\11\0\1\3"+
    "\3\0\1\71\12\3\1\71\5\3\1\u018c\21\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\u0154\32\3\3\0"+
    "\2\3\11\0\1\3\3\0\26\3\1\u0178\14\3\3\0"+
    "\2\3\11\0\1\3\3\0\26\3\1\u018d\14\3\3\0"+
    "\2\3\11\0\1\3\3\0\15\3\1\223\25\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\u018e\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\u018f\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\13\3\1\u0190\1\3\1\u0191"+
    "\10\3\1\u0192\6\3\1\u0193\5\3\3\0\2\3\11\0"+
    "\1\u0194\3\0\16\3\1\u0195\24\3\3\0\2\3\11\0"+
    "\1\3\3\0\17\3\1\u0196\13\3\1\u0197\7\3\3\0"+
    "\2\3\11\0\1\3\3\0\21\3\1\u0198\21\3\3\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\u0199\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\21\3\1\77\21\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\71\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\21\3\1\u011d\21\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u019a\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\33\3\1\71\7\3\3\0\2\3"+
    "\11\0\1\3\3\0\10\3\1\223\32\3\3\0\2\3"+
    "\11\0\1\3\3\0\15\3\1\354\25\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\u019b\12\3\1\u019c\27\3\3\0"+
    "\2\3\11\0\1\3\3\0\26\3\1\223\14\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\71\15\3\1\u019d\24\3"+
    "\3\0\2\3\11\0\1\3\3\0\25\3\1\262\15\3"+
    "\3\0\2\3\11\0\1\3\3\0\11\3\1\u019e\31\3"+
    "\3\0\2\3\11\0\1\3\3\0\32\3\1\71\10\3"+
    "\3\0\2\3\11\0\1\3\3\0\34\3\1\u019f\6\3"+
    "\3\0\2\3\11\0\1\3\3\0\32\3\1\u0136\10\3"+
    "\3\0\2\3\11\0\1\3\3\0\10\3\1\u0118\32\3"+
    "\3\0\2\3\11\0\1\3\3\0\34\3\1\65\6\3"+
    "\3\0\2\3\11\0\1\3\3\0\23\3\1\71\17\3"+
    "\3\0\2\3\11\0\1\3\3\0\36\3\1\u01a0\4\3"+
    "\3\0\2\3\11\0\1\3\3\0\15\3\1\u01a1\25\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\u01a2\24\3\1\u01a3"+
    "\15\3\3\0\2\3\11\0\1\3\3\0\1\u01a4\17\3"+
    "\1\71\22\3\3\0\2\3\11\0\1\223\3\0\43\3"+
    "\3\0\2\3\11\0\1\3\3\0\16\3\1\u01a5\24\3"+
    "\3\0\2\3\11\0\1\3\3\0\13\3\1\u01a6\27\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\u01a7\42\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\u01a8\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u01a9\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\26\3\1\u01aa\14\3\3\0\2\3"+
    "\11\0\1\u01ab\3\0\43\3\3\0\2\3\11\0\1\3"+
    "\3\0\1\u01ac\42\3\3\0\2\3\11\0\1\u01ad\3\0"+
    "\13\3\1\276\4\3\1\u0111\22\3\3\0\2\3\11\0"+
    "\1\3\3\0\26\3\1\u01ae\14\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u01af\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\13\3\1\u01b0\27\3\3\0\2\3\11\0"+
    "\1\3\3\0\21\3\1\74\21\3\3\0\2\3\11\0"+
    "\1\3\3\0\20\3\1\231\22\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\u01b1\42\3\3\0\2\3\11\0\1\3"+
    "\3\0\13\3\1\u01b2\27\3\3\0\2\3\11\0\1\3"+
    "\3\0\13\3\1\u01b3\27\3\3\0\2\3\11\0\1\3"+
    "\3\0\16\3\1\u01b4\24\3\3\0\2\3\11\0\1\3"+
    "\3\0\1\u01b5\20\3\1\u01b6\4\3\1\u01b7\5\3\1\u01b8"+
    "\6\3\3\0\2\3\11\0\1\301\3\0\43\3\3\0"+
    "\2\3\11\0\1\3\3\0\24\3\1\355\16\3\3\0"+
    "\2\3\11\0\1\3\3\0\20\3\1\71\22\3\3\0"+
    "\2\3\11\0\1\121\3\0\43\3\3\0\2\3\11\0"+
    "\1\u0154\3\0\43\3\3\0\2\3\11\0\1\3\3\0"+
    "\13\3\1\u01b9\27\3\3\0\2\3\11\0\1\3\3\0"+
    "\13\3\1\u01ba\27\3\3\0\2\3\11\0\1\3\3\0"+
    "\14\3\1\74\1\u01bb\25\3\3\0\2\3\11\0\1\3"+
    "\3\0\23\3\1\u01bc\17\3\3\0\2\3\11\0\1\3"+
    "\3\0\21\3\1\132\5\3\1\u0115\13\3\3\0\2\3"+
    "\11\0\1\u01bd\3\0\43\3\3\0\2\3\11\0\1\3"+
    "\3\0\34\3\1\71\6\3\3\0\2\3\11\0\1\3"+
    "\3\0\6\3\1\273\34\3\3\0\2\3\11\0\1\74"+
    "\3\0\43\3\3\0\2\3\11\0\1\3\3\0\20\3"+
    "\1\u01be\22\3\3\0\2\3\11\0\1\3\3\0\14\3"+
    "\1\u01bf\26\3\3\0\2\3\11\0\1\3\3\0\10\3"+
    "\1\u01ac\32\3\3\0\2\3\11\0\1\3\3\0\17\3"+
    "\1\u01c0\23\3\3\0\2\3\11\0\1\3\3\0\13\3"+
    "\1\u0178\27\3\3\0\2\3\11\0\1\3\3\0\35\3"+
    "\1\u010c\5\3\22\0\1\u01c1\45\0\2\3\11\0\1\3"+
    "\3\0\17\3\1\74\23\3\3\0\2\3\11\0\1\3"+
    "\3\0\20\3\1\u01c2\22\3\3\0\2\3\11\0\1\3"+
    "\3\0\21\3\1\u0100\21\3\3\0\2\3\11\0\1\3"+
    "\3\0\20\3\1\324\22\3\3\0\2\3\11\0\1\3"+
    "\3\0\16\3\1\u0196\24\3\3\0\2\3\11\0\1\3"+
    "\3\0\14\3\1\77\26\3\3\0\2\3\11\0\1\3"+
    "\3\0\16\3\1\u01c3\24\3\3\0\2\3\11\0\1\3"+
    "\3\0\13\3\1\74\27\3\3\0\2\3\11\0\1\3"+
    "\3\0\10\3\1\u01c4\32\3\3\0\2\3\11\0\1\3"+
    "\3\0\33\3\1\355\7\3\3\0\2\3\11\0\1\3"+
    "\3\0\14\3\1\u01c5\26\3\3\0\2\3\11\0\1\u01c6"+
    "\3\0\43\3\3\0\2\3\11\0\1\3\3\0\14\3"+
    "\1\u01c7\26\3\3\0\2\3\11\0\1\3\3\0\24\3"+
    "\1\u01c8\16\3\3\0\2\3\11\0\1\3\3\0\15\3"+
    "\1\u01c9\25\3\3\0\2\3\11\0\1\3\3\0\14\3"+
    "\1\u01ca\10\3\1\u01cb\15\3\3\0\2\3\11\0\1\3"+
    "\3\0\20\3\1\u01cc\22\3\3\0\2\3\11\0\1\3"+
    "\3\0\26\3\1\u01cd\14\3\3\0\2\3\11\0\1\3"+
    "\3\0\20\3\1\u01ce\22\3\3\0\2\3\11\0\1\3"+
    "\3\0\1\u01cf\42\3\3\0\2\3\11\0\1\3\3\0"+
    "\26\3\1\u01d0\14\3\3\0\2\3\11\0\1\3\3\0"+
    "\16\3\1\u0115\24\3\3\0\2\3\11\0\1\3\3\0"+
    "\30\3\1\257\12\3\3\0\2\3\11\0\1\3\3\0"+
    "\21\3\1\u01d1\21\3\3\0\2\3\11\0\1\3\3\0"+
    "\26\3\1\u01d2\2\3\1\u01d3\11\3\3\0\2\3\11\0"+
    "\1\355\3\0\43\3\3\0\2\3\11\0\1\3\3\0"+
    "\13\3\1\u01d4\27\3\3\0\2\3\11\0\1\3\3\0"+
    "\14\3\1\324\26\3\3\0\2\3\11\0\1\3\3\0"+
    "\13\3\1\u01d5\27\3\3\0\2\3\11\0\1\3\3\0"+
    "\25\3\1\u01d6\15\3\3\0\2\3\11\0\1\3\3\0"+
    "\15\3\1\u01d7\25\3\3\0\2\3\11\0\1\3\3\0"+
    "\14\3\1\u01d8\26\3\3\0\2\3\11\0\1\3\3\0"+
    "\14\3\1\u01d9\3\3\1\u01c4\22\3\3\0\2\3\11\0"+
    "\1\3\3\0\14\3\1\223\26\3\3\0\2\3\11\0"+
    "\1\3\3\0\32\3\1\74\10\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\u01b5\42\3\3\0\2\3\11\0\1\3"+
    "\3\0\24\3\1\u01da\16\3\3\0\2\3\11\0\1\3"+
    "\3\0\20\3\1\u01db\22\3\3\0\2\3\11\0\1\u01dc"+
    "\3\0\43\3\3\0\2\3\11\0\1\3\3\0\25\3"+
    "\1\u01dd\15\3\3\0\2\3\11\0\1\3\3\0\14\3"+
    "\1\u017d\26\3\3\0\2\3\11\0\1\3\3\0\14\3"+
    "\1\355\26\3\3\0\2\3\11\0\1\3\3\0\20\3"+
    "\1\u01bf\22\3\3\0\2\3\11\0\1\3\3\0\26\3"+
    "\1\71\14\3\3\0\2\3\11\0\1\3\3\0\16\3"+
    "\1\u01de\24\3\3\0\2\3\11\0\1\3\3\0\1\u01df"+
    "\42\3\3\0\2\3\11\0\1\u01e0\3\0\43\3\3\0"+
    "\2\3\11\0\1\3\3\0\15\3\1\u0138\25\3\3\0"+
    "\2\3\11\0\1\3\3\0\25\3\1\312\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u0103\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\25\3\1\355\15\3\3\0\2\3"+
    "\11\0\1\3\3\0\25\3\1\u01e1\15\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\u01e2\42\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\u01e3\42\3\3\0\2\3\11\0\1\3"+
    "\3\0\10\3\1\u01e4\32\3\3\0\2\3\11\0\1\3"+
    "\3\0\25\3\1\u01e5\15\3\3\0\2\3\11\0\1\3"+
    "\3\0\11\3\1\u01e6\1\u01e7\1\3\1\u01e8\23\3\1\u01e9"+
    "\2\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u01ea"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\1\u014a\42\3"+
    "\3\0\2\3\11\0\1\3\3\0\16\3\1\u01eb\24\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\u01ec\42\3\3\0"+
    "\2\3\11\0\1\3\3\0\20\3\1\u0116\22\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\u01ed\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\u01ee\32\3\3\0"+
    "\2\3\11\0\1\3\3\0\13\3\1\u01ef\27\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u01f0\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\u01f1\42\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u01f2\14\3\1\u01f3\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u01f4\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\13\3\1\u01f5\27\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\u016e\42\3\3\0\2\3\11\0"+
    "\1\3\3\0\33\3\1\324\7\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u01f6\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\25\3\1\223\15\3\3\0\2\3\11\0"+
    "\1\3\3\0\32\3\1\u01f7\10\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u01f8\25\3\1\u01a0\4\3\3\0"+
    "\2\3\11\0\1\3\3\0\13\3\1\u01f9\27\3\3\0"+
    "\2\3\11\0\1\3\3\0\25\3\1\u01fa\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\143\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\22\3\1\u01fb\20\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\u01fc\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\116\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\16\3\1\u01fd\24\3\3\0\2\3"+
    "\11\0\1\3\3\0\13\3\1\u01fe\27\3\3\0\2\3"+
    "\11\0\1\3\3\0\12\3\1\71\30\3\3\0\2\3"+
    "\11\0\1\3\3\0\21\3\1\u01ff\21\3\3\0\2\3"+
    "\11\0\1\3\3\0\14\3\1\u0200\13\3\1\257\12\3"+
    "\3\0\2\3\11\0\1\u0201\3\0\43\3\3\0\2\3"+
    "\11\0\1\3\3\0\25\3\1\u0202\15\3\3\0\2\3"+
    "\11\0\1\3\3\0\14\3\1\223\1\u0203\25\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\77\32\3\3\0"+
    "\2\3\11\0\1\3\3\0\11\3\1\u0204\31\3\3\0"+
    "\2\3\11\0\1\3\3\0\13\3\1\u0205\27\3\3\0"+
    "\2\3\11\0\1\3\3\0\26\3\1\257\14\3\3\0"+
    "\2\3\11\0\1\3\3\0\21\3\1\223\21\3\3\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\u0206\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\25\3\1\u0207\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\15\3\1\u0208\25\3\3\0"+
    "\2\3\11\0\1\3\3\0\25\3\1\u0209\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\33\3\1\u020a\7\3\3\0"+
    "\2\3\11\0\1\3\3\0\11\3\1\u0146\31\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u020b\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\16\3\1\u020c\24\3\3\0\2\3"+
    "\11\0\1\3\3\0\14\3\1\u020d\26\3\3\0\2\3"+
    "\11\0\1\3\3\0\10\3\1\71\7\3\1\u0201\22\3"+
    "\3\0\2\3\11\0\1\3\3\0\13\3\1\u0100\27\3"+
    "\3\0\2\3\11\0\1\3\3\0\10\3\1\u020e\32\3"+
    "\3\0\2\3\11\0\1\3\3\0\22\3\1\u018a\20\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\u0167\42\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u020f\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\25\3\1\u0210\15\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\u0211\42\3\3\0\2\3\11\0"+
    "\1\3\3\0\34\3\1\324\6\3\3\0\2\3\11\0"+
    "\1\3\3\0\15\3\1\355\25\3\3\0\2\3\11\0"+
    "\1\3\3\0\13\3\1\u0212\27\3\34\0\1\u0213\33\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\u0214\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\74\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\u0215\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\16\3\1\223\24\3\3\0"+
    "\2\3\11\0\1\3\3\0\25\3\1\u0216\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\65\32\3\3\0"+
    "\2\3\11\0\1\3\3\0\20\3\1\u0209\22\3\3\0"+
    "\2\3\11\0\1\3\3\0\25\3\1\u0217\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\15\3\1\u01ac\25\3\3\0"+
    "\2\3\11\0\1\3\3\0\15\3\1\u0218\25\3\3\0"+
    "\2\3\11\0\1\3\3\0\25\3\1\216\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\u0183\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\26\3\1\u0219\14\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\u010b\5\3\1\u0195"+
    "\24\3\3\0\2\3\11\0\1\3\3\0\20\3\1\u021a"+
    "\22\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u021b"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\20\3\1\u021c"+
    "\22\3\3\0\2\3\11\0\1\3\3\0\1\127\42\3"+
    "\3\0\2\3\11\0\1\3\3\0\25\3\1\210\15\3"+
    "\3\0\2\3\11\0\1\3\3\0\21\3\1\u01a8\21\3"+
    "\3\0\2\3\11\0\1\3\3\0\22\3\1\u021d\20\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\u021e\42\3\3\0"+
    "\2\3\11\0\1\3\3\0\25\3\1\u01ac\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\u01df\32\3\3\0"+
    "\2\3\11\0\1\u0103\3\0\43\3\3\0\2\3\11\0"+
    "\1\3\3\0\25\3\1\u021f\15\3\3\0\2\3\11\0"+
    "\1\3\3\0\22\3\1\71\20\3\3\0\2\3\11\0"+
    "\1\u0102\3\0\43\3\3\0\2\3\11\0\1\3\3\0"+
    "\21\3\1\u0118\21\3\3\0\2\3\11\0\1\3\3\0"+
    "\10\3\1\261\32\3\3\0\2\3\11\0\1\3\3\0"+
    "\26\3\1\276\14\3\3\0\2\3\11\0\1\3\3\0"+
    "\14\3\1\210\26\3\3\0\2\3\11\0\1\3\3\0"+
    "\11\3\1\u0220\31\3\3\0\2\3\11\0\1\3\3\0"+
    "\14\3\1\230\26\3\3\0\2\3\11\0\1\3\3\0"+
    "\16\3\1\u0221\24\3\3\0\2\3\11\0\1\3\3\0"+
    "\10\3\1\u0222\32\3\3\0\2\3\11\0\1\3\3\0"+
    "\33\3\1\u010c\7\3\3\0\2\3\11\0\1\3\3\0"+
    "\20\3\1\u0223\22\3\3\0\2\3\11\0\1\u0224\3\0"+
    "\43\3\3\0\2\3\11\0\1\3\3\0\10\3\1\u0225"+
    "\32\3\3\0\2\3\11\0\1\3\3\0\15\3\1\u0226"+
    "\25\3\3\0\2\3\11\0\1\3\3\0\20\3\1\102"+
    "\22\3\3\0\2\3\11\0\1\3\3\0\11\3\1\u0227"+
    "\31\3\3\0\2\3\11\0\1\3\3\0\1\u0228\42\3"+
    "\3\0\2\3\11\0\1\3\3\0\26\3\1\u012f\14\3"+
    "\3\0\2\3\11\0\1\3\3\0\26\3\1\u0229\14\3"+
    "\3\0\2\3\11\0\1\3\3\0\25\3\1\u022a\15\3"+
    "\3\0\2\3\11\0\1\3\3\0\15\3\1\u0145\25\3"+
    "\3\0\2\3\11\0\1\3\3\0\21\3\1\u01c0\21\3"+
    "\3\0\2\3\11\0\1\3\3\0\14\3\1\u022b\26\3"+
    "\3\0\2\3\11\0\1\3\3\0\13\3\1\u022c\27\3"+
    "\3\0\2\3\11\0\1\3\3\0\17\3\1\u022d\23\3"+
    "\3\0\2\3\11\0\1\3\3\0\21\3\1\u022e\21\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\u022f\42\3\3\0"+
    "\2\3\11\0\1\3\3\0\30\3\1\324\12\3\3\0"+
    "\2\3\11\0\1\3\3\0\10\3\1\u0230\32\3\3\0"+
    "\2\3\11\0\1\3\3\0\20\3\1\u01df\22\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u0231\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\25\3\1\u0232\15\3\3\0\2\3"+
    "\11\0\1\3\3\0\10\3\1\u0233\32\3\3\0\2\3"+
    "\11\0\1\3\3\0\26\3\1\u012a\6\3\1\355\5\3"+
    "\3\0\2\3\11\0\1\3\3\0\11\3\1\74\31\3"+
    "\3\0\2\3\11\0\1\3\3\0\10\3\1\u0234\32\3"+
    "\3\0\2\3\11\0\1\3\3\0\26\3\1\u0235\14\3"+
    "\3\0\2\3\11\0\1\3\3\0\25\3\1\u0100\15\3"+
    "\3\0\2\3\11\0\1\3\3\0\14\3\1\u0115\26\3"+
    "\3\0\2\3\11\0\1\3\3\0\25\3\1\u0236\15\3"+
    "\3\0\2\3\11\0\1\3\3\0\20\3\1\u0237\22\3"+
    "\3\0\2\3\11\0\1\3\3\0\13\3\1\u0238\27\3"+
    "\3\0\2\3\11\0\1\3\3\0\26\3\1\u0239\14\3"+
    "\3\0\2\3\11\0\1\3\3\0\10\3\1\71\32\3"+
    "\3\0\2\3\11\0\1\3\3\0\33\3\1\u023a\7\3"+
    "\3\0\2\3\11\0\1\3\3\0\25\3\1\u0103\15\3"+
    "\3\0\2\3\11\0\1\3\3\0\14\3\1\u018a\26\3"+
    "\3\0\2\3\11\0\1\3\3\0\14\3\1\u023b\26\3"+
    "\3\0\2\3\11\0\1\3\3\0\35\3\1\257\5\3"+
    "\3\0\2\3\11\0\1\3\3\0\15\3\1\u023c\25\3"+
    "\22\0\1\u023d\45\0\2\3\11\0\1\3\3\0\25\3"+
    "\1\u023e\15\3\3\0\2\3\11\0\1\3\3\0\1\354"+
    "\7\3\1\310\32\3\3\0\2\3\11\0\1\3\3\0"+
    "\17\3\1\u0233\4\3\1\74\16\3\3\0\2\3\11\0"+
    "\1\3\3\0\24\3\1\u023f\16\3\3\0\2\3\11\0"+
    "\1\3\3\0\15\3\1\u012a\25\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u0240\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\15\3\1\u0241\25\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\103\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\15\3\1\u0242\25\3\3\0\2\3\11\0"+
    "\1\3\3\0\25\3\1\u0243\15\3\3\0\2\3\11\0"+
    "\1\3\3\0\15\3\1\u0244\25\3\3\0\2\3\11\0"+
    "\1\3\3\0\11\3\1\u0245\31\3\3\0\2\3\11\0"+
    "\1\u01c4\3\0\43\3\3\0\2\3\11\0\1\3\3\0"+
    "\1\u0246\42\3\3\0\2\3\11\0\1\3\3\0\13\3"+
    "\1\u0247\27\3\3\0\2\3\11\0\1\3\3\0\34\3"+
    "\1\u0248\6\3\3\0\2\3\11\0\1\3\3\0\1\u01e4"+
    "\42\3\3\0\2\3\11\0\1\3\3\0\17\3\1\u0178"+
    "\23\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u0249"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\1\u024a\42\3"+
    "\3\0\2\3\11\0\1\3\3\0\14\3\1\u024b\26\3"+
    "\3\0\2\3\11\0\1\3\3\0\17\3\1\u024c\23\3"+
    "\3\0\2\3\11\0\1\3\3\0\15\3\1\u024d\25\3"+
    "\3\0\2\3\11\0\1\3\3\0\10\3\1\u024e\32\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\71\24\3\1\u0150"+
    "\15\3\3\0\2\3\11\0\1\3\3\0\20\3\1\u020c"+
    "\22\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u024f"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\12\3\1\u0250"+
    "\30\3\3\0\2\3\11\0\1\3\3\0\21\3\1\u0233"+
    "\21\3\3\0\2\3\11\0\1\3\3\0\15\3\1\u0251"+
    "\25\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u0252"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u018a"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\16\3\1\u0253"+
    "\24\3\3\0\2\3\11\0\1\3\3\0\25\3\1\u0169"+
    "\15\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u0254"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\15\3\1\u0255"+
    "\25\3\3\0\2\3\11\0\1\3\3\0\25\3\1\u0256"+
    "\15\3\3\0\2\3\11\0\1\3\3\0\13\3\1\u0257"+
    "\27\3\3\0\2\3\11\0\1\3\3\0\36\3\1\u0258"+
    "\4\3\3\0\2\3\11\0\1\3\3\0\15\3\1\u0115"+
    "\25\3\3\0\2\3\11\0\1\3\3\0\30\3\1\u0259"+
    "\12\3\43\0\1\u025a\24\0\2\3\11\0\1\3\3\0"+
    "\31\3\1\u01a8\11\3\3\0\2\3\11\0\1\u025b\3\0"+
    "\43\3\3\0\2\3\11\0\1\3\3\0\33\3\1\u025c"+
    "\7\3\3\0\2\3\11\0\1\3\3\0\35\3\1\u0193"+
    "\5\3\3\0\2\3\11\0\1\3\3\0\1\u025d\42\3"+
    "\3\0\2\3\11\0\1\3\3\0\30\3\1\u0220\12\3"+
    "\3\0\2\3\11\0\1\3\3\0\21\3\1\346\21\3"+
    "\3\0\2\3\11\0\1\3\3\0\21\3\1\u025e\21\3"+
    "\3\0\2\3\11\0\1\3\3\0\30\3\1\346\12\3"+
    "\3\0\2\3\11\0\1\3\3\0\10\3\1\u025f\32\3"+
    "\3\0\2\3\11\0\1\3\3\0\26\3\1\u0260\14\3"+
    "\3\0\2\3\11\0\1\3\3\0\36\3\1\u0261\4\3"+
    "\3\0\2\3\11\0\1\3\3\0\1\354\42\3\3\0"+
    "\2\3\11\0\1\3\3\0\20\3\1\u0262\22\3\3\0"+
    "\2\3\11\0\1\3\3\0\26\3\1\u0263\14\3\3\0"+
    "\2\3\11\0\1\3\3\0\25\3\1\u0264\15\3\3\0"+
    "\2\3\11\0\1\3\3\0\1\u0265\42\3\3\0\2\3"+
    "\11\0\1\3\3\0\13\3\1\u0263\27\3\3\0\2\3"+
    "\11\0\1\3\3\0\30\3\1\200\12\3\3\0\2\3"+
    "\11\0\1\3\3\0\27\3\1\u0266\13\3\3\0\2\3"+
    "\11\0\1\3\3\0\27\3\1\u0267\13\3\3\0\2\3"+
    "\11\0\1\3\3\0\21\3\1\u0268\21\3\3\0\2\3"+
    "\11\0\1\3\3\0\25\3\1\u0269\15\3\3\0\2\3"+
    "\11\0\1\3\3\0\14\3\1\u026a\26\3\3\0\2\3"+
    "\11\0\1\3\3\0\13\3\1\u024b\27\3\3\0\2\3"+
    "\11\0\1\3\3\0\17\3\1\121\23\3\3\0\2\3"+
    "\11\0\1\3\3\0\36\3\1\u026b\4\3\3\0\2\3"+
    "\11\0\1\3\3\0\20\3\1\u010c\22\3\3\0\2\3"+
    "\11\0\1\3\3\0\26\3\1\u026c\14\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\223\42\3\3\0\2\3\11\0"+
    "\1\u01ab\3\0\11\3\1\u0100\1\3\1\u026d\27\3\3\0"+
    "\2\3\11\0\1\3\3\0\15\3\1\351\25\3\3\0"+
    "\2\3\11\0\1\3\3\0\13\3\1\u026e\27\3\3\0"+
    "\2\3\11\0\1\3\3\0\15\3\1\u026f\25\3\3\0"+
    "\2\3\11\0\1\3\3\0\14\3\1\u011e\26\3\3\0"+
    "\2\3\11\0\1\3\3\0\21\3\1\u025e\14\3\1\u0270"+
    "\4\3\3\0\2\3\11\0\1\3\3\0\10\3\1\u0271"+
    "\32\3\3\0\2\3\11\0\1\3\3\0\26\3\1\u0272"+
    "\3\3\1\u0273\10\3\3\0\2\3\11\0\1\3\3\0"+
    "\21\3\1\u0178\21\3\3\0\2\3\11\0\1\3\3\0"+
    "\20\3\1\u0136\22\3\3\0\2\3\11\0\1\3\3\0"+
    "\23\3\1\u0274\7\3\1\u0275\7\3\3\0\2\3\11\0"+
    "\1\3\3\0\20\3\1\u0276\22\3\3\0\2\3\11\0"+
    "\1\3\3\0\25\3\1\u0277\15\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\310\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\13\3\1\u0211\27\3\3\0\2\3\11\0"+
    "\1\3\3\0\25\3\1\u0278\15\3\3\0\2\3\11\0"+
    "\1\u0279\3\0\43\3\3\0\2\3\11\0\1\3\3\0"+
    "\25\3\1\u027a\15\3\3\0\2\3\11\0\1\3\3\0"+
    "\1\u027b\42\3\3\0\2\3\11\0\1\3\3\0\20\3"+
    "\1\u027c\22\3\3\0\2\3\11\0\1\3\3\0\25\3"+
    "\1\u027d\15\3\3\0\2\3\11\0\1\u027e\3\0\43\3"+
    "\3\0\2\3\11\0\1\3\3\0\33\3\1\u027f\7\3"+
    "\3\0\2\3\11\0\1\3\3\0\15\3\1\u0280\25\3"+
    "\3\0\2\3\11\0\1\3\3\0\11\3\1\u0197\31\3"+
    "\3\0\2\3\11\0\1\3\3\0\33\3\1\u0281\7\3"+
    "\3\0\2\3\11\0\1\3\3\0\27\3\1\u0282\13\3"+
    "\3\0\2\3\11\0\1\u0116\3\0\43\3\3\0\2\3"+
    "\11\0\1\3\3\0\15\3\1\u0196\25\3\3\0\2\3"+
    "\11\0\1\3\3\0\14\3\1\u012f\26\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\u0283\42\3\3\0\2\3\11\0"+
    "\1\3\3\0\26\3\1\u0193\14\3\3\0\2\3\11\0"+
    "\1\3\3\0\25\3\1\u0284\15\3\3\0\2\3\11\0"+
    "\1\3\3\0\17\3\1\u0285\23\3\3\0\2\3\11\0"+
    "\1\3\3\0\26\3\1\u01d2\14\3\3\0\2\3\11\0"+
    "\1\3\3\0\16\3\1\u0286\24\3\3\0\2\3\11\0"+
    "\1\3\3\0\23\3\1\u0287\17\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u0288\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\14\3\1\u0289\26\3\3\0\2\3\11\0"+
    "\1\3\3\0\14\3\1\u028a\26\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u028b\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\25\3\1\u028c\15\3\3\0\2\3\11\0"+
    "\1\3\3\0\26\3\1\u028d\14\3\3\0\2\3\11\0"+
    "\1\3\3\0\13\3\1\u028e\27\3\3\0\2\3\11\0"+
    "\1\3\3\0\1\u028f\42\3\3\0\2\3\11\0\1\3"+
    "\3\0\27\3\1\u0290\13\3\3\0\2\3\11\0\1\3"+
    "\3\0\11\3\1\u0291\1\3\1\u026e\27\3\3\0\2\3"+
    "\11\0\1\3\3\0\1\u0292\42\3\3\0\2\3\11\0"+
    "\1\3\3\0\13\3\1\u0293\27\3\3\0\2\3\11\0"+
    "\1\3\3\0\10\3\1\u0294\32\3\3\0\2\3\11\0"+
    "\1\3\3\0\25\3\1\u0295\15\3\3\0\2\3\11\0"+
    "\1\3\3\0\16\3\1\u0296\24\3\3\0\2\3\11\0"+
    "\1\3\3\0\26\3\1\u028f\14\3\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[34026];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\1\1\11\2\1\1\11\2\1\1\11\40\1\1\11"+
    "\1\1\1\0\1\1\1\0\3\1\1\0\167\1\2\0"+
    "\10\1\1\11\217\1\2\11\7\1\1\0\164\1\1\0"+
    "\121\1\1\0\51\1\1\0\34\1\1\11\74\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[662];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 210) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lexeme = yytext(); return Operador;
            } 
            // fall through
          case 17: break;
          case 2: 
            { return ERROR;
            } 
            // fall through
          case 18: break;
          case 3: 
            { lexeme=yytext(); return Identificador;
            } 
            // fall through
          case 19: break;
          case 4: 
            { lexeme = yytext(); return Entero;
            } 
            // fall through
          case 20: break;
          case 5: 
            { return Suma;
            } 
            // fall through
          case 21: break;
          case 6: 
            { /*Ignore*/
            } 
            // fall through
          case 22: break;
          case 7: 
            { lexeme = yytext(); return Simbolo;
            } 
            // fall through
          case 23: break;
          case 8: 
            { return Multiplicacion;
            } 
            // fall through
          case 24: break;
          case 9: 
            { return Division;
            } 
            // fall through
          case 25: break;
          case 10: 
            { return Resta;
            } 
            // fall through
          case 26: break;
          case 11: 
            { return Igual;
            } 
            // fall through
          case 27: break;
          case 12: 
            { lexeme = yytext(); return Double;
            } 
            // fall through
          case 28: break;
          case 13: 
            { lexeme=yytext(); return Reservadas;
            } 
            // fall through
          case 29: break;
          case 14: 
            { lexeme = yytext(); return String1;
            } 
            // fall through
          case 30: break;
          case 15: 
            { lexeme = yytext(); return ComentarioMultilinea;
            } 
            // fall through
          case 31: break;
          case 16: 
            { lexeme = yytext(); return ComentarioLinea;
            } 
            // fall through
          case 32: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
