/* The following code was generated by JFlex 1.7.0 */

package compisproyect;  
import static compisproyect.Tokens.*; 


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/herma/Documents/NetBeansProjects/compisProyect/src/compisproyect/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\52\1\53\1\53\1\53\22\0\1\3\7\0\1\57"+
    "\1\60\1\56\1\55\1\3\1\46\1\0\1\51\12\2\3\0\1\54"+
    "\3\0\1\13\1\31\1\25\1\14\1\15\1\27\1\35\1\30\1\32"+
    "\1\44\1\37\1\22\1\40\1\21\1\24\1\23\1\45\1\20\1\33"+
    "\1\17\1\26\1\42\1\41\1\16\1\34\1\36\4\0\1\43\1\0"+
    "\4\1\1\10\1\7\1\1\1\50\1\4\2\1\1\11\1\1\1\5"+
    "\4\1\1\12\1\6\2\1\1\47\3\1\12\0\1\53\u1fa2\0\1\53"+
    "\1\53\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\32\2\1\5\1\2"+
    "\1\6\1\7\1\10\1\11\1\1\1\2\1\12\10\2"+
    "\1\12\20\2\1\12\12\2\1\12\15\2\2\12\3\2"+
    "\1\12\32\2\2\12\21\2\1\12\20\2\1\4\1\0"+
    "\2\2\1\12\7\2\1\12\15\2\1\12\57\2\1\12"+
    "\24\2\1\12\5\2\1\12\16\2\1\12\2\2\1\12"+
    "\6\2\1\12\14\2\1\12\4\2\1\12\10\2\1\0"+
    "\14\2\1\12\10\2\1\0\4\2\1\12\3\2\1\12"+
    "\2\2\1\12\20\2\1\12\7\2\1\12\3\2\1\12"+
    "\2\2\1\12\17\2\1\12\44\2\2\12\1\2\1\3"+
    "\15\2\1\0\1\12\52\2\1\12\31\2\1\12\5\2"+
    "\1\12\1\0\46\2\1\0\11\2\1\12\4\2\1\12"+
    "\6\2\1\12\5\2\1\12\6\2\1\12\3\2\1\12"+
    "\34\2\1\12\23\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[651];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\61\0\142\0\223\0\304\0\365\0\u0126\0\u0157"+
    "\0\u0188\0\u01b9\0\u01ea\0\u021b\0\u024c\0\u027d\0\u02ae\0\u02df"+
    "\0\u0310\0\u0341\0\u0372\0\u03a3\0\u03d4\0\u0405\0\u0436\0\u0467"+
    "\0\u0498\0\u04c9\0\u04fa\0\u052b\0\u055c\0\u058d\0\u05be\0\61"+
    "\0\u05ef\0\u0620\0\61\0\61\0\61\0\u0651\0\u0682\0\142"+
    "\0\u06b3\0\u06e4\0\u0715\0\u0746\0\u0777\0\u07a8\0\u07d9\0\u080a"+
    "\0\u083b\0\u086c\0\u089d\0\u08ce\0\u08ff\0\u0930\0\u0961\0\u0992"+
    "\0\u09c3\0\u09f4\0\u0a25\0\u0a56\0\u0a87\0\u0ab8\0\u0ae9\0\u0b1a"+
    "\0\u0b4b\0\u0b7c\0\u0bad\0\u0bde\0\u0c0f\0\u0c40\0\u0c71\0\u0ca2"+
    "\0\u0cd3\0\u0d04\0\u0d35\0\u0d66\0\u0d97\0\u0dc8\0\u0df9\0\u0e2a"+
    "\0\u0e5b\0\u0e8c\0\u0ebd\0\u0eee\0\u0f1f\0\u0f50\0\u0f81\0\u0fb2"+
    "\0\u0fe3\0\u1014\0\u1045\0\u1076\0\u10a7\0\u10d8\0\u1109\0\u113a"+
    "\0\u116b\0\u119c\0\u11cd\0\u11fe\0\u122f\0\u1260\0\u1291\0\u12c2"+
    "\0\u12f3\0\u1324\0\u1355\0\u1386\0\u13b7\0\u13e8\0\u1419\0\u144a"+
    "\0\u147b\0\u14ac\0\u14dd\0\u150e\0\u153f\0\u1570\0\u15a1\0\u15d2"+
    "\0\u1603\0\u1634\0\u1665\0\u1696\0\u16c7\0\u16f8\0\u1729\0\u175a"+
    "\0\u178b\0\u17bc\0\u17ed\0\u181e\0\u184f\0\u1880\0\u18b1\0\u18e2"+
    "\0\u1913\0\u1944\0\u1975\0\u19a6\0\u19d7\0\u1a08\0\u1a39\0\u1a6a"+
    "\0\u1a9b\0\u1acc\0\u1afd\0\u1b2e\0\u1b5f\0\u1b90\0\u1bc1\0\u1bf2"+
    "\0\u1c23\0\u1c54\0\u1c85\0\u1cb6\0\u1ce7\0\u1d18\0\u1d49\0\u1d7a"+
    "\0\u1dab\0\u1ddc\0\u1e0d\0\u1e3e\0\u1e6f\0\u1ea0\0\u1ed1\0\u1f02"+
    "\0\u1f33\0\u1f64\0\u1f95\0\u1fc6\0\u1ff7\0\u0b7c\0\u2028\0\u2059"+
    "\0\u208a\0\u20bb\0\u20ec\0\u211d\0\u214e\0\u217f\0\u21b0\0\u21e1"+
    "\0\u2212\0\u2243\0\u2274\0\u22a5\0\u22d6\0\u2307\0\u2338\0\u2369"+
    "\0\u239a\0\u23cb\0\u23fc\0\u242d\0\u245e\0\u248f\0\u24c0\0\u24f1"+
    "\0\u2522\0\u2553\0\u2584\0\u25b5\0\u25e6\0\u2617\0\u2648\0\u2679"+
    "\0\u26aa\0\u26db\0\u270c\0\u273d\0\u276e\0\u279f\0\u27d0\0\u2801"+
    "\0\u2832\0\u2863\0\u2894\0\u28c5\0\u28f6\0\u2927\0\u2958\0\u2989"+
    "\0\u29ba\0\u29eb\0\u2a1c\0\u2a4d\0\u2a7e\0\u2aaf\0\u2ae0\0\u2b11"+
    "\0\u2b42\0\u2b73\0\u2ba4\0\u2bd5\0\u2c06\0\u2c37\0\u2c68\0\u2c99"+
    "\0\u2cca\0\u2cfb\0\u2d2c\0\u2d5d\0\u2d8e\0\u2dbf\0\u2df0\0\u2e21"+
    "\0\u2e52\0\u2e83\0\u2eb4\0\u2ee5\0\u2f16\0\u2f47\0\u2f78\0\u2fa9"+
    "\0\u2fda\0\u300b\0\u303c\0\u306d\0\u309e\0\u30cf\0\u3100\0\u3131"+
    "\0\u3162\0\u3193\0\u31c4\0\u2f47\0\u31f5\0\u3226\0\u3257\0\u3288"+
    "\0\u32b9\0\u32ea\0\u331b\0\u334c\0\u337d\0\u33ae\0\u33df\0\u3410"+
    "\0\u3441\0\u3472\0\u34a3\0\u34d4\0\u3505\0\u3536\0\u3567\0\u3598"+
    "\0\u35c9\0\u35fa\0\u362b\0\u365c\0\u368d\0\u36be\0\u36ef\0\u3720"+
    "\0\u3751\0\u3782\0\u37b3\0\u37e4\0\u3815\0\u3846\0\u3877\0\u38a8"+
    "\0\u38d9\0\u390a\0\u393b\0\u396c\0\u399d\0\u39ce\0\u39ff\0\u3a30"+
    "\0\u3a61\0\u3a92\0\u3ac3\0\u3af4\0\u3b25\0\u3b56\0\u3b87\0\u3bb8"+
    "\0\u3be9\0\u3c1a\0\u3c4b\0\u3c7c\0\u3cad\0\u3cde\0\u3d0f\0\u3d40"+
    "\0\u3d71\0\u3da2\0\u3dd3\0\u3e04\0\u3e35\0\u3e66\0\u3e97\0\u3ec8"+
    "\0\u3ef9\0\u3f2a\0\u3f5b\0\u3f8c\0\u3fbd\0\u3fee\0\u401f\0\u4050"+
    "\0\u4081\0\u40b2\0\u40e3\0\u4114\0\u4145\0\u4176\0\u41a7\0\u41d8"+
    "\0\u4209\0\u423a\0\u426b\0\u429c\0\u42cd\0\u42fe\0\u432f\0\u4360"+
    "\0\u4391\0\u43c2\0\u43f3\0\u4424\0\u4455\0\u4486\0\u44b7\0\u44e8"+
    "\0\u4519\0\u454a\0\u457b\0\u45ac\0\u45dd\0\u460e\0\u463f\0\u4670"+
    "\0\u46a1\0\u46d2\0\u4703\0\u4734\0\u4765\0\u4796\0\u47c7\0\u47f8"+
    "\0\u4829\0\u485a\0\u488b\0\u48bc\0\u48ed\0\u3877\0\u491e\0\u494f"+
    "\0\u4980\0\u49b1\0\u49e2\0\u4a13\0\u4a44\0\u4a75\0\u4aa6\0\u4ad7"+
    "\0\u4b08\0\u4b39\0\u4b6a\0\u4b9b\0\u4bcc\0\u4bfd\0\u4c2e\0\u4c5f"+
    "\0\u4c90\0\u4cc1\0\u4cf2\0\u4d23\0\u4d54\0\u4d85\0\u4db6\0\u4de7"+
    "\0\u4e18\0\u4e49\0\u4e7a\0\u4eab\0\u4edc\0\u4f0d\0\u4f3e\0\u4f6f"+
    "\0\u4fa0\0\u4fd1\0\u5002\0\u5033\0\u5064\0\u5095\0\u50c6\0\u50f7"+
    "\0\u5128\0\61\0\u5159\0\u518a\0\u1e0d\0\u51bb\0\u51ec\0\u521d"+
    "\0\u524e\0\u527f\0\u52b0\0\u52e1\0\u5312\0\u5343\0\u5374\0\u53a5"+
    "\0\u53d6\0\u5407\0\u5438\0\u5469\0\u549a\0\u54cb\0\u54fc\0\u552d"+
    "\0\u555e\0\u558f\0\u55c0\0\u55f1\0\u5622\0\u5653\0\u5684\0\u56b5"+
    "\0\u56e6\0\u5717\0\u5748\0\u5779\0\u57aa\0\u57db\0\u580c\0\u583d"+
    "\0\u586e\0\u589f\0\u58d0\0\u5901\0\u5932\0\u331b\0\u5963\0\u5994"+
    "\0\u59c5\0\u59f6\0\u5a27\0\u5a58\0\u5a89\0\u5aba\0\u5aeb\0\u5b1c"+
    "\0\u5b4d\0\u5b7e\0\u5baf\0\u5be0\0\u5c11\0\u5c42\0\u5c73\0\u5ca4"+
    "\0\u5cd5\0\u5d06\0\u5d37\0\u5d68\0\u5d99\0\u5dca\0\u5dfb\0\u5e2c"+
    "\0\u5e5d\0\u5e8e\0\u5ebf\0\u5ef0\0\u5f21\0\u5f52\0\u5f83\0\u5fb4"+
    "\0\u5fe5\0\u6016\0\u6047\0\u6078\0\u60a9\0\u4360\0\u60da\0\u610b"+
    "\0\u613c\0\u616d\0\u619e\0\u1e3e\0\u61cf\0\u6200\0\u6231\0\u6262"+
    "\0\u6293\0\u62c4\0\u62f5\0\u6326\0\u6357\0\u6388\0\u63b9\0\u63ea"+
    "\0\u641b\0\u644c\0\u647d\0\u64ae\0\u64df\0\u6510\0\u6541\0\u6572"+
    "\0\u65a3\0\u65d4\0\u6605\0\u6636\0\u6667\0\u6698\0\u66c9\0\u66fa"+
    "\0\u672b\0\u675c\0\u678d\0\u67be\0\u67ef\0\u6820\0\u6851\0\u6882"+
    "\0\u68b3\0\u68e4\0\u6915\0\u6946\0\u6977\0\u69a8\0\u69d9\0\u6a0a"+
    "\0\u6a3b\0\u6a6c\0\u6a9d\0\u6ace\0\u6aff\0\u2863\0\u6b30\0\u6b61"+
    "\0\u6b92\0\u6bc3\0\u6bf4\0\u6c25\0\u6c56\0\u6c87\0\u6cb8\0\u1076"+
    "\0\u6ce9\0\u6851\0\u6d1a\0\u6d4b\0\u3505\0\u6d7c\0\u6dad\0\61"+
    "\0\u6dde\0\u6e0f\0\u6e40\0\u6e71\0\u6ea2\0\u6ed3\0\u6f04\0\u6f35"+
    "\0\u6f66\0\u6f97\0\u6fc8\0\u6ff9\0\u702a\0\u705b\0\u708c\0\u70bd"+
    "\0\u70ee\0\u711f\0\u7150\0\u7181\0\u71b2\0\u71e3\0\u7214\0\u7245"+
    "\0\u7276\0\u72a7\0\u72d8\0\u7309\0\u733a\0\u736b\0\u739c\0\u73cd"+
    "\0\u73fe\0\u742f\0\u7460\0\u7491\0\u74c2\0\u74f3\0\u7524\0\u7555"+
    "\0\u7586\0\u75b7\0\u75e8\0\u7619\0\u764a\0\u767b\0\u76ac\0\u76dd"+
    "\0\u770e\0\u773f\0\u7770\0\u6f04\0\u77a1\0\u77d2\0\u7803\0\u7834"+
    "\0\u7865\0\u7896\0\u78c7";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[651];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\3\3\1\7\2\3"+
    "\1\10\1\11\1\12\1\3\1\13\1\14\1\15\1\16"+
    "\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
    "\1\3\1\37\1\3\1\40\1\41\1\3\1\42\1\5"+
    "\1\0\1\43\1\44\1\45\1\46\1\2\62\0\2\3"+
    "\1\0\42\3\1\0\2\3\12\0\1\4\61\0\1\5"+
    "\46\0\1\5\7\0\2\3\1\0\1\3\1\47\1\3"+
    "\1\50\36\3\1\0\2\3\11\0\2\3\1\0\5\3"+
    "\1\51\34\3\1\0\2\3\11\0\2\3\1\0\10\3"+
    "\1\52\2\3\1\50\1\53\1\54\1\55\2\3\1\56"+
    "\1\57\2\3\1\60\1\3\1\61\6\3\1\62\3\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\63\1\3"+
    "\1\64\2\3\1\65\3\3\1\66\1\3\1\67\2\3"+
    "\1\70\1\71\13\3\1\0\2\3\11\0\2\3\1\0"+
    "\12\3\1\72\1\3\1\73\1\74\1\75\10\3\1\76"+
    "\12\3\1\0\2\3\11\0\2\3\1\0\7\3\1\77"+
    "\1\3\1\100\2\3\1\101\3\3\1\102\3\3\1\103"+
    "\1\3\1\104\1\105\12\3\1\0\2\3\11\0\2\3"+
    "\1\0\7\3\1\106\1\3\1\107\6\3\1\110\1\3"+
    "\1\111\3\3\1\112\13\3\1\0\2\3\11\0\2\3"+
    "\1\0\7\3\1\113\1\3\1\114\6\3\1\115\1\116"+
    "\1\117\17\3\1\0\2\3\11\0\2\3\1\0\7\3"+
    "\1\120\1\3\1\121\6\3\1\122\5\3\1\123\13\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\124\1\3"+
    "\1\125\2\3\1\126\1\3\1\127\1\3\1\130\1\3"+
    "\1\131\3\3\1\132\13\3\1\0\2\3\11\0\2\3"+
    "\1\0\14\3\1\133\1\134\1\3\1\135\1\3\1\136"+
    "\1\137\1\140\12\3\1\141\3\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\142\4\3\1\143\1\3\1\144"+
    "\1\3\1\145\1\3\1\146\1\3\1\147\15\3\1\0"+
    "\2\3\11\0\2\3\1\0\15\3\1\150\1\3\1\151"+
    "\7\3\1\152\12\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\153\1\3\1\154\2\3\1\155\1\3\1\156"+
    "\1\3\1\157\1\3\1\160\3\3\1\161\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\7\3\1\162\10\3\1\163"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\7\3\1\164"+
    "\1\3\1\165\2\3\1\166\3\3\1\167\1\3\1\170"+
    "\3\3\1\171\1\3\1\50\11\3\1\0\2\3\11\0"+
    "\2\3\1\0\10\3\1\172\4\3\1\173\5\3\1\50"+
    "\3\3\1\174\4\3\1\175\5\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\176\1\3\1\177\1\3\1\200"+
    "\3\3\1\201\1\202\1\203\1\204\1\3\1\205\1\3"+
    "\1\206\1\3\1\207\3\3\1\210\4\3\1\211\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\212\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\213\2\3\1\214"+
    "\1\3\1\215\1\3\1\216\21\3\1\0\2\3\11\0"+
    "\2\3\1\0\20\3\1\217\21\3\1\0\2\3\11\0"+
    "\2\3\1\0\11\3\1\220\14\3\1\221\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\7\3\1\222\1\3\1\223"+
    "\6\3\1\224\5\3\1\225\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\226\4\3\1\227\3\3\1\230"+
    "\3\3\1\231\1\3\1\232\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\233\16\3\1\234\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\20\3\1\235\21\3\1\0"+
    "\2\3\11\0\2\3\1\0\42\3\1\0\1\3\1\236"+
    "\61\0\1\237\55\0\1\240\13\0\2\3\1\0\2\3"+
    "\1\50\37\3\1\0\2\3\11\0\2\3\1\0\6\3"+
    "\1\241\33\3\1\0\2\3\11\0\2\3\1\0\7\3"+
    "\2\50\31\3\1\0\2\3\11\0\2\3\1\0\11\3"+
    "\1\50\30\3\1\0\2\3\11\0\2\3\1\0\10\3"+
    "\1\50\17\3\1\50\11\3\1\0\2\3\11\0\2\3"+
    "\1\0\13\3\1\242\2\3\1\243\23\3\1\0\2\3"+
    "\11\0\2\3\1\0\13\3\1\244\26\3\1\0\2\3"+
    "\11\0\2\3\1\0\13\3\1\245\26\3\1\0\2\3"+
    "\11\0\2\3\1\0\27\3\1\246\12\3\1\0\2\3"+
    "\11\0\2\3\1\0\21\3\1\50\5\3\1\247\12\3"+
    "\1\0\2\3\11\0\2\3\1\0\31\3\1\50\10\3"+
    "\1\0\2\3\11\0\2\3\1\0\13\3\1\250\14\3"+
    "\1\50\11\3\1\0\2\3\11\0\2\3\1\0\7\3"+
    "\1\251\5\3\1\220\1\252\2\3\1\253\1\3\1\254"+
    "\3\3\1\255\12\3\1\0\2\3\11\0\2\3\1\0"+
    "\20\3\1\256\21\3\1\0\2\3\11\0\2\3\1\0"+
    "\22\3\1\257\11\3\1\260\5\3\1\0\2\3\11\0"+
    "\2\3\1\0\34\3\1\256\5\3\1\0\2\3\11\0"+
    "\2\3\1\0\21\3\1\261\20\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\262\17\3\1\263\12\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\264\1\3\1\265"+
    "\5\3\1\266\4\3\1\267\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\14\3\1\270\25\3\1\0\2\3\11\0"+
    "\2\3\1\0\10\3\1\271\31\3\1\0\2\3\11\0"+
    "\2\3\1\0\27\3\1\53\12\3\1\0\2\3\11\0"+
    "\2\3\1\0\21\3\1\272\20\3\1\0\2\3\11\0"+
    "\2\3\1\0\25\3\1\273\14\3\1\0\2\3\11\0"+
    "\2\3\1\0\12\3\1\274\21\3\1\275\5\3\1\0"+
    "\2\3\11\0\2\3\1\0\7\3\1\276\12\3\1\277"+
    "\3\3\1\300\1\3\1\301\11\3\1\0\2\3\11\0"+
    "\2\3\1\0\17\3\1\50\22\3\1\0\2\3\11\0"+
    "\2\3\1\0\11\3\1\302\30\3\1\0\2\3\11\0"+
    "\2\3\1\0\34\3\1\303\5\3\1\0\2\3\11\0"+
    "\2\3\1\0\11\3\1\304\30\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\305\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\306\3\3\1\307\2\3\1\310"+
    "\1\311\1\3\1\312\1\3\1\313\3\3\1\314\6\3"+
    "\1\315\3\3\1\0\2\3\11\0\2\3\1\0\16\3"+
    "\1\316\16\3\1\317\4\3\1\0\2\3\11\0\2\3"+
    "\1\0\16\3\1\53\23\3\1\0\2\3\11\0\2\3"+
    "\1\0\31\3\1\320\10\3\1\0\2\3\11\0\2\3"+
    "\1\0\13\3\1\321\20\3\1\322\5\3\1\0\2\3"+
    "\11\0\2\3\1\0\12\3\1\213\27\3\1\0\2\3"+
    "\11\0\2\3\1\0\13\3\1\50\1\3\1\323\3\3"+
    "\1\324\20\3\1\0\2\3\11\0\2\3\1\0\24\3"+
    "\1\212\15\3\1\0\2\3\11\0\2\3\1\0\16\3"+
    "\1\325\15\3\1\326\5\3\1\0\2\3\11\0\2\3"+
    "\1\0\15\3\1\327\11\3\1\213\12\3\1\0\2\3"+
    "\11\0\2\3\1\0\7\3\1\330\13\3\1\213\12\3"+
    "\1\331\3\3\1\0\2\3\11\0\2\3\1\0\7\3"+
    "\1\332\11\3\1\333\13\3\1\242\4\3\1\0\2\3"+
    "\11\0\2\3\1\0\15\3\1\334\15\3\1\53\6\3"+
    "\1\0\2\3\11\0\2\3\1\0\10\3\1\50\3\3"+
    "\1\335\12\3\1\336\12\3\1\0\2\3\11\0\2\3"+
    "\1\0\14\3\1\337\25\3\1\0\2\3\11\0\2\3"+
    "\1\0\11\3\1\340\6\3\1\341\5\3\1\342\13\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\302\32\3"+
    "\1\0\2\3\11\0\2\3\1\0\27\3\1\343\12\3"+
    "\1\0\2\3\11\0\2\3\1\0\25\3\1\344\14\3"+
    "\1\0\2\3\11\0\2\3\1\0\36\3\1\345\3\3"+
    "\1\0\2\3\11\0\2\3\1\0\10\3\1\242\31\3"+
    "\1\0\2\3\11\0\2\3\1\0\16\3\1\220\23\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\346\1\3"+
    "\1\244\26\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\347\26\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\350\26\3\1\0\2\3\11\0\2\3\1\0\23\3"+
    "\1\351\16\3\1\0\2\3\11\0\2\3\1\0\11\3"+
    "\1\352\30\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\353\13\3\1\354\12\3\1\0\2\3\11\0\2\3"+
    "\1\0\11\3\1\355\6\3\1\356\21\3\1\0\2\3"+
    "\11\0\2\3\1\0\20\3\1\75\1\3\1\357\17\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\360\4\3"+
    "\1\361\1\362\1\363\3\3\1\364\11\3\1\365\5\3"+
    "\1\0\2\3\11\0\2\3\1\0\14\3\1\366\25\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\367\1\3"+
    "\1\370\30\3\1\0\2\3\11\0\2\3\1\0\17\3"+
    "\1\371\6\3\1\372\4\3\1\373\6\3\1\0\2\3"+
    "\11\0\2\3\1\0\10\3\1\374\6\3\1\242\22\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\375\1\3"+
    "\1\376\14\3\1\377\13\3\1\0\2\3\11\0\2\3"+
    "\1\0\16\3\1\75\23\3\1\0\2\3\11\0\2\3"+
    "\1\0\13\3\1\u0100\26\3\1\0\2\3\11\0\2\3"+
    "\1\0\11\3\1\u0101\6\3\1\u0102\21\3\1\0\2\3"+
    "\11\0\2\3\1\0\20\3\1\u0103\21\3\1\0\2\3"+
    "\11\0\2\3\1\0\14\3\1\u0104\5\3\1\u0105\17\3"+
    "\1\0\2\3\11\0\2\3\1\0\15\3\1\u0106\1\u0107"+
    "\23\3\1\0\2\3\11\0\2\3\1\0\14\3\1\u0108"+
    "\1\3\1\u0109\23\3\1\0\2\3\11\0\2\3\1\0"+
    "\36\3\1\u010a\3\3\1\0\2\3\11\0\2\3\1\0"+
    "\16\3\1\u010b\3\3\1\u010c\17\3\1\0\2\3\11\0"+
    "\2\3\1\0\21\3\1\u010d\20\3\1\0\2\3\11\0"+
    "\2\3\1\0\13\3\1\u010e\15\3\1\235\10\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\u010f\6\3\1\u0110"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\13\3\1\u0111"+
    "\26\3\1\0\2\3\11\0\2\3\1\0\16\3\1\u0112"+
    "\23\3\1\0\2\3\11\0\2\3\1\0\13\3\1\u0113"+
    "\26\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u0114"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\10\3\1\u0115"+
    "\2\3\1\u0116\1\3\1\242\1\3\1\u0117\1\3\1\u0118"+
    "\4\3\1\u0119\1\u011a\12\3\1\0\2\3\11\0\2\3"+
    "\1\0\20\3\1\u011b\21\3\1\0\2\3\11\0\2\3"+
    "\1\0\34\3\1\u011c\5\3\1\0\2\3\11\0\2\3"+
    "\1\0\36\3\1\53\3\3\1\0\2\3\11\0\2\3"+
    "\1\0\13\3\1\u011d\2\3\1\u011e\2\3\1\u011f\5\3"+
    "\1\u0120\4\3\1\u0121\5\3\1\0\2\3\11\0\2\3"+
    "\1\0\7\3\1\u0122\32\3\1\0\2\3\11\0\2\3"+
    "\1\0\7\3\1\u0123\32\3\1\0\2\3\11\0\2\3"+
    "\1\0\34\3\1\53\5\3\1\0\2\3\11\0\2\3"+
    "\1\0\14\3\1\u0124\7\3\1\u0125\15\3\1\0\2\3"+
    "\11\0\2\3\1\0\25\3\1\u0126\6\3\1\50\5\3"+
    "\1\0\2\3\11\0\2\3\1\0\22\3\1\u0127\17\3"+
    "\1\0\2\3\11\0\2\3\1\0\32\3\1\53\7\3"+
    "\1\0\2\3\11\0\2\3\1\0\27\3\1\u0128\12\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\u0129\32\3"+
    "\1\0\2\3\11\0\2\3\1\0\16\3\1\u012a\23\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\u010c\32\3"+
    "\1\0\2\3\11\0\2\3\1\0\13\3\1\50\26\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\364\10\3"+
    "\1\u012b\21\3\1\0\2\3\11\0\2\3\1\0\20\3"+
    "\1\u012c\21\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\u012d\26\3\1\0\2\3\11\0\2\3\1\0\15\3"+
    "\1\53\24\3\1\0\2\3\11\0\2\3\1\0\30\3"+
    "\1\50\11\3\1\0\2\3\11\0\2\3\1\0\16\3"+
    "\1\u0107\23\3\1\0\2\3\11\0\2\3\1\0\12\3"+
    "\1\50\1\u0100\26\3\1\0\2\3\11\0\2\3\1\0"+
    "\14\3\1\375\25\3\1\0\2\3\11\0\2\3\1\0"+
    "\10\3\1\u012e\4\3\1\167\24\3\1\0\2\3\11\0"+
    "\2\3\1\0\15\3\1\u012f\24\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\u0130\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\u0131\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\14\3\1\u0112\25\3\1\0\2\3\11\0"+
    "\2\3\1\0\11\3\1\u0132\14\3\1\111\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\13\3\1\u0133\26\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\u0134\1\3\1\u0135"+
    "\23\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u0136"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\26\3\1\302"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\1\u0137\41\3"+
    "\1\0\2\3\10\0\52\237\2\0\5\237\2\0\1\u0138"+
    "\57\0\2\3\1\0\4\3\1\50\35\3\1\0\2\3"+
    "\11\0\2\3\1\0\11\3\1\u010c\30\3\1\0\2\3"+
    "\11\0\2\3\1\0\20\3\1\u0139\21\3\1\0\2\3"+
    "\11\0\2\3\1\0\26\3\1\u013a\13\3\1\0\2\3"+
    "\11\0\2\3\1\0\24\3\1\u013b\15\3\1\0\2\3"+
    "\11\0\2\3\1\0\20\3\1\u013c\21\3\1\0\2\3"+
    "\11\0\2\3\1\0\11\3\1\u013d\30\3\1\0\2\3"+
    "\11\0\2\3\1\0\7\3\1\u013e\1\3\1\50\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\16\3\1\u013f\23\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u0140\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\16\3\1\u0141\7\3"+
    "\1\u0142\13\3\1\0\2\3\11\0\2\3\1\0\7\3"+
    "\1\u0143\1\3\1\u0144\30\3\1\0\2\3\11\0\2\3"+
    "\1\0\21\3\1\u0145\20\3\1\0\2\3\11\0\2\3"+
    "\1\0\25\3\1\111\14\3\1\0\2\3\11\0\2\3"+
    "\1\0\7\3\1\235\32\3\1\0\2\3\11\0\2\3"+
    "\1\0\21\3\1\50\20\3\1\0\2\3\11\0\2\3"+
    "\1\0\31\3\1\u0146\10\3\1\0\2\3\11\0\2\3"+
    "\1\0\13\3\1\u0147\5\3\1\u0148\11\3\1\50\6\3"+
    "\1\0\2\3\11\0\2\3\1\0\21\3\1\u012f\20\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u0149\2\3"+
    "\1\u014a\25\3\1\0\2\3\11\0\2\3\1\0\11\3"+
    "\1\u014b\30\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\50\13\3\1\u014c\12\3\1\0\2\3\11\0\2\3"+
    "\1\0\16\3\1\u014d\23\3\1\0\2\3\11\0\2\3"+
    "\1\0\42\3\1\u014e\2\3\11\0\2\3\1\0\7\3"+
    "\1\u014f\32\3\1\0\2\3\11\0\2\3\1\0\16\3"+
    "\1\u0150\23\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\u0151\26\3\1\0\2\3\11\0\2\3\1\0\17\3"+
    "\1\u0152\22\3\1\0\2\3\11\0\2\3\1\0\15\3"+
    "\1\u0153\10\3\1\u0154\13\3\1\0\2\3\11\0\2\3"+
    "\1\0\11\3\1\50\3\3\1\u0139\24\3\1\0\2\3"+
    "\11\0\2\3\1\0\31\3\1\u0155\2\3\1\50\5\3"+
    "\1\0\2\3\11\0\2\3\1\0\37\3\1\u0156\2\3"+
    "\1\0\2\3\11\0\2\3\1\0\15\3\1\50\24\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u0157\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\41\3\1\u0158\1\0"+
    "\2\3\11\0\2\3\1\0\27\3\1\u0159\12\3\1\0"+
    "\2\3\11\0\2\3\1\0\10\3\1\u015a\5\3\1\50"+
    "\23\3\1\0\2\3\11\0\2\3\1\0\22\3\1\u015b"+
    "\17\3\1\0\2\3\11\0\2\3\1\0\7\3\1\u015c"+
    "\32\3\1\0\2\3\11\0\2\3\1\0\16\3\1\u015d"+
    "\23\3\1\0\2\3\11\0\2\3\1\0\20\3\1\u015e"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u015f"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\13\3\1\u0160"+
    "\26\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u0161"+
    "\6\3\1\u0162\21\3\1\0\2\3\11\0\2\3\1\0"+
    "\16\3\1\u0163\23\3\1\0\2\3\11\0\2\3\1\0"+
    "\21\3\1\u0164\5\3\1\50\1\3\1\u0165\10\3\1\0"+
    "\2\3\11\0\2\3\1\0\24\3\1\213\15\3\1\0"+
    "\2\3\11\0\2\3\1\0\22\3\1\u0166\3\3\1\u0167"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u0168"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\11\3\1\50"+
    "\7\3\1\u0169\20\3\1\0\2\3\11\0\2\3\1\0"+
    "\24\3\1\u016a\15\3\1\0\2\3\11\0\2\3\1\0"+
    "\16\3\1\u016b\23\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u016c\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\31\3\1\u016d\10\3\1\0\2\3\11\0\2\3\1\0"+
    "\10\3\1\u010a\31\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u0107\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\10\3\1\50\31\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u0107\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u016e\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\13\3\1\u016f\26\3\1\0\2\3\11\0\2\3\1\0"+
    "\21\3\1\333\20\3\1\0\2\3\11\0\2\3\1\0"+
    "\21\3\1\u0170\20\3\1\0\2\3\11\0\2\3\1\0"+
    "\17\3\1\u0141\1\3\1\u0171\5\3\1\u0172\12\3\1\0"+
    "\2\3\11\0\2\3\1\0\21\3\1\u0173\20\3\1\0"+
    "\2\3\11\0\2\3\1\0\15\3\1\213\2\3\1\u010c"+
    "\13\3\1\u0174\1\3\1\u0175\3\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\56\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\16\3\1\u0176\23\3\1\0\2\3\11\0"+
    "\2\3\1\0\20\3\1\213\21\3\1\0\2\3\11\0"+
    "\2\3\1\0\15\3\1\u0177\24\3\1\0\2\3\11\0"+
    "\2\3\1\0\11\3\1\u0178\30\3\1\0\2\3\11\0"+
    "\2\3\1\0\11\3\1\u010c\5\3\1\u0117\22\3\1\0"+
    "\2\3\11\0\2\3\1\0\27\3\1\u0179\12\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\u017a\25\3\1\0"+
    "\2\3\11\0\2\3\1\0\7\3\1\u017b\32\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\50\1\3\1\50"+
    "\5\3\1\u017c\20\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u0140\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\27\3\1\u0168\12\3\1\0\2\3\11\0\2\3\1\0"+
    "\27\3\1\u017d\12\3\1\0\2\3\11\0\2\3\1\0"+
    "\16\3\1\u017e\23\3\1\0\2\3\11\0\2\3\1\0"+
    "\14\3\1\u017f\25\3\1\0\2\3\11\0\2\3\1\0"+
    "\13\3\1\u0180\1\3\1\u0181\11\3\1\u0182\6\3\1\u0183"+
    "\3\3\1\0\2\3\11\0\2\3\1\0\16\3\1\u0184"+
    "\3\3\1\u0185\17\3\1\0\2\3\11\0\2\3\1\0"+
    "\15\3\1\213\24\3\1\0\2\3\11\0\2\3\1\0"+
    "\17\3\1\u0186\14\3\1\u0187\5\3\1\0\2\3\11\0"+
    "\2\3\1\0\14\3\1\u0188\12\3\1\u0189\12\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\u018a\25\3\1\0"+
    "\2\3\11\0\2\3\1\0\21\3\1\u018b\20\3\1\0"+
    "\2\3\11\0\2\3\1\0\26\3\1\132\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\20\3\1\302\20\3\1\u018c"+
    "\1\0\2\3\11\0\2\3\1\0\15\3\1\u018d\24\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\u0131\32\3"+
    "\1\0\2\3\11\0\2\3\1\0\31\3\1\53\10\3"+
    "\1\0\2\3\11\0\2\3\1\0\14\3\1\50\25\3"+
    "\1\0\2\3\11\0\2\3\1\0\15\3\1\62\24\3"+
    "\1\0\2\3\11\0\2\3\1\0\21\3\1\u0111\20\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u018e\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\34\3\1\50\5\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\213\32\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u018f\1\3"+
    "\1\u0190\26\3\1\0\2\3\11\0\2\3\1\0\15\3"+
    "\1\332\24\3\1\0\2\3\11\0\2\3\1\0\21\3"+
    "\1\56\20\3\1\0\2\3\11\0\2\3\1\0\16\3"+
    "\1\50\23\3\1\0\2\3\11\0\2\3\1\0\27\3"+
    "\1\213\12\3\1\0\2\3\11\0\2\3\1\0\11\3"+
    "\1\50\4\3\1\u0191\23\3\1\0\2\3\11\0\2\3"+
    "\1\0\26\3\1\377\13\3\1\0\2\3\11\0\2\3"+
    "\1\0\10\3\1\u0192\31\3\1\0\2\3\11\0\2\3"+
    "\1\0\33\3\1\u012b\6\3\1\0\2\3\11\0\2\3"+
    "\1\0\35\3\1\u0193\4\3\1\0\2\3\11\0\2\3"+
    "\1\0\7\3\1\u0112\32\3\1\0\2\3\11\0\2\3"+
    "\1\0\35\3\1\75\4\3\1\0\2\3\11\0\2\3"+
    "\1\0\24\3\1\50\15\3\1\0\2\3\11\0\2\3"+
    "\1\0\33\3\1\50\6\3\1\0\2\3\11\0\2\3"+
    "\1\0\37\3\1\u0194\2\3\1\0\2\3\11\0\2\3"+
    "\1\0\15\3\1\u0195\24\3\1\0\2\3\11\0\2\3"+
    "\1\0\11\3\1\u0196\14\3\1\u0197\13\3\1\0\2\3"+
    "\11\0\2\3\1\0\11\3\1\u0198\6\3\1\50\21\3"+
    "\1\0\2\3\11\0\2\3\1\0\22\3\1\213\17\3"+
    "\1\0\2\3\11\0\2\3\1\0\16\3\1\u0199\23\3"+
    "\1\0\2\3\11\0\2\3\1\0\13\3\1\u019a\26\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u019b\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\16\3\1\u019c\23\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u019d\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\22\3\1\u019e\17\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u019f\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\13\3\1\244\4\3"+
    "\1\u0105\1\3\1\u01a0\17\3\1\0\2\3\11\0\2\3"+
    "\1\0\27\3\1\u01a1\12\3\1\0\2\3\11\0\2\3"+
    "\1\0\7\3\1\u01a2\32\3\1\0\2\3\11\0\2\3"+
    "\1\0\13\3\1\u01a3\26\3\1\0\2\3\11\0\2\3"+
    "\1\0\21\3\1\53\20\3\1\0\2\3\11\0\2\3"+
    "\1\0\20\3\1\221\21\3\1\0\2\3\11\0\2\3"+
    "\1\0\11\3\1\u01a4\30\3\1\0\2\3\11\0\2\3"+
    "\1\0\27\3\1\u01a5\12\3\1\0\2\3\11\0\2\3"+
    "\1\0\13\3\1\u01a6\26\3\1\0\2\3\11\0\2\3"+
    "\1\0\13\3\1\u01a7\26\3\1\0\2\3\11\0\2\3"+
    "\1\0\16\3\1\u01a8\23\3\1\0\2\3\11\0\2\3"+
    "\1\0\11\3\1\u01a9\7\3\1\u01aa\5\3\1\u01ab\5\3"+
    "\1\u01ac\4\3\1\0\2\3\11\0\2\3\1\0\22\3"+
    "\1\256\17\3\1\0\2\3\11\0\2\3\1\0\25\3"+
    "\1\333\14\3\1\0\2\3\11\0\2\3\1\0\20\3"+
    "\1\50\21\3\1\0\2\3\11\0\2\3\1\0\22\3"+
    "\1\111\17\3\1\0\2\3\11\0\2\3\1\0\22\3"+
    "\1\u0140\17\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\u01ad\26\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\u01ae\26\3\1\0\2\3\11\0\2\3\1\0\14\3"+
    "\1\53\1\u01af\24\3\1\0\2\3\11\0\2\3\1\0"+
    "\24\3\1\u01b0\15\3\1\0\2\3\11\0\2\3\1\0"+
    "\21\3\1\116\6\3\1\u010a\11\3\1\0\2\3\11\0"+
    "\2\3\1\0\22\3\1\u01b1\17\3\1\0\2\3\11\0"+
    "\2\3\1\0\35\3\1\50\4\3\1\0\2\3\11\0"+
    "\2\3\1\0\5\3\1\241\34\3\1\0\2\3\12\0"+
    "\1\u0138\55\0\1\u01b2\1\0\2\3\1\0\21\3\1\355"+
    "\20\3\1\0\2\3\11\0\2\3\1\0\20\3\1\302"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\20\3\1\u01b3"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\16\3\1\u0186"+
    "\23\3\1\0\2\3\11\0\2\3\1\0\14\3\1\56"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\25\3\1\u01b4"+
    "\14\3\1\0\2\3\11\0\2\3\1\0\16\3\1\u01b5"+
    "\23\3\1\0\2\3\11\0\2\3\1\0\13\3\1\53"+
    "\26\3\1\0\2\3\11\0\2\3\1\0\7\3\1\u01b6"+
    "\32\3\1\0\2\3\11\0\2\3\1\0\34\3\1\333"+
    "\5\3\1\0\2\3\11\0\2\3\1\0\22\3\1\u01b7"+
    "\17\3\1\0\2\3\11\0\2\3\1\0\14\3\1\u01b8"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\14\3\1\u01b9"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\15\3\1\u01ba"+
    "\24\3\1\0\2\3\11\0\2\3\1\0\14\3\1\u01bb"+
    "\11\3\1\u01bc\13\3\1\0\2\3\11\0\2\3\1\0"+
    "\20\3\1\u01bd\21\3\1\0\2\3\11\0\2\3\1\0"+
    "\14\3\1\u01be\25\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u019f\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\17\3\1\u01bf\22\3\1\0\2\3\11\0\2\3\1\0"+
    "\13\3\1\u0168\26\3\1\0\2\3\11\0\2\3\1\0"+
    "\36\3\1\u0107\3\3\1\0\2\3\25\0\1\u01c0\44\0"+
    "\2\3\1\0\17\3\1\53\22\3\1\0\2\3\11\0"+
    "\2\3\1\0\11\3\1\u01c1\30\3\1\0\2\3\11\0"+
    "\2\3\1\0\27\3\1\u01c2\12\3\1\0\2\3\11\0"+
    "\2\3\1\0\20\3\1\u01c3\21\3\1\0\2\3\11\0"+
    "\2\3\1\0\27\3\1\u01c4\12\3\1\0\2\3\11\0"+
    "\2\3\1\0\16\3\1\u010a\23\3\1\0\2\3\11\0"+
    "\2\3\1\0\31\3\1\242\10\3\1\0\2\3\11\0"+
    "\2\3\1\0\21\3\1\u01c5\20\3\1\0\2\3\11\0"+
    "\2\3\1\0\27\3\1\u01c6\2\3\1\u01c7\7\3\1\0"+
    "\2\3\11\0\2\3\1\0\22\3\1\333\17\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\u01a9\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\13\3\1\u01c8\26\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\302\25\3\1\0"+
    "\2\3\11\0\2\3\1\0\13\3\1\u01c9\26\3\1\0"+
    "\2\3\11\0\2\3\1\0\26\3\1\u01ca\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\15\3\1\u01cb\24\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\u01cc\25\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\u01cd\3\3\1\u01b6"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\14\3\1\213"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\33\3\1\53"+
    "\6\3\1\0\2\3\11\0\2\3\1\0\25\3\1\u01ce"+
    "\14\3\1\0\2\3\11\0\2\3\1\0\20\3\1\u01cf"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\22\3\1\u01d0"+
    "\17\3\1\0\2\3\11\0\2\3\1\0\14\3\1\333"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\20\3\1\u01be"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\27\3\1\50"+
    "\12\3\1\0\2\3\11\0\2\3\1\0\16\3\1\u01d1"+
    "\23\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u01d2"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\26\3\1\u01d3"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\14\3\1\u0176"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\22\3\1\u01d4"+
    "\17\3\1\0\2\3\11\0\2\3\1\0\15\3\1\u012d"+
    "\24\3\1\0\2\3\11\0\2\3\1\0\26\3\1\333"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\11\3\1\364"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\26\3\1\u01d5"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u01d6"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u01d7"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\7\3\1\u01d8"+
    "\32\3\1\0\2\3\11\0\2\3\1\0\26\3\1\u01d9"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\26\3\1\261"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\10\3\1\u01da"+
    "\1\3\1\u01db\1\3\1\u01dc\24\3\1\u01dd\1\0\2\3"+
    "\11\0\2\3\1\0\13\3\1\u01de\26\3\1\0\2\3"+
    "\11\0\2\3\1\0\11\3\1\u014c\30\3\1\0\2\3"+
    "\11\0\2\3\1\0\16\3\1\u01df\23\3\1\0\2\3"+
    "\11\0\2\3\1\0\16\3\1\u01e0\23\3\1\0\2\3"+
    "\11\0\2\3\1\0\7\3\1\u01e1\32\3\1\0\2\3"+
    "\11\0\2\3\1\0\13\3\1\u01e2\26\3\1\0\2\3"+
    "\11\0\2\3\1\0\11\3\1\u01e3\30\3\1\0\2\3"+
    "\11\0\2\3\1\0\11\3\1\u01e4\30\3\1\0\2\3"+
    "\11\0\2\3\1\0\7\3\1\u01e5\16\3\1\u01e6\13\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u01e7\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\13\3\1\u01e8\26\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u0161\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\u01e9\32\3"+
    "\1\0\2\3\11\0\2\3\1\0\34\3\1\302\5\3"+
    "\1\0\2\3\11\0\2\3\1\0\26\3\1\213\13\3"+
    "\1\0\2\3\11\0\2\3\1\0\11\3\1\u01ea\30\3"+
    "\1\0\2\3\11\0\2\3\1\0\20\3\1\u010c\21\3"+
    "\1\0\2\3\11\0\2\3\1\0\7\3\1\u01eb\27\3"+
    "\1\u0194\2\3\1\0\2\3\11\0\2\3\1\0\33\3"+
    "\1\u01ec\6\3\1\0\2\3\11\0\2\3\1\0\22\3"+
    "\1\53\17\3\1\0\2\3\11\0\2\3\1\0\20\3"+
    "\1\u01ed\21\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\u01ee\26\3\1\0\2\3\11\0\2\3\1\0\26\3"+
    "\1\u01ef\13\3\1\0\2\3\11\0\2\3\1\0\14\3"+
    "\1\127\25\3\1\0\2\3\11\0\2\3\1\0\23\3"+
    "\1\u01f0\16\3\1\0\2\3\11\0\2\3\1\0\16\3"+
    "\1\u01f1\23\3\1\0\2\3\11\0\2\3\1\0\11\3"+
    "\1\103\30\3\1\0\2\3\11\0\2\3\1\0\16\3"+
    "\1\u01f2\23\3\1\0\2\3\11\0\2\3\1\0\13\3"+
    "\1\u01f3\26\3\1\0\2\3\11\0\2\3\1\0\12\3"+
    "\1\50\27\3\1\0\2\3\11\0\2\3\1\0\21\3"+
    "\1\u01f4\20\3\1\0\2\3\11\0\2\3\1\0\14\3"+
    "\1\u01f5\14\3\1\242\10\3\1\0\2\3\11\0\2\3"+
    "\1\0\22\3\1\u01f6\17\3\1\0\2\3\11\0\2\3"+
    "\1\0\26\3\1\u01f7\13\3\1\0\2\3\11\0\2\3"+
    "\1\0\14\3\1\213\1\u01f8\24\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\56\32\3\1\0\2\3\11\0"+
    "\2\3\1\0\10\3\1\u01f9\31\3\1\0\2\3\11\0"+
    "\2\3\1\0\27\3\1\242\12\3\1\0\2\3\11\0"+
    "\2\3\1\0\21\3\1\213\20\3\1\0\2\3\11\0"+
    "\2\3\1\0\14\3\1\u01fa\25\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\u01fb\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\15\3\1\u01fc\24\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\u01fd\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\34\3\1\u01fe\5\3\1\0\2\3\11\0"+
    "\2\3\1\0\13\3\1\u01ff\26\3\1\0\2\3\11\0"+
    "\2\3\1\0\10\3\1\u018d\31\3\1\0\2\3\11\0"+
    "\2\3\1\0\11\3\1\u0200\30\3\1\0\2\3\11\0"+
    "\2\3\1\0\16\3\1\u0201\23\3\1\0\2\3\11\0"+
    "\2\3\1\0\14\3\1\u0202\25\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\50\10\3\1\u01f6\21\3\1\0"+
    "\2\3\11\0\2\3\1\0\13\3\1\355\26\3\1\0"+
    "\2\3\11\0\2\3\1\0\7\3\1\u0203\32\3\1\0"+
    "\2\3\11\0\2\3\1\0\23\3\1\u0189\16\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\u015a\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\u0204\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\26\3\1\u0205\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\u0206\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\u0207\25\3\1\0"+
    "\2\3\11\0\2\3\1\0\7\3\1\75\32\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\53\25\3\1\0"+
    "\2\3\11\0\2\3\1\0\16\3\1\213\23\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\u0208\25\3\1\0"+
    "\2\3\11\0\2\3\1\0\26\3\1\u0209\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\20\3\1\u01fd\21\3\1\0"+
    "\2\3\11\0\2\3\1\0\26\3\1\u020a\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\15\3\1\u019f\24\3\1\0"+
    "\2\3\11\0\2\3\1\0\15\3\1\u020b\24\3\1\0"+
    "\2\3\11\0\2\3\1\0\15\3\1\333\24\3\1\0"+
    "\2\3\11\0\2\3\1\0\13\3\1\u020c\26\3\1\0"+
    "\2\3\26\0\1\u020d\43\0\2\3\1\0\27\3\1\u020e"+
    "\12\3\1\0\2\3\11\0\2\3\1\0\26\3\1\206"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\14\3\1\u0174"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\7\3\1\u0106"+
    "\6\3\1\u0184\23\3\1\0\2\3\11\0\2\3\1\0"+
    "\20\3\1\u020f\21\3\1\0\2\3\11\0\2\3\1\0"+
    "\13\3\1\u0210\26\3\1\0\2\3\11\0\2\3\1\0"+
    "\20\3\1\u0211\21\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\114\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\26\3\1\176\13\3\1\0\2\3\11\0\2\3\1\0"+
    "\21\3\1\u019c\20\3\1\0\2\3\11\0\2\3\1\0"+
    "\23\3\1\u0212\16\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u0213\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\26\3\1\u019f\13\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u01d2\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\22\3\1\364\17\3\1\0\2\3\11\0\2\3\1\0"+
    "\26\3\1\u0214\13\3\1\0\2\3\11\0\2\3\1\0"+
    "\22\3\1\357\17\3\1\0\2\3\11\0\2\3\1\0"+
    "\21\3\1\u0112\20\3\1\0\2\3\11\0\2\3\1\0"+
    "\23\3\1\50\16\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\375\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\27\3\1\244\12\3\1\0\2\3\11\0\2\3\1\0"+
    "\14\3\1\176\25\3\1\0\2\3\11\0\2\3\1\0"+
    "\10\3\1\u0215\31\3\1\0\2\3\11\0\2\3\1\0"+
    "\14\3\1\220\25\3\1\0\2\3\11\0\2\3\1\0"+
    "\16\3\1\u0216\23\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u0217\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\34\3\1\u0107\5\3\1\0\2\3\11\0\2\3\1\0"+
    "\20\3\1\u0218\21\3\1\0\2\3\11\0\2\3\1\0"+
    "\22\3\1\u0219\17\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u021a\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\20\3\1\62\21\3\1\0\2\3\11\0\2\3\1\0"+
    "\10\3\1\u021b\31\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u021c\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\27\3\1\u0123\12\3\1\0\2\3\11\0\2\3\1\0"+
    "\27\3\1\u021d\12\3\1\0\2\3\11\0\2\3\1\0"+
    "\26\3\1\u021e\13\3\1\0\2\3\11\0\2\3\1\0"+
    "\15\3\1\u018c\24\3\1\0\2\3\11\0\2\3\1\0"+
    "\21\3\1\u01bf\20\3\1\0\2\3\11\0\2\3\1\0"+
    "\14\3\1\u021f\25\3\1\0\2\3\11\0\2\3\1\0"+
    "\13\3\1\u0220\26\3\1\0\2\3\11\0\2\3\1\0"+
    "\15\3\1\u0221\24\3\1\0\2\3\11\0\2\3\1\0"+
    "\21\3\1\u0222\20\3\1\0\2\3\11\0\2\3\1\0"+
    "\17\3\1\u0223\22\3\1\0\2\3\11\0\2\3\1\0"+
    "\35\3\1\302\4\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u0224\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\31\3\1\302\10\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u0225\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\20\3\1\u01d2\21\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u0226\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\26\3\1\u0227\13\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u0228\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\27\3\1\u011e\6\3\1\333\3\3\1\0\2\3\11\0"+
    "\2\3\1\0\10\3\1\53\31\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\u0229\32\3\1\0\2\3\11\0"+
    "\2\3\1\0\27\3\1\u022a\12\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\355\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\u022b\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\20\3\1\u022c\21\3\1\0\2\3\11\0"+
    "\2\3\1\0\13\3\1\u022d\26\3\1\0\2\3\11\0"+
    "\2\3\1\0\27\3\1\u022e\12\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\50\32\3\1\0\2\3\11\0"+
    "\2\3\1\0\14\3\1\u010a\25\3\1\0\2\3\11\0"+
    "\2\3\1\0\34\3\1\u022f\5\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\364\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\14\3\1\u0189\25\3\1\0\2\3\11\0"+
    "\2\3\1\0\14\3\1\u0230\25\3\1\0\2\3\11\0"+
    "\2\3\1\0\36\3\1\242\3\3\1\0\2\3\11\0"+
    "\2\3\1\0\15\3\1\u0231\24\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\u0232\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\257\1\3\1\332\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\17\3\1\u0228\5\3\1\53"+
    "\14\3\1\0\2\3\11\0\2\3\1\0\25\3\1\u0233"+
    "\14\3\1\0\2\3\11\0\2\3\1\0\15\3\1\u011e"+
    "\24\3\1\0\2\3\25\0\1\u0234\44\0\2\3\1\0"+
    "\7\3\1\u0235\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\15\3\1\u0236\24\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\67\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\15\3\1\u0237\24\3\1\0\2\3\11\0\2\3\1\0"+
    "\26\3\1\u0238\13\3\1\0\2\3\11\0\2\3\1\0"+
    "\15\3\1\u0239\24\3\1\0\2\3\11\0\2\3\1\0"+
    "\10\3\1\u023a\31\3\1\0\2\3\11\0\2\3\1\0"+
    "\22\3\1\u01b6\17\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u023b\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\13\3\1\u023c\26\3\1\0\2\3\11\0\2\3\1\0"+
    "\35\3\1\u023d\4\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u01d8\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\17\3\1\u0168\22\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u023e\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\14\3\1\u023f\25\3\1\0\2\3\11\0\2\3\1\0"+
    "\17\3\1\u0240\22\3\1\0\2\3\11\0\2\3\1\0"+
    "\15\3\1\u0241\24\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u0242\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\50\14\3\1\u013a\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\13\3\1\u0243\26\3\1\0\2\3\11\0"+
    "\2\3\1\0\13\3\1\u0244\26\3\1\0\2\3\11\0"+
    "\2\3\1\0\20\3\1\u0201\21\3\1\0\2\3\11\0"+
    "\2\3\1\0\12\3\1\u0245\27\3\1\0\2\3\11\0"+
    "\2\3\1\0\21\3\1\u0228\20\3\1\0\2\3\11\0"+
    "\2\3\1\0\15\3\1\u0246\24\3\1\0\2\3\11\0"+
    "\2\3\1\0\13\3\1\u0247\26\3\1\0\2\3\11\0"+
    "\2\3\1\0\13\3\1\u0189\26\3\1\0\2\3\11\0"+
    "\2\3\1\0\16\3\1\u0248\23\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\u015c\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\13\3\1\u0249\26\3\1\0\2\3\11\0"+
    "\2\3\1\0\15\3\1\u024a\24\3\1\0\2\3\11\0"+
    "\2\3\1\0\26\3\1\u024b\13\3\1\0\2\3\11\0"+
    "\2\3\1\0\13\3\1\u024c\26\3\1\0\2\3\11\0"+
    "\2\3\1\0\37\3\1\u024d\2\3\1\0\2\3\11\0"+
    "\2\3\1\0\15\3\1\u010a\24\3\1\0\2\3\11\0"+
    "\2\3\1\0\31\3\1\u024e\10\3\1\0\2\3\11\0"+
    "\2\3\1\0\32\3\1\u019c\7\3\1\0\2\3\11\0"+
    "\2\3\1\0\22\3\1\u024f\17\3\1\0\2\3\35\0"+
    "\1\u0250\34\0\2\3\1\0\34\3\1\u0251\5\3\1\0"+
    "\2\3\11\0\2\3\1\0\36\3\1\u0183\3\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\u0252\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\31\3\1\u0215\10\3\1\0"+
    "\2\3\11\0\2\3\1\0\21\3\1\322\20\3\1\0"+
    "\2\3\11\0\2\3\1\0\21\3\1\u0253\20\3\1\0"+
    "\2\3\11\0\2\3\1\0\31\3\1\322\10\3\1\0"+
    "\2\3\11\0\2\3\1\0\7\3\1\u0254\32\3\1\0"+
    "\2\3\11\0\2\3\1\0\27\3\1\u0255\12\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\332\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\20\3\1\u0256\21\3\1\0"+
    "\2\3\11\0\2\3\1\0\27\3\1\u0257\12\3\1\0"+
    "\2\3\11\0\2\3\1\0\26\3\1\u0258\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\37\3\1\u0259\2\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\u025a\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\13\3\1\u0257\26\3\1\0"+
    "\2\3\11\0\2\3\1\0\31\3\1\167\10\3\1\0"+
    "\2\3\11\0\2\3\1\0\30\3\1\u025b\11\3\1\0"+
    "\2\3\11\0\2\3\1\0\30\3\1\u025c\11\3\1\0"+
    "\2\3\11\0\2\3\1\0\21\3\1\u025d\20\3\1\0"+
    "\2\3\11\0\2\3\1\0\26\3\1\u025e\13\3\1\0"+
    "\2\3\11\0\2\3\1\0\14\3\1\u025f\25\3\1\0"+
    "\2\3\11\0\2\3\1\0\13\3\1\u023f\26\3\1\0"+
    "\2\3\11\0\2\3\1\0\17\3\1\111\22\3\1\0"+
    "\2\3\11\0\2\3\1\0\37\3\1\u0260\2\3\1\0"+
    "\2\3\11\0\2\3\1\0\20\3\1\u0107\21\3\1\0"+
    "\2\3\11\0\2\3\1\0\27\3\1\u0261\12\3\1\0"+
    "\2\3\11\0\2\3\1\0\11\3\1\213\30\3\1\0"+
    "\2\3\11\0\2\3\1\0\15\3\1\330\24\3\1\0"+
    "\2\3\11\0\2\3\1\0\13\3\1\u0262\26\3\1\0"+
    "\2\3\11\0\2\3\1\0\15\3\1\u0263\24\3\1\0"+
    "\2\3\11\0\2\3\1\0\10\3\1\355\2\3\1\u0264"+
    "\6\3\1\u019e\17\3\1\0\2\3\11\0\2\3\1\0"+
    "\14\3\1\u0113\25\3\1\0\2\3\11\0\2\3\1\0"+
    "\21\3\1\u0253\15\3\1\u0265\2\3\1\0\2\3\11\0"+
    "\2\3\1\0\7\3\1\u0266\32\3\1\0\2\3\11\0"+
    "\2\3\1\0\27\3\1\u0267\3\3\1\u0268\6\3\1\0"+
    "\2\3\11\0\2\3\1\0\21\3\1\u0168\20\3\1\0"+
    "\2\3\11\0\2\3\1\0\20\3\1\u012b\21\3\1\0"+
    "\2\3\11\0\2\3\1\0\24\3\1\u0269\7\3\1\u026a"+
    "\5\3\1\0\2\3\11\0\2\3\1\0\20\3\1\u026b"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\7\3\1\257"+
    "\32\3\1\0\2\3\11\0\2\3\1\0\13\3\1\u0206"+
    "\26\3\1\0\2\3\11\0\2\3\1\0\26\3\1\u026c"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\26\3\1\u026d"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\22\3\1\u026e"+
    "\17\3\1\0\2\3\11\0\2\3\1\0\26\3\1\u026f"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u0270"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\20\3\1\u0271"+
    "\21\3\1\0\2\3\11\0\2\3\1\0\26\3\1\u0272"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\22\3\1\u0273"+
    "\17\3\1\0\2\3\11\0\2\3\1\0\34\3\1\u0274"+
    "\5\3\1\0\2\3\11\0\2\3\1\0\15\3\1\u0275"+
    "\24\3\1\0\2\3\11\0\2\3\1\0\10\3\1\u0187"+
    "\31\3\1\0\2\3\11\0\2\3\1\0\34\3\1\u0276"+
    "\5\3\1\0\2\3\11\0\2\3\1\0\30\3\1\u0277"+
    "\11\3\1\0\2\3\11\0\2\3\1\0\22\3\1\u010c"+
    "\17\3\1\0\2\3\11\0\2\3\1\0\15\3\1\u0186"+
    "\24\3\1\0\2\3\11\0\2\3\1\0\14\3\1\u0123"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u0278"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\27\3\1\u0183"+
    "\12\3\1\0\2\3\11\0\2\3\1\0\26\3\1\u0279"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\17\3\1\u027a"+
    "\22\3\1\0\2\3\11\0\2\3\1\0\27\3\1\u01c6"+
    "\12\3\1\0\2\3\11\0\2\3\1\0\16\3\1\u027b"+
    "\23\3\1\0\2\3\11\0\2\3\1\0\24\3\1\u027c"+
    "\15\3\1\0\2\3\11\0\2\3\1\0\7\3\1\u027d"+
    "\32\3\1\0\2\3\11\0\2\3\1\0\14\3\1\u027e"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\14\3\1\u027f"+
    "\25\3\1\0\2\3\11\0\2\3\1\0\7\3\1\u0280"+
    "\32\3\1\0\2\3\11\0\2\3\1\0\26\3\1\u0281"+
    "\13\3\1\0\2\3\11\0\2\3\1\0\27\3\1\u0282"+
    "\12\3\1\0\2\3\11\0\2\3\1\0\13\3\1\u0283"+
    "\26\3\1\0\2\3\11\0\2\3\1\0\11\3\1\u0284"+
    "\30\3\1\0\2\3\11\0\2\3\1\0\30\3\1\u0285"+
    "\11\3\1\0\2\3\11\0\2\3\1\0\10\3\1\u0286"+
    "\2\3\1\u0262\26\3\1\0\2\3\11\0\2\3\1\0"+
    "\11\3\1\u0287\30\3\1\0\2\3\11\0\2\3\1\0"+
    "\13\3\1\u0288\26\3\1\0\2\3\11\0\2\3\1\0"+
    "\7\3\1\u0289\32\3\1\0\2\3\11\0\2\3\1\0"+
    "\26\3\1\u028a\13\3\1\0\2\3\11\0\2\3\1\0"+
    "\16\3\1\u028b\23\3\1\0\2\3\11\0\2\3\1\0"+
    "\27\3\1\u0284\12\3\1\0\2\3\10\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[30968];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\35\1\1\11\2\1\3\11\172\1\1\0"+
    "\227\1\1\0\25\1\1\0\143\1\1\11\15\1\1\0"+
    "\114\1\1\0\46\1\1\0\33\1\1\11\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[651];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 176) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return ERROR;
            } 
            // fall through
          case 11: break;
          case 2: 
            { lexeme=yytext(); return Identificador;
            } 
            // fall through
          case 12: break;
          case 3: 
            { lexeme = yytext(); return Numero;
            } 
            // fall through
          case 13: break;
          case 4: 
            { /*Ignore*/
            } 
            // fall through
          case 14: break;
          case 5: 
            { return Resta;
            } 
            // fall through
          case 15: break;
          case 6: 
            { return Division;
            } 
            // fall through
          case 16: break;
          case 7: 
            { return Igual;
            } 
            // fall through
          case 17: break;
          case 8: 
            { return Suma;
            } 
            // fall through
          case 18: break;
          case 9: 
            { return Multiplicacion;
            } 
            // fall through
          case 19: break;
          case 10: 
            { lexeme=yytext(); return Reservadas;
            } 
            // fall through
          case 20: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
