/* The following code was generated by JFlex 1.7.0 */

package compisproyect;  
import static compisproyect.Tokens.*; 


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/herma/Documents/NetBeansProjects/compisProyect/src/compisproyect/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\61\1\62\1\62\1\62\22\0\1\6\1\7\1\0"+
    "\1\12\1\0\1\7\1\12\1\5\1\65\1\66\1\64\1\11\1\10"+
    "\1\13\1\14\1\60\1\2\1\2\10\2\1\0\1\12\1\7\1\63"+
    "\1\7\1\0\1\12\1\25\1\41\1\36\1\26\1\15\1\37\1\45"+
    "\1\40\1\42\1\54\1\47\1\33\1\50\1\32\1\35\1\34\1\55"+
    "\1\31\1\43\1\30\1\4\1\52\1\51\1\27\1\44\1\46\1\12"+
    "\1\0\1\12\1\0\1\53\1\0\4\1\1\16\1\22\1\1\1\57"+
    "\1\17\2\1\1\23\1\1\1\20\4\1\1\24\1\21\2\1\1\56"+
    "\3\1\3\12\7\0\1\62\u1fa2\0\1\62\1\62\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\1\1\2\1\3\1\4\1\5\1\3\1\2\1\1"+
    "\1\6\1\7\1\10\32\3\1\11\1\12\1\13\1\7"+
    "\1\14\3\3\1\0\1\15\7\3\1\16\7\3\1\16"+
    "\13\3\1\16\13\3\1\16\15\3\2\16\2\3\1\16"+
    "\27\3\2\16\21\3\1\16\20\3\1\5\1\0\2\14"+
    "\5\3\1\16\2\3\1\17\1\0\5\3\1\16\3\3"+
    "\1\16\6\3\1\16\66\3\1\16\26\3\1\16\13\3"+
    "\1\16\2\3\1\16\7\3\1\16\13\3\1\16\4\3"+
    "\1\16\10\3\1\0\2\3\1\0\5\3\1\0\14\3"+
    "\1\16\7\3\1\16\3\3\1\16\1\3\1\16\14\3"+
    "\1\16\15\3\1\16\2\3\1\16\2\3\1\16\20\3"+
    "\1\16\41\3\2\16\1\3\1\4\3\3\1\0\15\3"+
    "\1\16\47\3\1\16\31\3\2\16\1\0\51\3\1\0"+
    "\13\3\2\16\12\3\1\16\4\3\1\16\10\3\1\16"+
    "\2\3\1\16\34\3\1\16\23\3";

  private static int [] zzUnpackAction() {
    int [] result = new int[662];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\67\0\156\0\245\0\334\0\u0113\0\u014a\0\67"+
    "\0\67\0\67\0\u0181\0\u01b8\0\u01ef\0\u0226\0\u025d\0\u0294"+
    "\0\u02cb\0\u0302\0\u0339\0\u0370\0\u03a7\0\u03de\0\u0415\0\u044c"+
    "\0\u0483\0\u04ba\0\u04f1\0\u0528\0\u055f\0\u0596\0\u05cd\0\u0604"+
    "\0\u063b\0\u0672\0\u06a9\0\u06e0\0\u0717\0\u074e\0\67\0\67"+
    "\0\u0785\0\u07bc\0\u07f3\0\u082a\0\u0861\0\u0898\0\u08cf\0\u0906"+
    "\0\u093d\0\u0974\0\u09ab\0\u09e2\0\u0a19\0\u0a50\0\156\0\u0a87"+
    "\0\u0abe\0\u0af5\0\u0b2c\0\u0b63\0\u0b9a\0\u0bd1\0\u0c08\0\u0c3f"+
    "\0\u0c76\0\u0cad\0\u0ce4\0\u0d1b\0\u0d52\0\u0d89\0\u0dc0\0\u0df7"+
    "\0\u0e2e\0\u0e65\0\u0e9c\0\u0ed3\0\u0f0a\0\u0f41\0\u0f78\0\u0faf"+
    "\0\u0fe6\0\u101d\0\u1054\0\u108b\0\u10c2\0\u10f9\0\u1130\0\u1167"+
    "\0\u119e\0\u11d5\0\u120c\0\u1243\0\u127a\0\u12b1\0\u12e8\0\u131f"+
    "\0\u1356\0\u138d\0\u13c4\0\u13fb\0\u1432\0\u1469\0\u14a0\0\u14d7"+
    "\0\u150e\0\u1545\0\u157c\0\u15b3\0\u15ea\0\u1621\0\u1658\0\u168f"+
    "\0\u16c6\0\u16fd\0\u1734\0\u176b\0\u17a2\0\u17d9\0\u1810\0\u1847"+
    "\0\u187e\0\u18b5\0\u18ec\0\u1923\0\u195a\0\u1991\0\u19c8\0\u19ff"+
    "\0\u1a36\0\u1a6d\0\u1aa4\0\u1adb\0\u1b12\0\u1b49\0\u1b80\0\u1bb7"+
    "\0\u1bee\0\u1c25\0\u1c5c\0\u1c93\0\u1cca\0\u1d01\0\u1d38\0\u1d6f"+
    "\0\u1da6\0\u1ddd\0\u1e14\0\u1e4b\0\u1e82\0\u1eb9\0\u1ef0\0\u1f27"+
    "\0\u1f5e\0\u1f95\0\u1fcc\0\u2003\0\u203a\0\u2071\0\u20a8\0\u20df"+
    "\0\u2116\0\u214d\0\u2184\0\u21bb\0\u21f2\0\u2229\0\u2260\0\u2297"+
    "\0\u22ce\0\u2305\0\u233c\0\u2373\0\u23aa\0\u23e1\0\u2418\0\u244f"+
    "\0\67\0\u2486\0\u24bd\0\u24f4\0\u252b\0\u2562\0\u2599\0\u25d0"+
    "\0\u2607\0\u263e\0\u2675\0\u26ac\0\u26e3\0\u271a\0\u2751\0\u0e9c"+
    "\0\u2788\0\u27bf\0\u27f6\0\u282d\0\u2864\0\u289b\0\u28d2\0\u2909"+
    "\0\u2940\0\u2977\0\u29ae\0\u29e5\0\u2a1c\0\u2a53\0\u2a8a\0\u2ac1"+
    "\0\u2af8\0\u2b2f\0\u2b66\0\u2b9d\0\u2bd4\0\u2c0b\0\u2c42\0\u2c79"+
    "\0\u2cb0\0\u2ce7\0\u2d1e\0\u2d55\0\u2d8c\0\u2dc3\0\u2dfa\0\u2e31"+
    "\0\u2e68\0\u2e9f\0\u2ed6\0\u2f0d\0\u2f44\0\u2f7b\0\u2fb2\0\u2fe9"+
    "\0\u3020\0\u3057\0\u308e\0\u30c5\0\u30fc\0\u3133\0\u316a\0\u31a1"+
    "\0\u31d8\0\u320f\0\u3246\0\u327d\0\u32b4\0\u32eb\0\u3322\0\u3359"+
    "\0\u3390\0\u33c7\0\u33fe\0\u3435\0\u346c\0\u34a3\0\u34da\0\u3511"+
    "\0\u3548\0\u357f\0\u35b6\0\u35ed\0\u3624\0\u365b\0\u3692\0\u36c9"+
    "\0\u3700\0\u3737\0\u376e\0\u37a5\0\u37dc\0\u3813\0\u384a\0\u3881"+
    "\0\u38b8\0\u38ef\0\u3926\0\u395d\0\u23e1\0\u3994\0\u39cb\0\u3a02"+
    "\0\u3a39\0\u3a70\0\u3aa7\0\u3ade\0\u3b15\0\u3b4c\0\u3b83\0\u3bba"+
    "\0\u3bf1\0\u3c28\0\u3c5f\0\u3c96\0\u3ccd\0\u3d04\0\u3d3b\0\u3d72"+
    "\0\u3da9\0\u3de0\0\u3e17\0\u3e4e\0\u3e85\0\u3ebc\0\u3ef3\0\u3f2a"+
    "\0\u3f61\0\u3f98\0\u3fcf\0\u4006\0\u403d\0\u4074\0\u40ab\0\u40e2"+
    "\0\u4119\0\u4150\0\u4187\0\u41be\0\u41f5\0\u422c\0\u4263\0\u429a"+
    "\0\u42d1\0\u4308\0\u433f\0\u4376\0\u43ad\0\u43e4\0\u441b\0\u4452"+
    "\0\u4489\0\u44c0\0\u44f7\0\u452e\0\u4565\0\u459c\0\u45d3\0\u460a"+
    "\0\u4641\0\u4678\0\u46af\0\u46e6\0\u471d\0\u4754\0\u478b\0\u47c2"+
    "\0\u47f9\0\u4830\0\u4867\0\u489e\0\u48d5\0\u490c\0\u4943\0\u497a"+
    "\0\u49b1\0\u49e8\0\u4a1f\0\u4a56\0\u4a8d\0\u4ac4\0\u4afb\0\u4b32"+
    "\0\u4b69\0\u4ba0\0\u4bd7\0\u4c0e\0\u4c45\0\u4c7c\0\u4cb3\0\u4cea"+
    "\0\u4d21\0\u4d58\0\u4d8f\0\u4dc6\0\u4dfd\0\u4e34\0\u4e6b\0\u4ea2"+
    "\0\u4ed9\0\u4f10\0\u4f47\0\u4f7e\0\u4fb5\0\u4fec\0\u5023\0\u505a"+
    "\0\u5091\0\u50c8\0\u50ff\0\u5136\0\u516d\0\u51a4\0\u51db\0\u5212"+
    "\0\u5249\0\u5280\0\u52b7\0\u52ee\0\u5325\0\u535c\0\u5393\0\u53ca"+
    "\0\u5401\0\u5438\0\u546f\0\u54a6\0\u4119\0\u54dd\0\u5514\0\u554b"+
    "\0\u5582\0\u55b9\0\u55f0\0\u5627\0\u565e\0\u5695\0\u56cc\0\u5703"+
    "\0\u573a\0\u5771\0\u57a8\0\u57df\0\u5816\0\u584d\0\u5884\0\u58bb"+
    "\0\u58f2\0\u5929\0\u5960\0\u5997\0\u59ce\0\u5a05\0\u5a3c\0\u5a73"+
    "\0\u5aaa\0\u5ae1\0\u5b18\0\u5b4f\0\u5b86\0\u5bbd\0\u5bf4\0\u5c2b"+
    "\0\u5c62\0\u5c99\0\u5cd0\0\u5d07\0\67\0\u5d3e\0\u5d75\0\u5dac"+
    "\0\u5de3\0\u5e1a\0\u26ac\0\u5e51\0\u5e88\0\u5ebf\0\u5ef6\0\u5f2d"+
    "\0\u5f64\0\u5f9b\0\u5fd2\0\u6009\0\u6040\0\u6077\0\u60ae\0\u60e5"+
    "\0\u611c\0\u6153\0\u618a\0\u61c1\0\u61f8\0\u622f\0\u6266\0\u629d"+
    "\0\u62d4\0\u630b\0\u6342\0\u6379\0\u63b0\0\u63e7\0\u641e\0\u6455"+
    "\0\u648c\0\u64c3\0\u64fa\0\u6531\0\u6568\0\u659f\0\u65d6\0\u660d"+
    "\0\u6644\0\u3b15\0\u667b\0\u66b2\0\u66e9\0\u6720\0\u6757\0\u678e"+
    "\0\u67c5\0\u67fc\0\u6833\0\u686a\0\u68a1\0\u68d8\0\u690f\0\u6946"+
    "\0\u697d\0\u69b4\0\u69eb\0\u6a22\0\u6a59\0\u6a90\0\u6ac7\0\u6afe"+
    "\0\u6b35\0\u6b6c\0\u6ba3\0\u6bda\0\u6c11\0\u6c48\0\u6c7f\0\u6cb6"+
    "\0\u6ced\0\u6d24\0\u6d5b\0\u6d92\0\u6dc9\0\u6e00\0\u6e37\0\u6e6e"+
    "\0\u4e6b\0\u26e3\0\u6ea5\0\u6edc\0\u6f13\0\u6f4a\0\u6f81\0\u6fb8"+
    "\0\u6fef\0\u7026\0\u705d\0\u7094\0\u70cb\0\u7102\0\u7139\0\u7170"+
    "\0\u71a7\0\u71de\0\u7215\0\u724c\0\u7283\0\u72ba\0\u72f1\0\u7328"+
    "\0\u735f\0\u7396\0\u73cd\0\u7404\0\u743b\0\u7472\0\u74a9\0\u74e0"+
    "\0\u7517\0\u754e\0\u7585\0\u75bc\0\u75f3\0\u762a\0\u7661\0\u7698"+
    "\0\u76cf\0\u7706\0\u773d\0\u7774\0\u77ab\0\u77e2\0\u7819\0\u7850"+
    "\0\u7887\0\u78be\0\u78f5\0\u792c\0\u7963\0\u799a\0\u79d1\0\u7a08"+
    "\0\u7a3f\0\u308e\0\u7a76\0\u7aad\0\u7ae4\0\u7b1b\0\u7b52\0\u7b89"+
    "\0\u7bc0\0\u7bf7\0\u1469\0\u7c2e\0\u7706\0\u7c65\0\u7c9c\0\u3d72"+
    "\0\u7cd3\0\67\0\u7d0a\0\u7d41\0\u7d78\0\u7daf\0\u7de6\0\u7e1d"+
    "\0\u7e54\0\u7e8b\0\u7ec2\0\u7ef9\0\u7f30\0\u7f67\0\u7f9e\0\u7fd5"+
    "\0\u800c\0\u8043\0\u807a\0\u80b1\0\u80e8\0\u811f\0\u8156\0\u818d"+
    "\0\u81c4\0\u81fb\0\u8232\0\u8269\0\u82a0\0\u82d7\0\u830e\0\u8345"+
    "\0\u837c\0\u83b3\0\u83ea\0\u8421\0\u8458\0\u848f\0\u84c6\0\u84fd"+
    "\0\u8534\0\u856b\0\u85a2\0\u85d9\0\u8610\0\u8647\0\u867e\0\u86b5"+
    "\0\u86ec\0\u8723\0\u875a\0\u8791\0\u87c8\0\u87ff\0\u7ec2\0\u8836"+
    "\0\u886d\0\u88a4\0\u88db\0\u8912\0\u8949\0\u8980";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[662];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\5\1\10"+
    "\1\5\1\11\1\12\1\13\1\12\1\14\1\15\1\16"+
    "\5\3\1\17\1\20\1\3\1\21\1\22\1\23\1\24"+
    "\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
    "\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\3"+
    "\1\44\1\3\1\45\1\3\1\46\1\5\1\0\1\47"+
    "\1\50\1\51\1\12\70\0\2\3\1\0\1\3\10\0"+
    "\43\3\11\0\1\4\11\0\1\52\55\0\1\5\2\0"+
    "\1\5\1\0\1\5\50\0\1\5\6\0\2\3\1\0"+
    "\1\3\10\0\15\3\1\53\1\3\1\54\6\3\1\55"+
    "\14\3\10\0\1\56\2\0\1\56\10\0\43\56\22\0"+
    "\1\57\54\0\2\3\1\0\1\3\10\0\12\3\1\60"+
    "\1\3\1\61\1\62\1\63\7\3\1\64\14\3\10\0"+
    "\2\3\1\0\1\3\10\0\6\3\1\65\34\3\10\0"+
    "\2\3\1\0\1\3\10\0\3\3\1\66\1\3\1\67"+
    "\35\3\10\0\2\3\1\0\1\70\10\0\11\3\1\71"+
    "\1\3\1\67\1\72\1\73\1\74\2\3\1\75\2\3"+
    "\1\76\1\3\1\77\6\3\1\100\5\3\10\0\2\3"+
    "\1\0\1\101\10\0\1\102\7\3\1\103\3\3\1\104"+
    "\3\3\1\105\3\3\1\106\1\107\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\110\7\3\1\111\3\3\1\112"+
    "\3\3\1\113\2\3\1\114\1\3\1\115\1\116\14\3"+
    "\10\0\2\3\1\0\1\117\10\0\1\120\7\3\1\121"+
    "\7\3\1\122\4\3\1\123\15\3\10\0\2\3\1\0"+
    "\1\124\10\0\1\125\7\3\1\126\7\3\1\127\1\130"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\1\131\7\3"+
    "\1\132\7\3\1\133\4\3\1\134\15\3\10\0\2\3"+
    "\1\0\1\135\10\0\1\136\7\3\1\137\3\3\1\140"+
    "\1\3\1\141\1\3\1\142\4\3\1\143\15\3\10\0"+
    "\2\3\1\0\1\144\10\0\14\3\1\145\1\146\1\3"+
    "\1\147\1\3\1\150\1\151\12\3\1\152\5\3\10\0"+
    "\2\3\1\0\1\153\10\0\10\3\1\154\3\3\1\155"+
    "\1\3\1\156\1\3\1\157\2\3\1\160\17\3\10\0"+
    "\2\3\1\0\1\161\10\0\1\162\7\3\1\163\3\3"+
    "\1\164\1\3\1\165\1\3\1\166\4\3\1\167\15\3"+
    "\10\0\2\3\1\0\1\3\10\0\10\3\1\170\7\3"+
    "\1\171\22\3\10\0\2\3\1\0\1\172\10\0\1\173"+
    "\7\3\1\174\3\3\1\175\3\3\1\176\4\3\1\177"+
    "\1\3\1\67\13\3\10\0\2\3\1\0\1\3\10\0"+
    "\11\3\1\200\3\3\1\201\4\3\1\67\3\3\1\202"+
    "\4\3\1\203\7\3\10\0\2\3\1\0\1\204\10\0"+
    "\1\205\7\3\1\206\2\3\1\207\3\3\1\210\1\211"+
    "\1\212\1\3\1\213\1\3\1\214\1\3\1\215\3\3"+
    "\1\216\4\3\1\217\2\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\220\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\1\221\13\3\1\222\1\3\1\223\1\3\1\224\22\3"+
    "\10\0\2\3\1\0\1\3\10\0\20\3\1\225\22\3"+
    "\10\0\2\3\1\0\1\3\10\0\1\226\24\3\1\227"+
    "\15\3\10\0\2\3\1\0\1\3\10\0\1\230\7\3"+
    "\1\231\7\3\1\232\4\3\1\233\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\10\3\1\234\3\3\1\235\3\3"+
    "\1\236\2\3\1\237\1\3\1\240\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\10\3\1\241\14\3\1\242\15\3"+
    "\10\0\2\3\1\0\1\3\10\0\20\3\1\243\22\3"+
    "\10\0\2\3\1\0\1\3\10\0\42\3\1\244\67\0"+
    "\1\245\21\0\1\246\55\0\1\52\5\0\2\247\1\0"+
    "\1\247\1\0\2\250\51\0\2\3\1\0\1\3\10\0"+
    "\17\3\1\251\5\3\1\252\4\3\1\253\10\3\10\0"+
    "\2\3\1\0\1\3\10\0\11\3\1\254\5\3\1\255"+
    "\23\3\10\0\2\3\1\0\1\3\10\0\1\256\7\3"+
    "\1\257\14\3\1\260\15\3\10\0\2\56\1\0\1\56"+
    "\1\261\1\56\6\0\43\56\10\0\2\57\1\0\1\57"+
    "\1\262\1\0\3\57\1\0\1\57\1\0\44\57\2\0"+
    "\2\57\3\0\2\3\1\0\1\3\10\0\1\263\12\3"+
    "\1\264\5\3\1\265\3\3\1\266\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\14\3\1\267\26\3\10\0\2\3"+
    "\1\0\1\3\10\0\11\3\1\270\31\3\10\0\2\3"+
    "\1\0\1\3\10\0\26\3\1\72\14\3\10\0\2\3"+
    "\1\0\1\3\10\0\21\3\1\271\21\3\10\0\2\3"+
    "\1\0\1\3\10\0\7\3\1\272\33\3\10\0\2\3"+
    "\1\0\1\3\10\0\4\3\1\67\36\3\10\0\2\3"+
    "\1\0\1\3\10\0\13\3\1\273\27\3\10\0\2\3"+
    "\1\0\1\3\10\0\10\3\2\67\31\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\67\42\3\10\0\2\3\1\0"+
    "\1\3\10\0\11\3\1\67\15\3\1\67\13\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\255\2\3\1\274"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\13\3\1\275"+
    "\27\3\10\0\2\3\1\0\1\3\10\0\26\3\1\276"+
    "\14\3\10\0\2\3\1\0\1\3\10\0\21\3\1\67"+
    "\4\3\1\277\14\3\10\0\2\3\1\0\1\3\10\0"+
    "\30\3\1\67\12\3\10\0\2\3\1\0\1\3\10\0"+
    "\33\3\1\300\7\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\301\4\3\1\226\1\302\2\3\1\303\1\304"+
    "\3\3\1\305\14\3\10\0\2\3\1\0\1\3\10\0"+
    "\13\3\1\306\13\3\1\67\13\3\10\0\2\3\1\0"+
    "\1\3\10\0\20\3\1\300\22\3\10\0\2\3\1\0"+
    "\1\307\10\0\33\3\1\310\7\3\10\0\2\3\1\0"+
    "\1\3\10\0\21\3\1\311\21\3\10\0\2\3\1\0"+
    "\1\3\10\0\10\3\1\312\15\3\1\313\14\3\10\0"+
    "\2\3\1\0\1\3\10\0\12\3\1\314\20\3\1\315"+
    "\7\3\10\0\2\3\1\0\1\3\10\0\24\3\1\316"+
    "\16\3\10\0\2\3\1\0\1\317\10\0\10\3\1\320"+
    "\14\3\1\321\1\3\1\322\13\3\10\0\2\3\1\0"+
    "\1\3\10\0\17\3\1\67\23\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\323\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\33\3\1\324\7\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\325\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\16\3\1\72\24\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\326\2\3\1\327\2\3\1\330\1\331\1\3"+
    "\1\332\1\333\3\3\1\334\6\3\1\335\5\3\10\0"+
    "\2\3\1\0\1\3\10\0\25\3\1\336\15\3\10\0"+
    "\2\3\1\0\1\3\10\0\16\3\1\337\15\3\1\340"+
    "\6\3\10\0\2\3\1\0\1\3\10\0\30\3\1\341"+
    "\12\3\10\0\2\3\1\0\1\3\10\0\16\3\1\342"+
    "\14\3\1\343\7\3\10\0\2\3\1\0\1\3\10\0"+
    "\12\3\1\221\30\3\10\0\2\3\1\0\1\3\10\0"+
    "\13\3\1\344\17\3\1\345\7\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\67\1\3\1\346\3\3\1\347"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\23\3\1\220"+
    "\17\3\10\0\2\3\1\0\1\3\10\0\10\3\1\350"+
    "\11\3\1\221\12\3\1\351\5\3\10\0\2\3\1\0"+
    "\1\3\10\0\15\3\1\352\10\3\1\221\14\3\10\0"+
    "\2\3\1\0\1\3\10\0\10\3\1\353\10\3\1\354"+
    "\12\3\1\255\6\3\10\0\2\3\1\0\1\3\10\0"+
    "\15\3\1\355\14\3\1\72\10\3\10\0\2\3\1\0"+
    "\1\3\10\0\24\3\1\356\16\3\10\0\2\3\1\0"+
    "\1\3\10\0\14\3\1\357\26\3\10\0\2\3\1\0"+
    "\1\3\10\0\11\3\1\67\2\3\1\360\11\3\1\361"+
    "\14\3\10\0\2\3\1\0\1\3\10\0\1\362\17\3"+
    "\1\363\4\3\1\364\15\3\10\0\2\3\1\0\1\3"+
    "\10\0\10\3\1\323\32\3\10\0\2\3\1\0\1\3"+
    "\10\0\26\3\1\365\14\3\10\0\2\3\1\0\1\3"+
    "\10\0\35\3\1\366\5\3\10\0\2\3\1\0\1\3"+
    "\10\0\13\3\1\367\27\3\10\0\2\3\1\0\1\3"+
    "\10\0\11\3\1\255\31\3\10\0\2\3\1\0\1\3"+
    "\10\0\16\3\1\226\24\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\370\12\3\1\275\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\371\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\22\3\1\372\20\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\373\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\14\3\1\374\26\3\10\0\2\3\1\0\1\3"+
    "\10\0\13\3\1\375\12\3\1\376\14\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\377\17\3\1\u0100\22\3\10\0"+
    "\2\3\1\0\1\u0101\10\0\20\3\1\63\22\3\10\0"+
    "\2\3\1\0\1\u0102\10\0\10\3\1\u0103\3\3\1\u0104"+
    "\1\u0105\1\u0106\14\3\1\u0107\7\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u0108\7\3\1\u0109\32\3\10\0\2\3"+
    "\1\0\1\3\10\0\15\3\1\u010a\1\u010b\24\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u010c\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\16\3\1\63\24\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\u010d\17\3\1\u010e\22\3"+
    "\10\0\2\3\1\0\1\3\10\0\20\3\1\u010f\22\3"+
    "\10\0\2\3\1\0\1\u0110\10\0\14\3\1\u0111\26\3"+
    "\10\0\2\3\1\0\1\3\10\0\14\3\1\u0112\1\3"+
    "\1\u0113\24\3\10\0\2\3\1\0\1\3\10\0\35\3"+
    "\1\u0114\5\3\10\0\2\3\1\0\1\u0115\10\0\16\3"+
    "\1\u0116\24\3\10\0\2\3\1\0\1\3\10\0\16\3"+
    "\1\u0117\24\3\10\0\2\3\1\0\1\3\10\0\13\3"+
    "\1\u0118\14\3\1\243\12\3\10\0\2\3\1\0\1\3"+
    "\10\0\21\3\1\u0119\21\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u011a\17\3\1\u011b\22\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\u011c\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\u011d\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u011e\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\11\3\1\u011f\1\3\1\u0120\1\3\1\255\1\3"+
    "\1\u0121\1\3\1\u0122\3\3\1\u0123\1\u0124\14\3\10\0"+
    "\2\3\1\0\1\3\10\0\20\3\1\u0125\22\3\10\0"+
    "\2\3\1\0\1\3\10\0\33\3\1\u0126\7\3\10\0"+
    "\2\3\1\0\1\3\10\0\24\3\1\u0127\6\3\1\67"+
    "\7\3\10\0\2\3\1\0\1\3\10\0\13\3\1\u0128"+
    "\2\3\1\u0129\2\3\1\u012a\4\3\1\u012b\4\3\1\u012c"+
    "\7\3\10\0\2\3\1\0\1\3\10\0\35\3\1\72"+
    "\5\3\10\0\2\3\1\0\1\3\10\0\10\3\1\u012d"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\10\3\1\u012e"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\33\3\1\72"+
    "\7\3\10\0\2\3\1\0\1\3\10\0\14\3\1\u012f"+
    "\6\3\1\u0130\17\3\10\0\2\3\1\0\1\u0131\10\0"+
    "\43\3\10\0\2\3\1\0\1\3\10\0\31\3\1\72"+
    "\11\3\10\0\2\3\1\0\1\3\10\0\26\3\1\u0132"+
    "\14\3\10\0\2\3\1\0\1\3\10\0\10\3\1\u0133"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\16\3\1\u0134"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\10\3\1\u0115"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\13\3\1\67"+
    "\27\3\10\0\2\3\1\0\1\3\10\0\10\3\1\u0102"+
    "\7\3\1\u0135\22\3\10\0\2\3\1\0\1\3\10\0"+
    "\20\3\1\u0136\22\3\10\0\2\3\1\0\1\3\10\0"+
    "\13\3\1\u0137\27\3\10\0\2\3\1\0\1\3\10\0"+
    "\15\3\1\72\25\3\10\0\2\3\1\0\1\3\10\0"+
    "\27\3\1\67\13\3\10\0\2\3\1\0\1\3\10\0"+
    "\16\3\1\u010b\24\3\10\0\2\3\1\0\1\3\10\0"+
    "\14\3\1\257\26\3\10\0\2\3\1\0\1\3\10\0"+
    "\12\3\1\67\1\u010c\27\3\10\0\2\3\1\0\1\3"+
    "\10\0\11\3\1\u0138\3\3\1\176\25\3\10\0\2\3"+
    "\1\0\1\3\10\0\15\3\1\u0139\25\3\10\0\2\3"+
    "\1\0\1\3\10\0\25\3\1\u013a\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\25\3\1\u013b\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\14\3\1\u0117\26\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\u013c\24\3\1\117\15\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u013d\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\14\3\1\u013e\1\3\1\u013f"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\1\u0140\42\3"+
    "\10\0\2\3\1\0\1\3\10\0\25\3\1\323\15\3"+
    "\10\0\2\3\1\0\1\3\10\0\2\3\1\u0141\40\3"+
    "\7\0\61\245\2\0\4\245\2\0\1\u0142\66\0\1\247"+
    "\66\0\1\247\5\0\2\247\1\0\1\247\54\0\2\3"+
    "\1\0\1\3\10\0\25\3\1\143\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\20\3\1\323\17\3\1\u0143\2\3"+
    "\10\0\2\3\1\0\1\3\10\0\15\3\1\u0144\25\3"+
    "\10\0\2\3\1\0\1\3\10\0\10\3\1\u013b\32\3"+
    "\10\0\2\3\1\0\1\3\10\0\1\u0115\42\3\10\0"+
    "\2\3\1\0\1\3\10\0\14\3\1\67\26\3\10\0"+
    "\2\3\1\0\1\3\10\0\30\3\1\72\12\3\10\0"+
    "\2\3\1\0\1\3\10\0\15\3\1\100\25\3\10\0"+
    "\1\u0145\2\0\1\u0145\10\0\43\u0145\10\0\2\3\1\0"+
    "\1\3\10\0\21\3\1\u0139\21\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u0146\13\3\1\u0147\26\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\u0148\42\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\67\12\3\1\u0149\14\3\10\0"+
    "\2\3\1\0\1\3\10\0\16\3\1\u014a\24\3\10\0"+
    "\2\3\1\0\1\3\6\0\1\u014b\1\0\43\3\10\0"+
    "\2\3\1\0\1\3\10\0\10\3\1\u014c\32\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\3\1\67\41\3\10\0"+
    "\2\3\1\0\1\3\10\0\23\3\1\u014d\17\3\10\0"+
    "\2\3\1\0\1\3\10\0\20\3\1\u014e\22\3\10\0"+
    "\2\3\1\0\1\3\10\0\25\3\1\u014f\15\3\10\0"+
    "\2\3\1\0\1\3\10\0\20\3\1\u0150\22\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\u0151\42\3\10\0\2\3"+
    "\1\0\1\3\10\0\16\3\1\u0152\24\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\u0153\42\3\10\0\2\3\1\0"+
    "\1\3\10\0\16\3\1\u0154\6\3\1\u0155\15\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\u0156\7\3\1\u0157\32\3"+
    "\10\0\2\3\1\0\1\3\10\0\21\3\1\u0158\21\3"+
    "\10\0\2\3\1\0\1\3\10\0\1\67\7\3\1\u0159"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\24\3\1\117"+
    "\16\3\10\0\2\3\1\0\1\3\10\0\10\3\1\243"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\21\3\1\67"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\30\3\1\u015a"+
    "\12\3\10\0\2\3\1\0\1\3\10\0\13\3\1\u015b"+
    "\5\3\1\u015c\10\3\1\67\10\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\u015d\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\17\3\1\u015e\23\3\10\0\2\3\1\0"+
    "\1\3\10\0\16\3\1\u015f\24\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\67\14\3\1\u014e\25\3\10\0\2\3"+
    "\1\0\1\3\10\0\15\3\1\u0160\7\3\1\u0161\15\3"+
    "\10\0\2\3\1\0\1\3\10\0\30\3\1\u0162\2\3"+
    "\1\67\7\3\10\0\2\3\1\0\1\3\10\0\36\3"+
    "\1\u0163\4\3\10\0\2\3\1\0\1\3\10\0\15\3"+
    "\1\67\25\3\10\0\2\3\1\0\1\3\10\0\1\u0164"+
    "\42\3\10\0\2\3\1\0\1\3\10\0\40\3\1\u0165"+
    "\2\3\10\0\2\3\1\0\1\3\10\0\11\3\1\u0166"+
    "\4\3\1\67\24\3\10\0\2\3\1\0\1\u0167\10\0"+
    "\43\3\10\0\2\3\1\0\1\3\10\0\10\3\1\u0168"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\16\3\1\u0169"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\20\3\1\u016a"+
    "\22\3\10\0\2\3\1\0\1\3\10\0\1\u016b\42\3"+
    "\10\0\2\3\1\0\1\3\10\0\13\3\1\u016c\27\3"+
    "\10\0\2\3\1\0\1\3\10\0\1\u016d\17\3\1\u016e"+
    "\22\3\10\0\2\3\1\0\1\3\10\0\26\3\1\u016f"+
    "\14\3\10\0\2\3\1\0\1\3\10\0\16\3\1\u0170"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\21\3\1\u0171"+
    "\4\3\1\67\1\3\1\u0172\12\3\10\0\2\3\1\0"+
    "\1\3\10\0\23\3\1\221\17\3\10\0\2\3\1\0"+
    "\1\3\10\0\16\3\1\u0173\24\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u0174\42\3\10\0\2\3\1\0\1\u0175"+
    "\10\0\25\3\1\u0176\15\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u0177\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\1\67\20\3\1\u0178\21\3\10\0\2\3\1\0\1\3"+
    "\10\0\23\3\1\u0179\17\3\10\0\2\3\1\0\1\3"+
    "\10\0\11\3\1\u0114\31\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u010b\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\30\3\1\u017a\12\3\10\0\2\3\1\0\1\3\10\0"+
    "\11\3\1\67\31\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\u010b\32\3\10\0\2\3\1\0\1\3\10\0"+
    "\1\u017b\42\3\10\0\2\3\1\0\1\3\10\0\16\3"+
    "\1\u017c\24\3\10\0\2\3\1\0\1\3\10\0\21\3"+
    "\1\u017d\21\3\10\0\2\3\1\0\1\3\10\0\13\3"+
    "\1\u017e\27\3\10\0\2\3\1\0\1\3\10\0\21\3"+
    "\1\354\21\3\10\0\2\3\1\0\1\3\10\0\17\3"+
    "\1\u0154\1\3\1\u017f\4\3\1\u0180\14\3\10\0\2\3"+
    "\1\0\1\3\10\0\21\3\1\u0181\21\3\10\0\2\3"+
    "\1\0\1\3\10\0\15\3\1\221\2\3\1\u0115\12\3"+
    "\1\u0182\1\3\1\u0183\5\3\10\0\2\3\1\0\1\3"+
    "\10\0\25\3\1\75\15\3\10\0\2\3\1\0\1\3"+
    "\10\0\20\3\1\221\22\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u0115\16\3\1\u0121\23\3\10\0\2\3\1\0"+
    "\1\3\10\0\15\3\1\u0184\25\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u0185\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\26\3\1\u0186\14\3\10\0\2\3\1\0\1\3"+
    "\10\0\14\3\1\u0187\26\3\10\0\2\3\1\0\1\3"+
    "\10\0\14\3\1\u0188\11\3\1\u0189\14\3\10\0\2\3"+
    "\1\0\1\3\10\0\10\3\1\u018a\32\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\67\12\3\1\67\5\3\1\u018b"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\10\3\1\u0153"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\26\3\1\u0177"+
    "\14\3\10\0\2\3\1\0\1\3\10\0\26\3\1\u018c"+
    "\14\3\10\0\2\3\1\0\1\3\10\0\15\3\1\221"+
    "\25\3\10\0\2\3\1\0\1\3\10\0\16\3\1\u018d"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\14\3\1\u018e"+
    "\26\3\10\0\2\3\1\0\1\3\10\0\13\3\1\u018f"+
    "\1\3\1\u0190\10\3\1\u0191\6\3\1\u0192\5\3\10\0"+
    "\2\3\1\0\1\u0193\10\0\16\3\1\u0194\24\3\10\0"+
    "\2\3\1\0\1\3\10\0\17\3\1\u0195\13\3\1\u0196"+
    "\7\3\10\0\2\3\1\0\1\3\10\0\21\3\1\u0197"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\14\3\1\u0198"+
    "\26\3\10\0\2\3\1\0\1\3\10\0\21\3\1\75"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\16\3\1\67"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\21\3\1\u011c"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\1\u0199\42\3"+
    "\10\0\2\3\1\0\1\3\10\0\33\3\1\67\7\3"+
    "\10\0\2\3\1\0\1\3\10\0\10\3\1\221\32\3"+
    "\10\0\2\3\1\0\1\3\10\0\15\3\1\353\25\3"+
    "\10\0\2\3\1\0\1\3\10\0\1\u019a\12\3\1\u019b"+
    "\27\3\10\0\2\3\1\0\1\3\10\0\26\3\1\221"+
    "\14\3\10\0\2\3\1\0\1\3\10\0\1\67\15\3"+
    "\1\u019c\24\3\10\0\2\3\1\0\1\3\10\0\25\3"+
    "\1\260\15\3\10\0\2\3\1\0\1\3\10\0\11\3"+
    "\1\u019d\31\3\10\0\2\3\1\0\1\3\10\0\32\3"+
    "\1\67\10\3\10\0\2\3\1\0\1\3\10\0\34\3"+
    "\1\u019e\6\3\10\0\2\3\1\0\1\3\10\0\32\3"+
    "\1\u0135\10\3\10\0\2\3\1\0\1\3\10\0\10\3"+
    "\1\u0117\32\3\10\0\2\3\1\0\1\3\10\0\34\3"+
    "\1\63\6\3\10\0\2\3\1\0\1\3\10\0\23\3"+
    "\1\67\17\3\10\0\2\3\1\0\1\3\10\0\36\3"+
    "\1\u019f\4\3\10\0\2\3\1\0\1\3\10\0\15\3"+
    "\1\u01a0\25\3\10\0\2\3\1\0\1\3\10\0\1\u01a1"+
    "\24\3\1\u01a2\15\3\10\0\2\3\1\0\1\3\10\0"+
    "\1\u01a3\17\3\1\67\22\3\10\0\2\3\1\0\1\221"+
    "\10\0\43\3\10\0\2\3\1\0\1\3\10\0\16\3"+
    "\1\u01a4\24\3\10\0\2\3\1\0\1\3\10\0\13\3"+
    "\1\u01a5\27\3\10\0\2\3\1\0\1\3\10\0\1\u01a6"+
    "\42\3\10\0\2\3\1\0\1\3\10\0\16\3\1\u01a7"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\1\u01a8\42\3"+
    "\10\0\2\3\1\0\1\3\10\0\26\3\1\u01a9\14\3"+
    "\10\0\2\3\1\0\1\u01aa\10\0\43\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\u01ab\42\3\10\0\2\3\1\0"+
    "\1\u01ac\10\0\13\3\1\275\4\3\1\u0110\22\3\10\0"+
    "\2\3\1\0\1\3\10\0\26\3\1\u01ad\14\3\10\0"+
    "\2\3\1\0\1\3\10\0\10\3\1\u01ae\32\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u01af\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\21\3\1\72\21\3\10\0"+
    "\2\3\1\0\1\3\10\0\20\3\1\227\22\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\u01b0\42\3\10\0\2\3"+
    "\1\0\1\3\10\0\13\3\1\u01b1\27\3\10\0\2\3"+
    "\1\0\1\3\10\0\13\3\1\u01b2\27\3\10\0\2\3"+
    "\1\0\1\3\10\0\16\3\1\u01b3\24\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\u01b4\20\3\1\u01b5\4\3\1\u01b6"+
    "\5\3\1\u01b7\6\3\10\0\2\3\1\0\1\300\10\0"+
    "\43\3\10\0\2\3\1\0\1\3\10\0\24\3\1\354"+
    "\16\3\10\0\2\3\1\0\1\3\10\0\20\3\1\67"+
    "\22\3\10\0\2\3\1\0\1\117\10\0\43\3\10\0"+
    "\2\3\1\0\1\u0153\10\0\43\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\u01b8\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\u01b9\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\14\3\1\72\1\u01ba\25\3\10\0\2\3"+
    "\1\0\1\3\10\0\23\3\1\u01bb\17\3\10\0\2\3"+
    "\1\0\1\3\10\0\21\3\1\130\5\3\1\u0114\13\3"+
    "\10\0\2\3\1\0\1\u01bc\10\0\43\3\10\0\2\3"+
    "\1\0\1\3\10\0\34\3\1\67\6\3\10\0\2\3"+
    "\1\0\1\3\10\0\6\3\1\272\34\3\11\0\1\u0142"+
    "\63\0\1\u01bd\1\0\2\3\1\0\1\72\10\0\43\3"+
    "\10\0\2\3\1\0\1\3\10\0\20\3\1\u01be\22\3"+
    "\10\0\2\u0145\1\0\1\u0145\1\57\1\u0145\6\0\43\u0145"+
    "\10\0\2\3\1\0\1\3\10\0\14\3\1\u01bf\26\3"+
    "\10\0\2\3\1\0\1\3\10\0\10\3\1\u01ab\32\3"+
    "\10\0\2\3\1\0\1\3\10\0\17\3\1\u01c0\23\3"+
    "\10\0\2\3\1\0\1\3\10\0\13\3\1\u0177\27\3"+
    "\10\0\2\3\1\0\1\3\10\0\35\3\1\u010b\5\3"+
    "\24\0\1\u01c1\52\0\2\3\1\0\1\3\10\0\17\3"+
    "\1\72\23\3\10\0\2\3\1\0\1\3\10\0\20\3"+
    "\1\u01c2\22\3\10\0\2\3\1\0\1\3\10\0\21\3"+
    "\1\377\21\3\10\0\2\3\1\0\1\3\10\0\20\3"+
    "\1\323\22\3\10\0\2\3\1\0\1\3\10\0\16\3"+
    "\1\u0195\24\3\10\0\2\3\1\0\1\3\10\0\14\3"+
    "\1\75\26\3\10\0\2\3\1\0\1\3\10\0\16\3"+
    "\1\u01c3\24\3\10\0\2\3\1\0\1\3\10\0\13\3"+
    "\1\72\27\3\10\0\2\3\1\0\1\3\10\0\10\3"+
    "\1\u01c4\32\3\10\0\2\3\1\0\1\3\10\0\33\3"+
    "\1\354\7\3\10\0\2\3\1\0\1\3\10\0\14\3"+
    "\1\u01c5\26\3\10\0\2\3\1\0\1\u01c6\10\0\43\3"+
    "\10\0\2\3\1\0\1\3\10\0\14\3\1\u01c7\26\3"+
    "\10\0\2\3\1\0\1\3\10\0\24\3\1\u01c8\16\3"+
    "\10\0\2\3\1\0\1\3\10\0\15\3\1\u01c9\25\3"+
    "\10\0\2\3\1\0\1\3\10\0\14\3\1\u01ca\10\3"+
    "\1\u01cb\15\3\10\0\2\3\1\0\1\3\10\0\20\3"+
    "\1\u01cc\22\3\10\0\2\3\1\0\1\3\10\0\26\3"+
    "\1\u01cd\14\3\10\0\2\3\1\0\1\3\10\0\20\3"+
    "\1\u01ce\22\3\10\0\2\3\1\0\1\3\10\0\1\u01cf"+
    "\42\3\10\0\2\3\1\0\1\3\10\0\26\3\1\u01d0"+
    "\14\3\10\0\2\3\1\0\1\3\10\0\16\3\1\u0114"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\30\3\1\255"+
    "\12\3\10\0\2\3\1\0\1\3\10\0\21\3\1\u01d1"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\26\3\1\u01d2"+
    "\2\3\1\u01d3\11\3\10\0\2\3\1\0\1\354\10\0"+
    "\43\3\10\0\2\3\1\0\1\3\10\0\13\3\1\u01d4"+
    "\27\3\10\0\2\3\1\0\1\3\10\0\14\3\1\323"+
    "\26\3\10\0\2\3\1\0\1\3\10\0\13\3\1\u01d5"+
    "\27\3\10\0\2\3\1\0\1\3\10\0\25\3\1\u01d6"+
    "\15\3\10\0\2\3\1\0\1\3\10\0\15\3\1\u01d7"+
    "\25\3\10\0\2\3\1\0\1\3\10\0\14\3\1\u01d8"+
    "\26\3\10\0\2\3\1\0\1\3\10\0\14\3\1\u01d9"+
    "\3\3\1\u01c4\22\3\10\0\2\3\1\0\1\3\10\0"+
    "\14\3\1\221\26\3\10\0\2\3\1\0\1\3\10\0"+
    "\32\3\1\72\10\3\10\0\2\3\1\0\1\3\10\0"+
    "\1\u01b4\42\3\10\0\2\3\1\0\1\3\10\0\24\3"+
    "\1\u01da\16\3\10\0\2\3\1\0\1\3\10\0\20\3"+
    "\1\u01db\22\3\10\0\2\3\1\0\1\u01dc\10\0\43\3"+
    "\10\0\2\3\1\0\1\3\10\0\25\3\1\u01dd\15\3"+
    "\10\0\2\3\1\0\1\3\10\0\14\3\1\u017c\26\3"+
    "\10\0\2\3\1\0\1\3\10\0\14\3\1\354\26\3"+
    "\10\0\2\3\1\0\1\3\10\0\20\3\1\u01bf\22\3"+
    "\10\0\2\3\1\0\1\3\10\0\26\3\1\67\14\3"+
    "\10\0\2\3\1\0\1\3\10\0\16\3\1\u01de\24\3"+
    "\10\0\2\3\1\0\1\3\10\0\1\u01df\42\3\10\0"+
    "\2\3\1\0\1\u01e0\10\0\43\3\10\0\2\3\1\0"+
    "\1\3\10\0\15\3\1\u0137\25\3\10\0\2\3\1\0"+
    "\1\3\10\0\25\3\1\311\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u0102\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\25\3\1\354\15\3\10\0\2\3\1\0\1\3"+
    "\10\0\25\3\1\u01e1\15\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u01e2\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\1\u01e3\42\3\10\0\2\3\1\0\1\3\10\0\10\3"+
    "\1\u01e4\32\3\10\0\2\3\1\0\1\3\10\0\25\3"+
    "\1\u01e5\15\3\10\0\2\3\1\0\1\3\10\0\11\3"+
    "\1\u01e6\1\u01e7\1\3\1\u01e8\23\3\1\u01e9\2\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u01ea\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\u0149\42\3\10\0\2\3"+
    "\1\0\1\3\10\0\16\3\1\u01eb\24\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\u01ec\42\3\10\0\2\3\1\0"+
    "\1\3\10\0\20\3\1\u0115\22\3\10\0\2\3\1\0"+
    "\1\3\10\0\16\3\1\u01ed\24\3\10\0\2\3\1\0"+
    "\1\3\10\0\10\3\1\u01ee\32\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\u01ef\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u01f0\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u01f1\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\u01f2\14\3\1\u01f3\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u01f4\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\13\3\1\u01f5\27\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u016d\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\33\3\1\323\7\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\u01f6\32\3\10\0\2\3\1\0\1\3\10\0"+
    "\25\3\1\221\15\3\10\0\2\3\1\0\1\3\10\0"+
    "\32\3\1\u01f7\10\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\u01f8\25\3\1\u019f\4\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\u01f9\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\25\3\1\u01fa\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\14\3\1\141\26\3\10\0\2\3\1\0"+
    "\1\3\10\0\22\3\1\u01fb\20\3\10\0\2\3\1\0"+
    "\1\3\10\0\16\3\1\u01fc\24\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\114\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\16\3\1\u01fd\24\3\10\0\2\3\1\0\1\3"+
    "\10\0\13\3\1\u01fe\27\3\10\0\2\3\1\0\1\3"+
    "\10\0\12\3\1\67\30\3\10\0\2\3\1\0\1\3"+
    "\10\0\21\3\1\u01ff\21\3\10\0\2\3\1\0\1\3"+
    "\10\0\14\3\1\u0200\13\3\1\255\12\3\10\0\2\3"+
    "\1\0\1\u0201\10\0\43\3\10\0\2\3\1\0\1\3"+
    "\10\0\25\3\1\u0202\15\3\10\0\2\3\1\0\1\3"+
    "\10\0\14\3\1\221\1\u0203\25\3\10\0\2\3\1\0"+
    "\1\3\10\0\10\3\1\75\32\3\10\0\2\3\1\0"+
    "\1\3\10\0\11\3\1\u0204\31\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\u0205\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\26\3\1\255\14\3\10\0\2\3\1\0"+
    "\1\3\10\0\21\3\1\221\21\3\10\0\2\3\1\0"+
    "\1\3\10\0\14\3\1\u0206\26\3\10\0\2\3\1\0"+
    "\1\3\10\0\25\3\1\u0207\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\15\3\1\u0208\25\3\10\0\2\3\1\0"+
    "\1\3\10\0\25\3\1\u0209\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\33\3\1\u020a\7\3\10\0\2\3\1\0"+
    "\1\3\10\0\11\3\1\u0144\31\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u020b\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\16\3\1\u020c\24\3\10\0\2\3\1\0\1\3"+
    "\10\0\14\3\1\u020d\26\3\10\0\2\3\1\0\1\3"+
    "\10\0\10\3\1\67\7\3\1\u0201\22\3\10\0\2\3"+
    "\1\0\1\3\10\0\13\3\1\377\27\3\10\0\2\3"+
    "\1\0\1\3\10\0\10\3\1\u020e\32\3\10\0\2\3"+
    "\1\0\1\3\10\0\22\3\1\u0189\20\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\u0166\42\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u020f\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\25\3\1\u0210\15\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u0211\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\34\3\1\323\6\3\10\0\2\3\1\0\1\3\10\0"+
    "\15\3\1\354\25\3\10\0\2\3\1\0\1\3\10\0"+
    "\13\3\1\u0212\27\3\36\0\1\u0213\40\0\2\3\1\0"+
    "\1\3\10\0\14\3\1\u0214\26\3\10\0\2\3\1\0"+
    "\1\3\10\0\14\3\1\72\26\3\10\0\2\3\1\0"+
    "\1\3\10\0\14\3\1\u0215\26\3\10\0\2\3\1\0"+
    "\1\3\10\0\16\3\1\221\24\3\10\0\2\3\1\0"+
    "\1\3\10\0\25\3\1\u0216\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\10\3\1\63\32\3\10\0\2\3\1\0"+
    "\1\3\10\0\20\3\1\u0209\22\3\10\0\2\3\1\0"+
    "\1\3\10\0\25\3\1\u0217\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\15\3\1\u01ab\25\3\10\0\2\3\1\0"+
    "\1\3\10\0\15\3\1\u0218\25\3\10\0\2\3\1\0"+
    "\1\3\10\0\25\3\1\214\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\14\3\1\u0182\26\3\10\0\2\3\1\0"+
    "\1\3\10\0\26\3\1\u0219\14\3\10\0\2\3\1\0"+
    "\1\3\10\0\10\3\1\u010a\5\3\1\u0194\24\3\10\0"+
    "\2\3\1\0\1\3\10\0\20\3\1\u021a\22\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u021b\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\20\3\1\u021c\22\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\125\42\3\10\0\2\3"+
    "\1\0\1\3\10\0\25\3\1\206\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\21\3\1\u01a7\21\3\10\0\2\3"+
    "\1\0\1\3\10\0\22\3\1\u021d\20\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\u021e\42\3\10\0\2\3\1\0"+
    "\1\3\10\0\25\3\1\u01ab\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\10\3\1\u01df\32\3\10\0\2\3\1\0"+
    "\1\u0102\10\0\43\3\10\0\2\3\1\0\1\3\10\0"+
    "\25\3\1\u021f\15\3\10\0\2\3\1\0\1\3\10\0"+
    "\22\3\1\67\20\3\10\0\2\3\1\0\1\u0101\10\0"+
    "\43\3\10\0\2\3\1\0\1\3\10\0\21\3\1\u0117"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\10\3\1\257"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\26\3\1\275"+
    "\14\3\10\0\2\3\1\0\1\3\10\0\14\3\1\206"+
    "\26\3\10\0\2\3\1\0\1\3\10\0\11\3\1\u0220"+
    "\31\3\10\0\2\3\1\0\1\3\10\0\14\3\1\226"+
    "\26\3\10\0\2\3\1\0\1\3\10\0\16\3\1\u0221"+
    "\24\3\10\0\2\3\1\0\1\3\10\0\10\3\1\u0222"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\33\3\1\u010b"+
    "\7\3\10\0\2\3\1\0\1\3\10\0\20\3\1\u0223"+
    "\22\3\10\0\2\3\1\0\1\u0224\10\0\43\3\10\0"+
    "\2\3\1\0\1\3\10\0\10\3\1\u0225\32\3\10\0"+
    "\2\3\1\0\1\3\10\0\15\3\1\u0226\25\3\10\0"+
    "\2\3\1\0\1\3\10\0\20\3\1\100\22\3\10\0"+
    "\2\3\1\0\1\3\10\0\11\3\1\u0227\31\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\u0228\42\3\10\0\2\3"+
    "\1\0\1\3\10\0\26\3\1\u012e\14\3\10\0\2\3"+
    "\1\0\1\3\10\0\26\3\1\u0229\14\3\10\0\2\3"+
    "\1\0\1\3\10\0\25\3\1\u022a\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\15\3\1\u0143\25\3\10\0\2\3"+
    "\1\0\1\3\10\0\21\3\1\u01c0\21\3\10\0\2\3"+
    "\1\0\1\3\10\0\14\3\1\u022b\26\3\10\0\2\3"+
    "\1\0\1\3\10\0\13\3\1\u022c\27\3\10\0\2\3"+
    "\1\0\1\3\10\0\17\3\1\u022d\23\3\10\0\2\3"+
    "\1\0\1\3\10\0\21\3\1\u022e\21\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\u022f\42\3\10\0\2\3\1\0"+
    "\1\3\10\0\30\3\1\323\12\3\10\0\2\3\1\0"+
    "\1\3\10\0\10\3\1\u0230\32\3\10\0\2\3\1\0"+
    "\1\3\10\0\20\3\1\u01df\22\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u0231\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\25\3\1\u0232\15\3\10\0\2\3\1\0\1\3"+
    "\10\0\10\3\1\u0233\32\3\10\0\2\3\1\0\1\3"+
    "\10\0\26\3\1\u0129\6\3\1\354\5\3\10\0\2\3"+
    "\1\0\1\3\10\0\11\3\1\72\31\3\10\0\2\3"+
    "\1\0\1\3\10\0\10\3\1\u0234\32\3\10\0\2\3"+
    "\1\0\1\3\10\0\26\3\1\u0235\14\3\10\0\2\3"+
    "\1\0\1\3\10\0\25\3\1\377\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\14\3\1\u0114\26\3\10\0\2\3"+
    "\1\0\1\3\10\0\25\3\1\u0236\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\20\3\1\u0237\22\3\10\0\2\3"+
    "\1\0\1\3\10\0\13\3\1\u0238\27\3\10\0\2\3"+
    "\1\0\1\3\10\0\26\3\1\u0239\14\3\10\0\2\3"+
    "\1\0\1\3\10\0\10\3\1\67\32\3\10\0\2\3"+
    "\1\0\1\3\10\0\33\3\1\u023a\7\3\10\0\2\3"+
    "\1\0\1\3\10\0\25\3\1\u0102\15\3\10\0\2\3"+
    "\1\0\1\3\10\0\14\3\1\u0189\26\3\10\0\2\3"+
    "\1\0\1\3\10\0\14\3\1\u023b\26\3\10\0\2\3"+
    "\1\0\1\3\10\0\35\3\1\255\5\3\10\0\2\3"+
    "\1\0\1\3\10\0\15\3\1\u023c\25\3\24\0\1\u023d"+
    "\52\0\2\3\1\0\1\3\10\0\25\3\1\u023e\15\3"+
    "\10\0\2\3\1\0\1\3\10\0\1\353\7\3\1\307"+
    "\32\3\10\0\2\3\1\0\1\3\10\0\17\3\1\u0233"+
    "\4\3\1\72\16\3\10\0\2\3\1\0\1\3\10\0"+
    "\24\3\1\u023f\16\3\10\0\2\3\1\0\1\3\10\0"+
    "\15\3\1\u0129\25\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\u0240\32\3\10\0\2\3\1\0\1\3\10\0"+
    "\15\3\1\u0241\25\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\101\32\3\10\0\2\3\1\0\1\3\10\0"+
    "\15\3\1\u0242\25\3\10\0\2\3\1\0\1\3\10\0"+
    "\25\3\1\u0243\15\3\10\0\2\3\1\0\1\3\10\0"+
    "\15\3\1\u0244\25\3\10\0\2\3\1\0\1\3\10\0"+
    "\11\3\1\u0245\31\3\10\0\2\3\1\0\1\u01c4\10\0"+
    "\43\3\10\0\2\3\1\0\1\3\10\0\1\u0246\42\3"+
    "\10\0\2\3\1\0\1\3\10\0\13\3\1\u0247\27\3"+
    "\10\0\2\3\1\0\1\3\10\0\34\3\1\u0248\6\3"+
    "\10\0\2\3\1\0\1\3\10\0\1\u01e4\42\3\10\0"+
    "\2\3\1\0\1\3\10\0\17\3\1\u0177\23\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u0249\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\u024a\42\3\10\0\2\3"+
    "\1\0\1\3\10\0\14\3\1\u024b\26\3\10\0\2\3"+
    "\1\0\1\3\10\0\17\3\1\u024c\23\3\10\0\2\3"+
    "\1\0\1\3\10\0\15\3\1\u024d\25\3\10\0\2\3"+
    "\1\0\1\3\10\0\10\3\1\u024e\32\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\67\24\3\1\u014f\15\3\10\0"+
    "\2\3\1\0\1\3\10\0\20\3\1\u020c\22\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u024f\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\12\3\1\u0250\30\3\10\0"+
    "\2\3\1\0\1\3\10\0\21\3\1\u0233\21\3\10\0"+
    "\2\3\1\0\1\3\10\0\15\3\1\u0251\25\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u0252\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u0189\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\16\3\1\u0253\24\3\10\0"+
    "\2\3\1\0\1\3\10\0\25\3\1\u0168\15\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u0254\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\15\3\1\u0255\25\3\10\0"+
    "\2\3\1\0\1\3\10\0\25\3\1\u0256\15\3\10\0"+
    "\2\3\1\0\1\3\10\0\13\3\1\u0257\27\3\10\0"+
    "\2\3\1\0\1\3\10\0\36\3\1\u0258\4\3\10\0"+
    "\2\3\1\0\1\3\10\0\15\3\1\u0114\25\3\10\0"+
    "\2\3\1\0\1\3\10\0\30\3\1\u0259\12\3\45\0"+
    "\1\u025a\31\0\2\3\1\0\1\3\10\0\31\3\1\u01a7"+
    "\11\3\10\0\2\3\1\0\1\u025b\10\0\43\3\10\0"+
    "\2\3\1\0\1\3\10\0\33\3\1\u025c\7\3\10\0"+
    "\2\3\1\0\1\3\10\0\35\3\1\u0192\5\3\10\0"+
    "\2\3\1\0\1\3\10\0\1\u025d\42\3\10\0\2\3"+
    "\1\0\1\3\10\0\30\3\1\u0220\12\3\10\0\2\3"+
    "\1\0\1\3\10\0\21\3\1\345\21\3\10\0\2\3"+
    "\1\0\1\3\10\0\21\3\1\u025e\21\3\10\0\2\3"+
    "\1\0\1\3\10\0\30\3\1\345\12\3\10\0\2\3"+
    "\1\0\1\3\10\0\10\3\1\u025f\32\3\10\0\2\3"+
    "\1\0\1\3\10\0\26\3\1\u0260\14\3\10\0\2\3"+
    "\1\0\1\3\10\0\36\3\1\u0261\4\3\10\0\2\3"+
    "\1\0\1\3\10\0\1\353\42\3\10\0\2\3\1\0"+
    "\1\3\10\0\20\3\1\u0262\22\3\10\0\2\3\1\0"+
    "\1\3\10\0\26\3\1\u0263\14\3\10\0\2\3\1\0"+
    "\1\3\10\0\25\3\1\u0264\15\3\10\0\2\3\1\0"+
    "\1\3\10\0\1\u0265\42\3\10\0\2\3\1\0\1\3"+
    "\10\0\13\3\1\u0263\27\3\10\0\2\3\1\0\1\3"+
    "\10\0\30\3\1\176\12\3\10\0\2\3\1\0\1\3"+
    "\10\0\27\3\1\u0266\13\3\10\0\2\3\1\0\1\3"+
    "\10\0\27\3\1\u0267\13\3\10\0\2\3\1\0\1\3"+
    "\10\0\21\3\1\u0268\21\3\10\0\2\3\1\0\1\3"+
    "\10\0\25\3\1\u0269\15\3\10\0\2\3\1\0\1\3"+
    "\10\0\14\3\1\u026a\26\3\10\0\2\3\1\0\1\3"+
    "\10\0\13\3\1\u024b\27\3\10\0\2\3\1\0\1\3"+
    "\10\0\17\3\1\117\23\3\10\0\2\3\1\0\1\3"+
    "\10\0\36\3\1\u026b\4\3\10\0\2\3\1\0\1\3"+
    "\10\0\20\3\1\u010b\22\3\10\0\2\3\1\0\1\3"+
    "\10\0\26\3\1\u026c\14\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\221\42\3\10\0\2\3\1\0\1\u01aa\10\0"+
    "\11\3\1\377\1\3\1\u026d\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\15\3\1\350\25\3\10\0\2\3\1\0"+
    "\1\3\10\0\13\3\1\u026e\27\3\10\0\2\3\1\0"+
    "\1\3\10\0\15\3\1\u026f\25\3\10\0\2\3\1\0"+
    "\1\3\10\0\14\3\1\u011d\26\3\10\0\2\3\1\0"+
    "\1\3\10\0\21\3\1\u025e\14\3\1\u0270\4\3\10\0"+
    "\2\3\1\0\1\3\10\0\10\3\1\u0271\32\3\10\0"+
    "\2\3\1\0\1\3\10\0\26\3\1\u0272\3\3\1\u0273"+
    "\10\3\10\0\2\3\1\0\1\3\10\0\21\3\1\u0177"+
    "\21\3\10\0\2\3\1\0\1\3\10\0\20\3\1\u0135"+
    "\22\3\10\0\2\3\1\0\1\3\10\0\23\3\1\u0274"+
    "\7\3\1\u0275\7\3\10\0\2\3\1\0\1\3\10\0"+
    "\20\3\1\u0276\22\3\10\0\2\3\1\0\1\3\10\0"+
    "\25\3\1\u0277\15\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\307\32\3\10\0\2\3\1\0\1\3\10\0"+
    "\13\3\1\u0211\27\3\10\0\2\3\1\0\1\3\10\0"+
    "\25\3\1\u0278\15\3\10\0\2\3\1\0\1\u0279\10\0"+
    "\43\3\10\0\2\3\1\0\1\3\10\0\25\3\1\u027a"+
    "\15\3\10\0\2\3\1\0\1\3\10\0\1\u027b\42\3"+
    "\10\0\2\3\1\0\1\3\10\0\20\3\1\u027c\22\3"+
    "\10\0\2\3\1\0\1\3\10\0\25\3\1\u027d\15\3"+
    "\10\0\2\3\1\0\1\u027e\10\0\43\3\10\0\2\3"+
    "\1\0\1\3\10\0\33\3\1\u027f\7\3\10\0\2\3"+
    "\1\0\1\3\10\0\15\3\1\u0280\25\3\10\0\2\3"+
    "\1\0\1\3\10\0\11\3\1\u0196\31\3\10\0\2\3"+
    "\1\0\1\3\10\0\33\3\1\u0281\7\3\10\0\2\3"+
    "\1\0\1\3\10\0\27\3\1\u0282\13\3\10\0\2\3"+
    "\1\0\1\u0115\10\0\43\3\10\0\2\3\1\0\1\3"+
    "\10\0\15\3\1\u0195\25\3\10\0\2\3\1\0\1\3"+
    "\10\0\14\3\1\u012e\26\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u0283\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\26\3\1\u0192\14\3\10\0\2\3\1\0\1\3\10\0"+
    "\25\3\1\u0284\15\3\10\0\2\3\1\0\1\3\10\0"+
    "\17\3\1\u0285\23\3\10\0\2\3\1\0\1\3\10\0"+
    "\26\3\1\u01d2\14\3\10\0\2\3\1\0\1\3\10\0"+
    "\16\3\1\u0286\24\3\10\0\2\3\1\0\1\3\10\0"+
    "\23\3\1\u0287\17\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\u0288\32\3\10\0\2\3\1\0\1\3\10\0"+
    "\14\3\1\u0289\26\3\10\0\2\3\1\0\1\3\10\0"+
    "\14\3\1\u028a\26\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\u028b\32\3\10\0\2\3\1\0\1\3\10\0"+
    "\25\3\1\u028c\15\3\10\0\2\3\1\0\1\3\10\0"+
    "\26\3\1\u028d\14\3\10\0\2\3\1\0\1\3\10\0"+
    "\13\3\1\u028e\27\3\10\0\2\3\1\0\1\3\10\0"+
    "\1\u028f\42\3\10\0\2\3\1\0\1\3\10\0\27\3"+
    "\1\u0290\13\3\10\0\2\3\1\0\1\3\10\0\11\3"+
    "\1\u0291\1\3\1\u026e\27\3\10\0\2\3\1\0\1\3"+
    "\10\0\1\u0292\42\3\10\0\2\3\1\0\1\3\10\0"+
    "\13\3\1\u0293\27\3\10\0\2\3\1\0\1\3\10\0"+
    "\10\3\1\u0294\32\3\10\0\2\3\1\0\1\3\10\0"+
    "\25\3\1\u0295\15\3\10\0\2\3\1\0\1\3\10\0"+
    "\16\3\1\u0296\24\3\10\0\2\3\1\0\1\3\10\0"+
    "\26\3\1\u028f\14\3\7\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[35255];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\1\1\11\5\1\3\11\34\1\2\11\5\1\1\0"+
    "\167\1\1\0\12\1\1\11\1\0\217\1\1\0\2\1"+
    "\1\0\5\1\1\0\161\1\1\11\3\1\1\0\121\1"+
    "\1\0\51\1\1\0\34\1\1\11\74\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[662];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 208) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { lexeme = yytext(); return Operador;
            } 
            // fall through
          case 16: break;
          case 2: 
            { return ERROR;
            } 
            // fall through
          case 17: break;
          case 3: 
            { lexeme=yytext(); return Identificador;
            } 
            // fall through
          case 18: break;
          case 4: 
            { lexeme = yytext(); return Entero;
            } 
            // fall through
          case 19: break;
          case 5: 
            { /*Ignore*/
            } 
            // fall through
          case 20: break;
          case 6: 
            { return Suma;
            } 
            // fall through
          case 21: break;
          case 7: 
            { lexeme = yytext(); return Simbolo;
            } 
            // fall through
          case 22: break;
          case 8: 
            { return Resta;
            } 
            // fall through
          case 23: break;
          case 9: 
            { return Division;
            } 
            // fall through
          case 24: break;
          case 10: 
            { return Igual;
            } 
            // fall through
          case 25: break;
          case 11: 
            { return Multiplicacion;
            } 
            // fall through
          case 26: break;
          case 12: 
            { lexeme = yytext(); return Double;
            } 
            // fall through
          case 27: break;
          case 13: 
            { lexeme = yytext(); return ComentarioLinea;
            } 
            // fall through
          case 28: break;
          case 14: 
            { lexeme=yytext(); return Reservadas;
            } 
            // fall through
          case 29: break;
          case 15: 
            { lexeme = yytext(); return String1;
            } 
            // fall through
          case 30: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
