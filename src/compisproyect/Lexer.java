/* The following code was generated by JFlex 1.7.0 */

package compisproyect;  
import static compisproyect.Tokens.*; 


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>C:/Users/herma/Documents/NetBeansProjects/compisProyect/src/compisproyect/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\4\1\56\1\57\1\57\1\57\22\0\1\4\1\7\3\0"+
    "\1\7\1\0\1\6\1\63\1\64\1\62\1\61\1\10\1\11\1\3"+
    "\1\55\1\2\1\2\10\2\2\0\1\7\1\60\1\7\2\0\1\21"+
    "\1\36\1\33\1\22\1\23\1\34\1\42\1\35\1\37\1\51\1\44"+
    "\1\30\1\45\1\27\1\32\1\31\1\52\1\26\1\40\1\25\1\5"+
    "\1\47\1\46\1\24\1\41\1\43\4\0\1\50\1\0\4\1\1\16"+
    "\1\15\1\1\1\54\1\12\2\1\1\17\1\1\1\13\4\1\1\20"+
    "\1\14\2\1\1\53\3\1\12\0\1\57\u1fa2\0\1\57\1\57\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\2\1\1\1\5"+
    "\32\2\1\6\1\7\1\10\1\11\1\1\3\2\1\0"+
    "\1\12\1\2\1\13\10\2\1\13\20\2\1\13\13\2"+
    "\1\13\15\2\2\13\2\2\1\13\27\2\2\13\21\2"+
    "\1\13\20\2\1\4\1\0\6\2\1\13\1\2\1\14"+
    "\1\12\1\0\2\2\1\13\7\2\1\13\14\2\1\13"+
    "\57\2\1\13\26\2\1\13\13\2\1\13\2\2\1\13"+
    "\7\2\1\13\13\2\1\13\4\2\1\13\10\2\1\0"+
    "\2\2\1\0\14\2\1\13\10\2\1\0\4\2\1\13"+
    "\3\2\1\13\2\2\1\13\13\2\1\13\15\2\1\13"+
    "\2\2\1\13\2\2\1\13\17\2\1\13\42\2\2\13"+
    "\1\2\1\3\16\2\1\0\1\13\52\2\1\13\30\2"+
    "\1\13\5\2\1\13\1\0\46\2\1\0\11\2\2\13"+
    "\12\2\1\13\5\2\1\13\7\2\1\13\2\2\1\13"+
    "\34\2\1\13\23\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[658];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\65\0\152\0\237\0\324\0\u0109\0\u013e\0\u0173"+
    "\0\u01a8\0\u01dd\0\u0212\0\u0247\0\u027c\0\u02b1\0\u02e6\0\u031b"+
    "\0\u0350\0\u0385\0\u03ba\0\u03ef\0\u0424\0\u0459\0\u048e\0\u04c3"+
    "\0\u04f8\0\u052d\0\u0562\0\u0597\0\u05cc\0\u0601\0\u0636\0\u066b"+
    "\0\u06a0\0\u06d5\0\u070a\0\65\0\65\0\65\0\u073f\0\u0774"+
    "\0\u07a9\0\u07de\0\u0813\0\u0848\0\u087d\0\152\0\u08b2\0\u08e7"+
    "\0\u091c\0\u0951\0\u0986\0\u09bb\0\u09f0\0\u0a25\0\u0a5a\0\u0a8f"+
    "\0\u0ac4\0\u0af9\0\u0b2e\0\u0b63\0\u0b98\0\u0bcd\0\u0c02\0\u0c37"+
    "\0\u0c6c\0\u0ca1\0\u0cd6\0\u0d0b\0\u0d40\0\u0d75\0\u0daa\0\u0ddf"+
    "\0\u0e14\0\u0e49\0\u0e7e\0\u0eb3\0\u0ee8\0\u0f1d\0\u0f52\0\u0f87"+
    "\0\u0fbc\0\u0ff1\0\u1026\0\u105b\0\u1090\0\u10c5\0\u10fa\0\u112f"+
    "\0\u1164\0\u1199\0\u11ce\0\u1203\0\u1238\0\u126d\0\u12a2\0\u12d7"+
    "\0\u130c\0\u1341\0\u1376\0\u13ab\0\u13e0\0\u1415\0\u144a\0\u147f"+
    "\0\u14b4\0\u14e9\0\u151e\0\u1553\0\u1588\0\u15bd\0\u15f2\0\u1627"+
    "\0\u165c\0\u1691\0\u16c6\0\u16fb\0\u1730\0\u1765\0\u179a\0\u17cf"+
    "\0\u1804\0\u1839\0\u186e\0\u18a3\0\u18d8\0\u190d\0\u1942\0\u1977"+
    "\0\u19ac\0\u19e1\0\u1a16\0\u1a4b\0\u1a80\0\u1ab5\0\u1aea\0\u1b1f"+
    "\0\u1b54\0\u1b89\0\u1bbe\0\u1bf3\0\u1c28\0\u1c5d\0\u1c92\0\u1cc7"+
    "\0\u1cfc\0\u1d31\0\u1d66\0\u1d9b\0\u1dd0\0\u1e05\0\u1e3a\0\u1e6f"+
    "\0\u1ea4\0\u1ed9\0\u1f0e\0\u1f43\0\u1f78\0\u1fad\0\u1fe2\0\u2017"+
    "\0\u204c\0\u2081\0\u20b6\0\u20eb\0\u2120\0\u2155\0\u218a\0\u21bf"+
    "\0\u21f4\0\u2229\0\u225e\0\65\0\u2293\0\u22c8\0\u22fd\0\u2332"+
    "\0\u2367\0\u239c\0\u23d1\0\u2406\0\u0ddf\0\u243b\0\u2470\0\u24a5"+
    "\0\u24da\0\u250f\0\u2544\0\u2579\0\u25ae\0\u25e3\0\u2618\0\u264d"+
    "\0\u2682\0\u26b7\0\u26ec\0\u2721\0\u2756\0\u278b\0\u27c0\0\u27f5"+
    "\0\u282a\0\u285f\0\u2894\0\u28c9\0\u28fe\0\u2933\0\u2968\0\u299d"+
    "\0\u29d2\0\u2a07\0\u2a3c\0\u2a71\0\u2aa6\0\u2adb\0\u2b10\0\u2b45"+
    "\0\u2b7a\0\u2baf\0\u2be4\0\u2c19\0\u2c4e\0\u2c83\0\u2cb8\0\u2ced"+
    "\0\u2d22\0\u2d57\0\u2d8c\0\u2dc1\0\u2df6\0\u2e2b\0\u2e60\0\u2e95"+
    "\0\u2eca\0\u2eff\0\u2f34\0\u2f69\0\u2f9e\0\u2fd3\0\u3008\0\u303d"+
    "\0\u3072\0\u30a7\0\u30dc\0\u3111\0\u3146\0\u317b\0\u31b0\0\u31e5"+
    "\0\u321a\0\u324f\0\u3284\0\u32b9\0\u32ee\0\u3323\0\u3358\0\u338d"+
    "\0\u33c2\0\u33f7\0\u342c\0\u3461\0\u3496\0\u34cb\0\u3500\0\u3535"+
    "\0\u356a\0\u359f\0\u35d4\0\u3609\0\u363e\0\u3673\0\u36a8\0\u36dd"+
    "\0\u2229\0\u3712\0\u3747\0\u377c\0\u37b1\0\u37e6\0\u381b\0\u3850"+
    "\0\u3885\0\u38ba\0\u38ef\0\u3924\0\u3959\0\u398e\0\u39c3\0\u39f8"+
    "\0\u3a2d\0\u3a62\0\u3a97\0\u3acc\0\u3b01\0\u3b36\0\u3b6b\0\u3ba0"+
    "\0\u3bd5\0\u3c0a\0\u3c3f\0\u3c74\0\u3ca9\0\u3cde\0\u3d13\0\u3d48"+
    "\0\u3d7d\0\u3db2\0\u3de7\0\u3e1c\0\u3e51\0\u3e86\0\u3ebb\0\u3ef0"+
    "\0\u3f25\0\u3f5a\0\u3f8f\0\u3fc4\0\u3ff9\0\u402e\0\u4063\0\u4098"+
    "\0\u40cd\0\u4102\0\u4137\0\u416c\0\u41a1\0\u41d6\0\u420b\0\u4240"+
    "\0\u4275\0\u42aa\0\u42df\0\u4314\0\u4349\0\u437e\0\u43b3\0\u43e8"+
    "\0\u441d\0\u4452\0\u4487\0\u44bc\0\u44f1\0\u4526\0\u455b\0\u4590"+
    "\0\u45c5\0\u45fa\0\u462f\0\u4664\0\u4699\0\u46ce\0\u4703\0\u4738"+
    "\0\u476d\0\u47a2\0\u47d7\0\u480c\0\u4841\0\u4876\0\u48ab\0\u48e0"+
    "\0\u4915\0\u494a\0\u497f\0\u49b4\0\u49e9\0\u4a1e\0\u4a53\0\u4a88"+
    "\0\u4abd\0\u4af2\0\u4b27\0\u4b5c\0\u4b91\0\u4bc6\0\u4bfb\0\u4c30"+
    "\0\u4c65\0\u4c9a\0\u4ccf\0\u4d04\0\u4d39\0\u4d6e\0\u4da3\0\u4dd8"+
    "\0\u4e0d\0\u4e42\0\u4e77\0\u4eac\0\u4ee1\0\u4f16\0\u4f4b\0\u4f80"+
    "\0\u4fb5\0\u4fea\0\u501f\0\u5054\0\u5089\0\u50be\0\u50f3\0\u5128"+
    "\0\u3e51\0\u515d\0\u5192\0\u51c7\0\u51fc\0\u5231\0\u5266\0\u529b"+
    "\0\u52d0\0\u5305\0\u533a\0\u536f\0\u53a4\0\u53d9\0\u540e\0\u5443"+
    "\0\u5478\0\u54ad\0\u54e2\0\u5517\0\u554c\0\u5581\0\u55b6\0\u55eb"+
    "\0\u5620\0\u5655\0\u568a\0\u56bf\0\u56f4\0\u5729\0\u575e\0\u5793"+
    "\0\u57c8\0\u57fd\0\u5832\0\u5867\0\u589c\0\u58d1\0\u5906\0\u593b"+
    "\0\65\0\u5970\0\u59a5\0\u59da\0\u2367\0\u5a0f\0\u5a44\0\u5a79"+
    "\0\u5aae\0\u5ae3\0\u5b18\0\u5b4d\0\u5b82\0\u5bb7\0\u5bec\0\u5c21"+
    "\0\u5c56\0\u5c8b\0\u5cc0\0\u5cf5\0\u5d2a\0\u5d5f\0\u5d94\0\u5dc9"+
    "\0\u5dfe\0\u5e33\0\u5e68\0\u5e9d\0\u5ed2\0\u5f07\0\u5f3c\0\u5f71"+
    "\0\u5fa6\0\u5fdb\0\u6010\0\u6045\0\u607a\0\u60af\0\u60e4\0\u6119"+
    "\0\u614e\0\u6183\0\u61b8\0\u61ed\0\u6222\0\u3885\0\u6257\0\u628c"+
    "\0\u62c1\0\u62f6\0\u632b\0\u6360\0\u6395\0\u63ca\0\u63ff\0\u6434"+
    "\0\u6469\0\u649e\0\u64d3\0\u6508\0\u653d\0\u6572\0\u65a7\0\u65dc"+
    "\0\u6611\0\u6646\0\u667b\0\u66b0\0\u66e5\0\u671a\0\u674f\0\u6784"+
    "\0\u67b9\0\u67ee\0\u6823\0\u6858\0\u688d\0\u68c2\0\u68f7\0\u692c"+
    "\0\u6961\0\u6996\0\u69cb\0\u6a00\0\u4b27\0\u6a35\0\u6a6a\0\u6a9f"+
    "\0\u6ad4\0\u6b09\0\u239c\0\u6b3e\0\u6b73\0\u6ba8\0\u6bdd\0\u6c12"+
    "\0\u6c47\0\u6c7c\0\u6cb1\0\u6ce6\0\u6d1b\0\u6d50\0\u6d85\0\u6dba"+
    "\0\u6def\0\u6e24\0\u6e59\0\u6e8e\0\u6ec3\0\u6ef8\0\u6f2d\0\u6f62"+
    "\0\u6f97\0\u6fcc\0\u7001\0\u7036\0\u706b\0\u70a0\0\u70d5\0\u710a"+
    "\0\u713f\0\u7174\0\u71a9\0\u71de\0\u7213\0\u7248\0\u727d\0\u72b2"+
    "\0\u72e7\0\u731c\0\u7351\0\u7386\0\u73bb\0\u73f0\0\u7425\0\u745a"+
    "\0\u748f\0\u74c4\0\u74f9\0\u752e\0\u7563\0\u2e60\0\u7598\0\u75cd"+
    "\0\u7602\0\u7637\0\u766c\0\u76a1\0\u76d6\0\u770b\0\u1376\0\u7740"+
    "\0\u7248\0\u7775\0\u77aa\0\u3acc\0\u77df\0\u7814\0\65\0\u7849"+
    "\0\u787e\0\u78b3\0\u78e8\0\u791d\0\u7952\0\u7987\0\u79bc\0\u79f1"+
    "\0\u7a26\0\u7a5b\0\u7a90\0\u7ac5\0\u7afa\0\u7b2f\0\u7b64\0\u7b99"+
    "\0\u7bce\0\u7c03\0\u7c38\0\u7c6d\0\u7ca2\0\u7cd7\0\u7d0c\0\u7d41"+
    "\0\u7d76\0\u7dab\0\u7de0\0\u7e15\0\u7e4a\0\u7e7f\0\u7eb4\0\u7ee9"+
    "\0\u7f1e\0\u7f53\0\u7f88\0\u7fbd\0\u7ff2\0\u8027\0\u805c\0\u8091"+
    "\0\u80c6\0\u80fb\0\u8130\0\u8165\0\u819a\0\u81cf\0\u8204\0\u8239"+
    "\0\u826e\0\u82a3\0\u79bc\0\u82d8\0\u830d\0\u8342\0\u8377\0\u83ac"+
    "\0\u83e1\0\u8416";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[658];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\2\1\5\1\6\1\7\1\2"+
    "\1\5\1\10\1\11\3\3\1\12\2\3\1\13\1\14"+
    "\1\15\1\3\1\16\1\17\1\20\1\21\1\22\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33"+
    "\1\34\1\35\1\36\1\37\1\40\1\3\1\41\1\3"+
    "\1\42\1\3\1\43\1\5\1\0\1\44\1\45\1\46"+
    "\1\47\1\2\66\0\2\3\2\0\1\3\4\0\43\3"+
    "\12\0\1\4\66\0\1\5\3\0\1\5\45\0\1\5"+
    "\7\0\2\3\2\0\1\3\4\0\15\3\1\50\1\3"+
    "\1\51\6\3\1\52\14\3\11\0\1\53\3\0\1\53"+
    "\4\0\43\53\21\0\1\54\54\0\2\3\2\0\1\3"+
    "\4\0\1\3\1\55\1\3\1\56\37\3\11\0\2\3"+
    "\2\0\1\3\4\0\5\3\1\57\35\3\11\0\2\3"+
    "\2\0\1\60\4\0\10\3\1\61\2\3\1\56\1\62"+
    "\1\63\1\64\2\3\1\65\2\3\1\66\1\3\1\67"+
    "\6\3\1\70\5\3\11\0\2\3\2\0\1\71\4\0"+
    "\7\3\1\72\1\3\1\73\2\3\1\74\3\3\1\75"+
    "\3\3\1\76\1\77\15\3\11\0\2\3\2\0\1\3"+
    "\4\0\12\3\1\100\1\3\1\101\1\102\1\103\7\3"+
    "\1\104\14\3\11\0\2\3\2\0\1\3\4\0\7\3"+
    "\1\105\1\3\1\106\2\3\1\107\3\3\1\110\2\3"+
    "\1\111\1\3\1\112\1\113\14\3\11\0\2\3\2\0"+
    "\1\114\4\0\7\3\1\115\1\3\1\116\6\3\1\117"+
    "\4\3\1\120\15\3\11\0\2\3\2\0\1\121\4\0"+
    "\7\3\1\122\1\3\1\123\6\3\1\124\1\125\21\3"+
    "\11\0\2\3\2\0\1\3\4\0\7\3\1\126\1\3"+
    "\1\127\6\3\1\130\4\3\1\131\15\3\11\0\2\3"+
    "\2\0\1\132\4\0\7\3\1\133\1\3\1\134\2\3"+
    "\1\135\1\3\1\136\1\3\1\137\4\3\1\140\15\3"+
    "\11\0\2\3\2\0\1\141\4\0\14\3\1\142\1\143"+
    "\1\3\1\144\1\3\1\145\1\146\12\3\1\147\5\3"+
    "\11\0\2\3\2\0\1\150\4\0\7\3\1\151\4\3"+
    "\1\152\1\3\1\153\1\3\1\154\2\3\1\155\17\3"+
    "\11\0\2\3\2\0\1\156\4\0\7\3\1\157\1\3"+
    "\1\160\2\3\1\161\1\3\1\162\1\3\1\163\4\3"+
    "\1\164\15\3\11\0\2\3\2\0\1\3\4\0\7\3"+
    "\1\165\10\3\1\166\22\3\11\0\2\3\2\0\1\167"+
    "\4\0\7\3\1\170\1\3\1\171\2\3\1\172\3\3"+
    "\1\173\4\3\1\174\1\3\1\56\13\3\11\0\2\3"+
    "\2\0\1\3\4\0\10\3\1\175\4\3\1\176\4\3"+
    "\1\56\3\3\1\177\4\3\1\200\7\3\11\0\2\3"+
    "\2\0\1\201\4\0\7\3\1\202\1\3\1\203\1\3"+
    "\1\204\3\3\1\205\1\206\1\207\1\3\1\210\1\3"+
    "\1\211\1\3\1\212\3\3\1\213\4\3\1\214\2\3"+
    "\11\0\2\3\2\0\1\3\4\0\11\3\1\215\31\3"+
    "\11\0\2\3\2\0\1\3\4\0\11\3\1\216\2\3"+
    "\1\217\1\3\1\220\1\3\1\221\22\3\11\0\2\3"+
    "\2\0\1\3\4\0\20\3\1\222\22\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\223\13\3\1\224\15\3"+
    "\11\0\2\3\2\0\1\3\4\0\7\3\1\225\1\3"+
    "\1\226\6\3\1\227\4\3\1\230\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\231\4\3\1\232\3\3"+
    "\1\233\2\3\1\234\1\3\1\235\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\236\15\3\1\237\15\3"+
    "\11\0\2\3\2\0\1\3\4\0\20\3\1\240\22\3"+
    "\11\0\2\3\2\0\1\3\4\0\42\3\1\241\65\0"+
    "\1\242\20\0\1\243\54\0\2\3\2\0\1\3\4\0"+
    "\17\3\1\244\5\3\1\245\4\3\1\246\10\3\11\0"+
    "\2\3\2\0\1\3\4\0\10\3\1\247\6\3\1\250"+
    "\23\3\11\0\2\3\2\0\1\3\4\0\7\3\1\251"+
    "\1\3\1\252\13\3\1\253\15\3\11\0\2\53\2\0"+
    "\1\53\1\254\3\0\43\53\11\0\1\54\1\255\2\0"+
    "\1\54\1\256\47\54\2\0\3\54\3\0\2\3\2\0"+
    "\1\3\4\0\2\3\1\56\40\3\11\0\2\3\2\0"+
    "\1\3\4\0\6\3\1\257\34\3\11\0\2\3\2\0"+
    "\1\3\4\0\13\3\1\260\27\3\11\0\2\3\2\0"+
    "\1\3\4\0\7\3\2\56\32\3\11\0\2\3\2\0"+
    "\1\3\4\0\11\3\1\56\31\3\11\0\2\3\2\0"+
    "\1\3\4\0\10\3\1\56\16\3\1\56\13\3\11\0"+
    "\2\3\2\0\1\3\4\0\13\3\1\250\2\3\1\261"+
    "\24\3\11\0\2\3\2\0\1\3\4\0\13\3\1\262"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\26\3\1\263"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\21\3\1\56"+
    "\4\3\1\264\14\3\11\0\2\3\2\0\1\3\4\0"+
    "\30\3\1\56\12\3\11\0\2\3\2\0\1\3\4\0"+
    "\33\3\1\265\7\3\11\0\2\3\2\0\1\3\4\0"+
    "\13\3\1\266\13\3\1\56\13\3\11\0\2\3\2\0"+
    "\1\3\4\0\7\3\1\267\5\3\1\223\1\270\2\3"+
    "\1\271\1\272\3\3\1\273\14\3\11\0\2\3\2\0"+
    "\1\3\4\0\20\3\1\265\22\3\11\0\2\3\2\0"+
    "\1\274\4\0\33\3\1\275\7\3\11\0\2\3\2\0"+
    "\1\3\4\0\21\3\1\276\21\3\11\0\2\3\2\0"+
    "\1\3\4\0\7\3\1\277\16\3\1\300\14\3\11\0"+
    "\2\3\2\0\1\3\4\0\11\3\1\301\1\3\1\302"+
    "\5\3\1\303\3\3\1\304\15\3\11\0\2\3\2\0"+
    "\1\3\4\0\14\3\1\305\26\3\11\0\2\3\2\0"+
    "\1\3\4\0\10\3\1\306\32\3\11\0\2\3\2\0"+
    "\1\3\4\0\26\3\1\62\14\3\11\0\2\3\2\0"+
    "\1\3\4\0\21\3\1\307\21\3\11\0\2\3\2\0"+
    "\1\3\4\0\24\3\1\310\16\3\11\0\2\3\2\0"+
    "\1\3\4\0\12\3\1\311\20\3\1\312\7\3\11\0"+
    "\2\3\2\0\1\313\4\0\7\3\1\314\15\3\1\315"+
    "\1\3\1\316\13\3\11\0\2\3\2\0\1\3\4\0"+
    "\17\3\1\56\23\3\11\0\2\3\2\0\1\3\4\0"+
    "\11\3\1\317\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\33\3\1\320\7\3\11\0\2\3\2\0\1\3\4\0"+
    "\11\3\1\321\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\16\3\1\62\24\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\322\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\323\3\3\1\324\2\3\1\325\1\326\1\3"+
    "\1\327\1\330\3\3\1\331\6\3\1\332\5\3\11\0"+
    "\2\3\2\0\1\3\4\0\16\3\1\333\15\3\1\334"+
    "\6\3\11\0\2\3\2\0\1\3\4\0\30\3\1\335"+
    "\12\3\11\0\2\3\2\0\1\3\4\0\16\3\1\336"+
    "\14\3\1\337\7\3\11\0\2\3\2\0\1\3\4\0"+
    "\13\3\1\340\17\3\1\341\7\3\11\0\2\3\2\0"+
    "\1\3\4\0\12\3\1\216\30\3\11\0\2\3\2\0"+
    "\1\3\4\0\13\3\1\56\1\3\1\342\3\3\1\343"+
    "\21\3\11\0\2\3\2\0\1\3\4\0\23\3\1\215"+
    "\17\3\11\0\2\3\2\0\1\3\4\0\15\3\1\344"+
    "\10\3\1\216\14\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\345\12\3\1\216\12\3\1\346\5\3\11\0"+
    "\2\3\2\0\1\3\4\0\7\3\1\347\11\3\1\350"+
    "\12\3\1\250\6\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\351\14\3\1\62\10\3\11\0\2\3\2\0"+
    "\1\3\4\0\24\3\1\352\16\3\11\0\2\3\2\0"+
    "\1\3\4\0\10\3\1\56\3\3\1\353\11\3\1\354"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\14\3\1\355"+
    "\26\3\11\0\2\3\2\0\1\3\4\0\11\3\1\356"+
    "\6\3\1\357\4\3\1\360\15\3\11\0\2\3\2\0"+
    "\1\3\4\0\7\3\1\317\33\3\11\0\2\3\2\0"+
    "\1\3\4\0\26\3\1\361\14\3\11\0\2\3\2\0"+
    "\1\3\4\0\35\3\1\362\5\3\11\0\2\3\2\0"+
    "\1\3\4\0\13\3\1\363\27\3\11\0\2\3\2\0"+
    "\1\3\4\0\10\3\1\250\32\3\11\0\2\3\2\0"+
    "\1\3\4\0\16\3\1\223\24\3\11\0\2\3\2\0"+
    "\1\3\4\0\11\3\1\364\1\3\1\262\27\3\11\0"+
    "\2\3\2\0\1\3\4\0\13\3\1\365\27\3\11\0"+
    "\2\3\2\0\1\3\4\0\22\3\1\366\20\3\11\0"+
    "\2\3\2\0\1\3\4\0\11\3\1\367\31\3\11\0"+
    "\2\3\2\0\1\3\4\0\14\3\1\370\26\3\11\0"+
    "\2\3\2\0\1\3\4\0\13\3\1\371\12\3\1\372"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\11\3\1\373"+
    "\6\3\1\374\22\3\11\0\2\3\2\0\1\375\4\0"+
    "\20\3\1\103\22\3\11\0\2\3\2\0\1\376\4\0"+
    "\7\3\1\377\4\3\1\u0100\1\u0101\1\u0102\14\3\1\u0103"+
    "\7\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u0104"+
    "\1\3\1\u0105\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\u0106\1\u0107\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\16\3\1\103\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u0108\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u0109\6\3\1\u010a\22\3\11\0\2\3"+
    "\2\0\1\3\4\0\20\3\1\u010b\22\3\11\0\2\3"+
    "\2\0\1\u010c\4\0\14\3\1\u010d\26\3\11\0\2\3"+
    "\2\0\1\3\4\0\14\3\1\u010e\1\3\1\u010f\24\3"+
    "\11\0\2\3\2\0\1\3\4\0\35\3\1\u0110\5\3"+
    "\11\0\2\3\2\0\1\u0111\4\0\16\3\1\u0112\24\3"+
    "\11\0\2\3\2\0\1\3\4\0\16\3\1\u0113\24\3"+
    "\11\0\2\3\2\0\1\3\4\0\21\3\1\u0114\21\3"+
    "\11\0\2\3\2\0\1\3\4\0\13\3\1\u0115\14\3"+
    "\1\240\12\3\11\0\2\3\2\0\1\3\4\0\11\3"+
    "\1\u0116\6\3\1\u0117\22\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u0118\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u0119\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u011a\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\10\3\1\u011b\2\3\1\u011c\1\3\1\250\1\3"+
    "\1\u011d\1\3\1\u011e\3\3\1\u011f\1\u0120\14\3\11\0"+
    "\2\3\2\0\1\3\4\0\20\3\1\u0121\22\3\11\0"+
    "\2\3\2\0\1\3\4\0\33\3\1\u0122\7\3\11\0"+
    "\2\3\2\0\1\3\4\0\24\3\1\u0123\6\3\1\56"+
    "\7\3\11\0\2\3\2\0\1\3\4\0\35\3\1\62"+
    "\5\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u0124"+
    "\2\3\1\u0125\2\3\1\u0126\4\3\1\u0127\4\3\1\u0128"+
    "\7\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u0129"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u012a"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\33\3\1\62"+
    "\7\3\11\0\2\3\2\0\1\3\4\0\14\3\1\u012b"+
    "\6\3\1\u012c\17\3\11\0\2\3\2\0\1\u012d\4\0"+
    "\43\3\11\0\2\3\2\0\1\3\4\0\31\3\1\62"+
    "\11\3\11\0\2\3\2\0\1\3\4\0\26\3\1\u012e"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u012f"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\16\3\1\u0130"+
    "\24\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u0111"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\13\3\1\56"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\7\3\1\376"+
    "\10\3\1\u0131\22\3\11\0\2\3\2\0\1\3\4\0"+
    "\20\3\1\u0132\22\3\11\0\2\3\2\0\1\3\4\0"+
    "\13\3\1\u0133\27\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\62\25\3\11\0\2\3\2\0\1\3\4\0"+
    "\27\3\1\56\13\3\11\0\2\3\2\0\1\3\4\0"+
    "\16\3\1\u0107\24\3\11\0\2\3\2\0\1\3\4\0"+
    "\12\3\1\56\1\u0108\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\14\3\1\251\26\3\11\0\2\3\2\0\1\3"+
    "\4\0\10\3\1\u0134\4\3\1\173\25\3\11\0\2\3"+
    "\2\0\1\3\4\0\15\3\1\u0135\25\3\11\0\2\3"+
    "\2\0\1\3\4\0\25\3\1\u0136\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\25\3\1\u0137\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\14\3\1\u0113\26\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\u0138\13\3\1\114\15\3"+
    "\11\0\2\3\2\0\1\3\4\0\13\3\1\u0139\27\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\u013a\1\3"+
    "\1\u013b\24\3\11\0\2\3\2\0\1\3\4\0\11\3"+
    "\1\u013c\31\3\11\0\2\3\2\0\1\3\4\0\25\3"+
    "\1\317\15\3\11\0\2\3\2\0\1\3\4\0\1\u013d"+
    "\42\3\10\0\56\242\2\0\5\242\2\0\1\u013e\63\0"+
    "\2\3\2\0\1\3\4\0\25\3\1\140\15\3\11\0"+
    "\2\3\2\0\1\3\4\0\20\3\1\317\17\3\1\u013f"+
    "\2\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u0140"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u0137"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\11\3\1\u0111"+
    "\31\3\11\0\2\3\2\0\1\3\4\0\30\3\1\62"+
    "\12\3\11\0\2\3\2\0\1\3\4\0\14\3\1\56"+
    "\26\3\11\0\2\3\2\0\1\3\4\0\15\3\1\70"+
    "\25\3\11\0\1\54\1\255\1\54\1\0\1\54\1\256"+
    "\47\54\2\0\3\54\3\0\1\u0141\3\0\1\u0141\4\0"+
    "\43\u0141\11\0\2\3\2\0\1\3\4\0\4\3\1\56"+
    "\36\3\11\0\2\3\2\0\1\3\4\0\23\3\1\u0142"+
    "\17\3\11\0\2\3\2\0\1\3\4\0\20\3\1\u0143"+
    "\22\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0144"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\20\3\1\u0145"+
    "\22\3\11\0\2\3\2\0\1\3\4\0\11\3\1\u0146"+
    "\31\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u0147"+
    "\1\3\1\56\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\16\3\1\u0148\24\3\11\0\2\3\2\0\1\3\4\0"+
    "\11\3\1\u0149\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\16\3\1\u014a\6\3\1\u014b\15\3\11\0\2\3\2\0"+
    "\1\3\4\0\7\3\1\u014c\1\3\1\u014d\31\3\11\0"+
    "\2\3\2\0\1\3\4\0\21\3\1\u014e\21\3\11\0"+
    "\2\3\2\0\1\3\4\0\24\3\1\114\16\3\11\0"+
    "\2\3\2\0\1\3\4\0\7\3\1\240\33\3\11\0"+
    "\2\3\2\0\1\3\4\0\21\3\1\56\21\3\11\0"+
    "\2\3\2\0\1\3\4\0\30\3\1\u014f\12\3\11\0"+
    "\2\3\2\0\1\3\4\0\13\3\1\u0150\5\3\1\u0151"+
    "\10\3\1\56\10\3\11\0\2\3\2\0\1\3\4\0"+
    "\21\3\1\u0135\21\3\11\0\2\3\2\0\1\3\4\0"+
    "\11\3\1\u0152\2\3\1\u0153\26\3\11\0\2\3\2\0"+
    "\1\3\4\0\11\3\1\u0154\31\3\11\0\2\3\2\0"+
    "\1\3\4\0\13\3\1\56\12\3\1\u0155\14\3\11\0"+
    "\2\3\2\0\1\3\4\0\16\3\1\u0156\24\3\11\0"+
    "\2\3\2\0\1\3\3\0\1\u0157\43\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\u0158\33\3\11\0\2\3"+
    "\2\0\1\3\4\0\16\3\1\u0159\24\3\11\0\2\3"+
    "\2\0\1\3\4\0\13\3\1\u015a\27\3\11\0\2\3"+
    "\2\0\1\3\4\0\17\3\1\u015b\23\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\56\3\3\1\u0143\25\3"+
    "\11\0\2\3\2\0\1\3\4\0\15\3\1\u015c\7\3"+
    "\1\u015d\15\3\11\0\2\3\2\0\1\3\4\0\30\3"+
    "\1\u015e\2\3\1\56\7\3\11\0\2\3\2\0\1\3"+
    "\4\0\36\3\1\u015f\4\3\11\0\2\3\2\0\1\3"+
    "\4\0\15\3\1\56\25\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u0160\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\40\3\1\u0161\2\3\11\0\2\3\2\0\1\3"+
    "\4\0\26\3\1\u0162\14\3\11\0\2\3\2\0\1\3"+
    "\4\0\10\3\1\u0163\5\3\1\56\24\3\11\0\2\3"+
    "\2\0\1\u0164\4\0\43\3\11\0\2\3\2\0\1\3"+
    "\4\0\7\3\1\u0165\33\3\11\0\2\3\2\0\1\3"+
    "\4\0\16\3\1\u0166\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\20\3\1\u0167\22\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u0168\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u0169\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u016a\6\3\1\u016b\22\3\11\0\2\3"+
    "\2\0\1\3\4\0\16\3\1\u016c\24\3\11\0\2\3"+
    "\2\0\1\3\4\0\21\3\1\u016d\4\3\1\56\1\3"+
    "\1\u016e\12\3\11\0\2\3\2\0\1\3\4\0\23\3"+
    "\1\216\17\3\11\0\2\3\2\0\1\3\4\0\16\3"+
    "\1\u016f\24\3\11\0\2\3\2\0\1\3\4\0\11\3"+
    "\1\u0170\31\3\11\0\2\3\2\0\1\u0171\4\0\25\3"+
    "\1\u0172\15\3\11\0\2\3\2\0\1\3\4\0\11\3"+
    "\1\u0173\31\3\11\0\2\3\2\0\1\3\4\0\11\3"+
    "\1\56\7\3\1\u0174\21\3\11\0\2\3\2\0\1\3"+
    "\4\0\23\3\1\u0175\17\3\11\0\2\3\2\0\1\3"+
    "\4\0\30\3\1\u0176\12\3\11\0\2\3\2\0\1\3"+
    "\4\0\10\3\1\u0110\32\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u0107\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\10\3\1\56\32\3\11\0\2\3\2\0\1\3"+
    "\4\0\7\3\1\u0107\33\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u0177\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\16\3\1\u0178\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u0179\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\21\3\1\350\21\3\11\0\2\3\2\0\1\3"+
    "\4\0\21\3\1\u017a\21\3\11\0\2\3\2\0\1\3"+
    "\4\0\17\3\1\u014a\1\3\1\u017b\4\3\1\u017c\14\3"+
    "\11\0\2\3\2\0\1\3\4\0\21\3\1\u017d\21\3"+
    "\11\0\2\3\2\0\1\3\4\0\15\3\1\216\2\3"+
    "\1\u0111\12\3\1\u017e\1\3\1\u017f\5\3\11\0\2\3"+
    "\2\0\1\3\4\0\25\3\1\65\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\20\3\1\216\22\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\u0111\5\3\1\u011d\23\3"+
    "\11\0\2\3\2\0\1\3\4\0\15\3\1\u0180\25\3"+
    "\11\0\2\3\2\0\1\3\4\0\11\3\1\u0181\31\3"+
    "\11\0\2\3\2\0\1\3\4\0\26\3\1\u0182\14\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\u0183\26\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\u0184\11\3"+
    "\1\u0185\14\3\11\0\2\3\2\0\1\3\4\0\7\3"+
    "\1\u0186\33\3\11\0\2\3\2\0\1\3\4\0\11\3"+
    "\1\56\1\3\1\56\5\3\1\u0187\21\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\u0149\33\3\11\0\2\3"+
    "\2\0\1\3\4\0\26\3\1\u0173\14\3\11\0\2\3"+
    "\2\0\1\3\4\0\26\3\1\u0188\14\3\11\0\2\3"+
    "\2\0\1\3\4\0\15\3\1\216\25\3\11\0\2\3"+
    "\2\0\1\3\4\0\16\3\1\u0189\24\3\11\0\2\3"+
    "\2\0\1\3\4\0\14\3\1\u018a\26\3\11\0\2\3"+
    "\2\0\1\3\4\0\13\3\1\u018b\1\3\1\u018c\10\3"+
    "\1\u018d\6\3\1\u018e\5\3\11\0\2\3\2\0\1\u018f"+
    "\4\0\16\3\1\u0190\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\17\3\1\u0191\13\3\1\u0192\7\3\11\0\2\3"+
    "\2\0\1\3\4\0\14\3\1\u0193\26\3\11\0\2\3"+
    "\2\0\1\3\4\0\21\3\1\u0194\21\3\11\0\2\3"+
    "\2\0\1\3\4\0\21\3\1\65\21\3\11\0\2\3"+
    "\2\0\1\3\4\0\16\3\1\56\24\3\11\0\2\3"+
    "\2\0\1\3\4\0\21\3\1\u0118\21\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\u0195\31\3\11\0\2\3"+
    "\2\0\1\3\4\0\33\3\1\56\7\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\216\33\3\11\0\2\3"+
    "\2\0\1\3\4\0\15\3\1\347\25\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\u0196\1\3\1\u0197\27\3"+
    "\11\0\2\3\2\0\1\3\4\0\26\3\1\216\14\3"+
    "\11\0\2\3\2\0\1\3\4\0\11\3\1\56\4\3"+
    "\1\u0198\24\3\11\0\2\3\2\0\1\3\4\0\25\3"+
    "\1\253\15\3\11\0\2\3\2\0\1\3\4\0\10\3"+
    "\1\u0199\32\3\11\0\2\3\2\0\1\3\4\0\32\3"+
    "\1\56\10\3\11\0\2\3\2\0\1\3\4\0\32\3"+
    "\1\u0131\10\3\11\0\2\3\2\0\1\3\4\0\34\3"+
    "\1\u019a\6\3\11\0\2\3\2\0\1\3\4\0\7\3"+
    "\1\u0113\33\3\11\0\2\3\2\0\1\3\4\0\34\3"+
    "\1\103\6\3\11\0\2\3\2\0\1\3\4\0\23\3"+
    "\1\56\17\3\11\0\2\3\2\0\1\3\4\0\36\3"+
    "\1\u019b\4\3\11\0\2\3\2\0\1\3\4\0\15\3"+
    "\1\u019c\25\3\11\0\2\3\2\0\1\3\4\0\11\3"+
    "\1\u019d\13\3\1\u019e\15\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u019f\6\3\1\56\22\3\11\0\2\3"+
    "\2\0\1\216\4\0\43\3\11\0\2\3\2\0\1\3"+
    "\4\0\16\3\1\u01a0\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u01a1\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u01a2\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\16\3\1\u01a3\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u01a4\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\26\3\1\u01a5\14\3\11\0\2\3\2\0\1\u01a6"+
    "\4\0\43\3\11\0\2\3\2\0\1\3\4\0\11\3"+
    "\1\u01a7\31\3\11\0\2\3\2\0\1\u01a8\4\0\13\3"+
    "\1\262\4\3\1\u010c\22\3\11\0\2\3\2\0\1\3"+
    "\4\0\26\3\1\u01a9\14\3\11\0\2\3\2\0\1\3"+
    "\4\0\7\3\1\u01aa\33\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u01ab\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\21\3\1\62\21\3\11\0\2\3\2\0\1\3"+
    "\4\0\20\3\1\224\22\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u01ac\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u01ad\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u01ae\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\16\3\1\u01af\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u01b0\7\3\1\u01b1\4\3\1\u01b2\5\3"+
    "\1\u01b3\6\3\11\0\2\3\2\0\1\265\4\0\43\3"+
    "\11\0\2\3\2\0\1\3\4\0\24\3\1\350\16\3"+
    "\11\0\2\3\2\0\1\3\4\0\20\3\1\56\22\3"+
    "\11\0\2\3\2\0\1\114\4\0\43\3\11\0\2\3"+
    "\2\0\1\u0149\4\0\43\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u01b4\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u01b5\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\14\3\1\62\1\u01b6\25\3\11\0\2\3\2\0"+
    "\1\3\4\0\23\3\1\u01b7\17\3\11\0\2\3\2\0"+
    "\1\3\4\0\21\3\1\125\5\3\1\u0110\13\3\11\0"+
    "\2\3\2\0\1\u01b8\4\0\43\3\11\0\2\3\2\0"+
    "\1\3\4\0\34\3\1\56\6\3\11\0\2\3\2\0"+
    "\1\3\4\0\5\3\1\257\35\3\12\0\1\u013e\61\0"+
    "\1\u01b9\1\0\2\3\2\0\1\62\4\0\43\3\11\0"+
    "\2\3\2\0\1\3\4\0\20\3\1\u01ba\22\3\11\0"+
    "\2\u0141\2\0\1\u0141\1\54\3\0\43\u0141\11\0\2\3"+
    "\2\0\1\3\4\0\20\3\1\u01bb\22\3\11\0\2\3"+
    "\2\0\1\3\4\0\21\3\1\373\21\3\11\0\2\3"+
    "\2\0\1\3\4\0\20\3\1\317\22\3\11\0\2\3"+
    "\2\0\1\3\4\0\16\3\1\u0191\24\3\11\0\2\3"+
    "\2\0\1\3\4\0\14\3\1\65\26\3\11\0\2\3"+
    "\2\0\1\3\4\0\24\3\1\u01bc\16\3\11\0\2\3"+
    "\2\0\1\3\4\0\16\3\1\u01bd\24\3\11\0\2\3"+
    "\2\0\1\3\4\0\13\3\1\62\27\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\u01be\33\3\11\0\2\3"+
    "\2\0\1\3\4\0\33\3\1\350\7\3\11\0\2\3"+
    "\2\0\1\u01bf\4\0\43\3\11\0\2\3\2\0\1\3"+
    "\4\0\14\3\1\u01c0\26\3\11\0\2\3\2\0\1\3"+
    "\4\0\14\3\1\u01c1\26\3\11\0\2\3\2\0\1\3"+
    "\4\0\15\3\1\u01c2\25\3\11\0\2\3\2\0\1\3"+
    "\4\0\14\3\1\u01c3\10\3\1\u01c4\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\20\3\1\u01c5\22\3\11\0\2\3"+
    "\2\0\1\3\4\0\14\3\1\u01c6\26\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\u01a7\33\3\11\0\2\3"+
    "\2\0\1\3\4\0\17\3\1\u01c7\23\3\11\0\2\3"+
    "\2\0\1\3\4\0\13\3\1\u0173\27\3\11\0\2\3"+
    "\2\0\1\3\4\0\35\3\1\u0107\5\3\33\0\1\u01c8"+
    "\42\0\2\3\2\0\1\3\4\0\17\3\1\62\23\3"+
    "\11\0\2\3\2\0\1\3\4\0\11\3\1\u01c9\31\3"+
    "\11\0\2\3\2\0\1\3\4\0\26\3\1\u01ca\14\3"+
    "\11\0\2\3\2\0\1\3\4\0\20\3\1\u01cb\22\3"+
    "\11\0\2\3\2\0\1\3\4\0\26\3\1\u01cc\14\3"+
    "\11\0\2\3\2\0\1\3\4\0\16\3\1\u0110\24\3"+
    "\11\0\2\3\2\0\1\3\4\0\30\3\1\250\12\3"+
    "\11\0\2\3\2\0\1\3\4\0\21\3\1\u01cd\21\3"+
    "\11\0\2\3\2\0\1\3\4\0\26\3\1\u01ce\2\3"+
    "\1\u01cf\11\3\11\0\2\3\2\0\1\350\4\0\43\3"+
    "\11\0\2\3\2\0\1\3\4\0\11\3\1\u01b0\31\3"+
    "\11\0\2\3\2\0\1\3\4\0\13\3\1\u01d0\27\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\317\26\3"+
    "\11\0\2\3\2\0\1\3\4\0\13\3\1\u01d1\27\3"+
    "\11\0\2\3\2\0\1\3\4\0\25\3\1\u01d2\15\3"+
    "\11\0\2\3\2\0\1\3\4\0\15\3\1\u01d3\25\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\u01d4\26\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\u01d5\3\3"+
    "\1\u01be\22\3\11\0\2\3\2\0\1\3\4\0\14\3"+
    "\1\216\26\3\11\0\2\3\2\0\1\3\4\0\32\3"+
    "\1\62\10\3\11\0\2\3\2\0\1\3\4\0\24\3"+
    "\1\u01d6\16\3\11\0\2\3\2\0\1\3\4\0\20\3"+
    "\1\u01d7\22\3\11\0\2\3\2\0\1\u01d8\4\0\43\3"+
    "\11\0\2\3\2\0\1\3\4\0\25\3\1\u01d9\15\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\u0178\26\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\350\26\3"+
    "\11\0\2\3\2\0\1\3\4\0\20\3\1\u01c6\22\3"+
    "\11\0\2\3\2\0\1\3\4\0\26\3\1\56\14\3"+
    "\11\0\2\3\2\0\1\3\4\0\16\3\1\u01da\24\3"+
    "\11\0\2\3\2\0\1\3\4\0\11\3\1\u01db\31\3"+
    "\11\0\2\3\2\0\1\u01dc\4\0\43\3\11\0\2\3"+
    "\2\0\1\3\4\0\15\3\1\u0133\25\3\11\0\2\3"+
    "\2\0\1\3\4\0\25\3\1\276\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\25\3\1\350\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\376\31\3\11\0\2\3"+
    "\2\0\1\3\4\0\25\3\1\u01dd\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\u01de\31\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\u01df\31\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\u01e0\33\3\11\0\2\3"+
    "\2\0\1\3\4\0\25\3\1\u01e1\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\10\3\1\u01e2\1\3\1\u01e3\1\3"+
    "\1\u01e4\23\3\1\u01e5\2\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u01e6\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u0155\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\16\3\1\u01e7\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u01e8\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\20\3\1\u0111\22\3\11\0\2\3\2\0\1\3"+
    "\4\0\16\3\1\u01e9\24\3\11\0\2\3\2\0\1\3"+
    "\4\0\7\3\1\u01ea\33\3\11\0\2\3\2\0\1\3"+
    "\4\0\13\3\1\u01eb\27\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u01ec\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\11\3\1\u01ed\31\3\11\0\2\3\2\0\1\3"+
    "\4\0\7\3\1\u01ee\15\3\1\u01ef\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\u01f0\31\3\11\0\2\3"+
    "\2\0\1\3\4\0\13\3\1\u01f1\27\3\11\0\2\3"+
    "\2\0\1\3\4\0\11\3\1\u016a\31\3\11\0\2\3"+
    "\2\0\1\3\4\0\33\3\1\317\7\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\u01f2\33\3\11\0\2\3"+
    "\2\0\1\3\4\0\25\3\1\216\15\3\11\0\2\3"+
    "\2\0\1\3\4\0\7\3\1\u01f3\26\3\1\u019b\4\3"+
    "\11\0\2\3\2\0\1\3\4\0\32\3\1\u01f4\10\3"+
    "\11\0\2\3\2\0\1\3\4\0\13\3\1\u01f5\27\3"+
    "\11\0\2\3\2\0\1\3\4\0\25\3\1\u01f6\15\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\136\26\3"+
    "\11\0\2\3\2\0\1\3\4\0\22\3\1\u01f7\20\3"+
    "\11\0\2\3\2\0\1\3\4\0\16\3\1\u01f8\24\3"+
    "\11\0\2\3\2\0\1\3\4\0\11\3\1\111\31\3"+
    "\11\0\2\3\2\0\1\3\4\0\16\3\1\u01f9\24\3"+
    "\11\0\2\3\2\0\1\3\4\0\13\3\1\u01fa\27\3"+
    "\11\0\2\3\2\0\1\3\4\0\12\3\1\56\30\3"+
    "\11\0\2\3\2\0\1\3\4\0\21\3\1\u01fb\21\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\u01fc\13\3"+
    "\1\250\12\3\11\0\2\3\2\0\1\u01fd\4\0\43\3"+
    "\11\0\2\3\2\0\1\3\4\0\25\3\1\u01fe\15\3"+
    "\11\0\2\3\2\0\1\3\4\0\14\3\1\216\1\u01ff"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\7\3\1\65"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\10\3\1\u0200"+
    "\32\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u0201"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\26\3\1\250"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\21\3\1\216"+
    "\21\3\11\0\2\3\2\0\1\3\4\0\14\3\1\u0202"+
    "\26\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0203"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u0204"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0205"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\33\3\1\u0206"+
    "\7\3\11\0\2\3\2\0\1\3\4\0\10\3\1\u0140"+
    "\32\3\11\0\2\3\2\0\1\3\4\0\11\3\1\u0207"+
    "\31\3\11\0\2\3\2\0\1\3\4\0\16\3\1\u0208"+
    "\24\3\11\0\2\3\2\0\1\3\4\0\14\3\1\u0209"+
    "\26\3\11\0\2\3\2\0\1\3\4\0\7\3\1\56"+
    "\10\3\1\u01fd\22\3\11\0\2\3\2\0\1\3\4\0"+
    "\13\3\1\373\27\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\u020a\33\3\11\0\2\3\2\0\1\3\4\0"+
    "\22\3\1\u0185\20\3\11\0\2\3\2\0\1\3\4\0"+
    "\11\3\1\u0163\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\11\3\1\u020b\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\u020c\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\11\3\1\u020d\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\34\3\1\317\6\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\u020e\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\103\33\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\62\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\16\3\1\216\24\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\u020f\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\u0210\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\20\3\1\u0205\22\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\u0211\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\u01a7\25\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\u0212\25\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\350\25\3\11\0\2\3\2\0\1\3\4\0"+
    "\13\3\1\u0213\27\3\34\0\1\u0214\41\0\2\3\2\0"+
    "\1\3\4\0\26\3\1\u0215\14\3\11\0\2\3\2\0"+
    "\1\3\4\0\25\3\1\211\15\3\11\0\2\3\2\0"+
    "\1\3\4\0\14\3\1\u017e\26\3\11\0\2\3\2\0"+
    "\1\3\4\0\7\3\1\u0106\6\3\1\u0190\24\3\11\0"+
    "\2\3\2\0\1\3\4\0\20\3\1\u0216\22\3\11\0"+
    "\2\3\2\0\1\3\4\0\13\3\1\u0217\27\3\11\0"+
    "\2\3\2\0\1\3\4\0\20\3\1\u0218\22\3\11\0"+
    "\2\3\2\0\1\3\4\0\11\3\1\123\31\3\11\0"+
    "\2\3\2\0\1\3\4\0\25\3\1\202\15\3\11\0"+
    "\2\3\2\0\1\3\4\0\21\3\1\u01a3\21\3\11\0"+
    "\2\3\2\0\1\3\4\0\22\3\1\u0219\20\3\11\0"+
    "\2\3\2\0\1\3\4\0\11\3\1\u021a\31\3\11\0"+
    "\2\3\2\0\1\3\4\0\25\3\1\u01a7\15\3\11\0"+
    "\2\3\2\0\1\3\4\0\7\3\1\u01db\33\3\11\0"+
    "\2\3\2\0\1\376\4\0\43\3\11\0\2\3\2\0"+
    "\1\3\4\0\25\3\1\u021b\15\3\11\0\2\3\2\0"+
    "\1\3\4\0\22\3\1\56\20\3\11\0\2\3\2\0"+
    "\1\375\4\0\43\3\11\0\2\3\2\0\1\3\4\0"+
    "\21\3\1\u0113\21\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\251\33\3\11\0\2\3\2\0\1\3\4\0"+
    "\26\3\1\262\14\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\202\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\10\3\1\u021c\32\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\223\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\16\3\1\u021d\24\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\u021e\33\3\11\0\2\3\2\0\1\3\4\0"+
    "\33\3\1\u0107\7\3\11\0\2\3\2\0\1\3\4\0"+
    "\20\3\1\u021f\22\3\11\0\2\3\2\0\1\u0220\4\0"+
    "\43\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u0221"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u0222"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\20\3\1\70"+
    "\22\3\11\0\2\3\2\0\1\3\4\0\10\3\1\u0223"+
    "\32\3\11\0\2\3\2\0\1\3\4\0\11\3\1\u0224"+
    "\31\3\11\0\2\3\2\0\1\3\4\0\26\3\1\u012a"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\26\3\1\u0225"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0226"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u013f"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\21\3\1\u01c7"+
    "\21\3\11\0\2\3\2\0\1\3\4\0\14\3\1\u0227"+
    "\26\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u0228"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\21\3\1\u0229"+
    "\21\3\11\0\2\3\2\0\1\3\4\0\17\3\1\u022a"+
    "\23\3\11\0\2\3\2\0\1\3\4\0\11\3\1\u022b"+
    "\31\3\11\0\2\3\2\0\1\3\4\0\30\3\1\317"+
    "\12\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u022c"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\20\3\1\u01db"+
    "\22\3\11\0\2\3\2\0\1\3\4\0\11\3\1\u022d"+
    "\31\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u022e"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u022f"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\26\3\1\u0125"+
    "\6\3\1\350\5\3\11\0\2\3\2\0\1\3\4\0"+
    "\10\3\1\62\32\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\u0230\33\3\11\0\2\3\2\0\1\3\4\0"+
    "\26\3\1\u0231\14\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\373\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\u0110\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\u0232\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\20\3\1\u0233\22\3\11\0\2\3\2\0\1\3\4\0"+
    "\13\3\1\u0234\27\3\11\0\2\3\2\0\1\3\4\0"+
    "\26\3\1\u0235\14\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\56\33\3\11\0\2\3\2\0\1\3\4\0"+
    "\33\3\1\u0236\7\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\376\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\u0185\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\u0237\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\35\3\1\250\5\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\u0238\25\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\u0239\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\274\1\3\1\347\31\3\11\0\2\3\2\0"+
    "\1\3\4\0\17\3\1\u022f\4\3\1\62\16\3\11\0"+
    "\2\3\2\0\1\3\4\0\24\3\1\u023a\16\3\11\0"+
    "\2\3\2\0\1\3\4\0\15\3\1\u0125\25\3\33\0"+
    "\1\u023b\42\0\2\3\2\0\1\3\4\0\7\3\1\u023c"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u023d"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\7\3\1\71"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u023e"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u023f"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u0240"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\10\3\1\u0241"+
    "\32\3\11\0\2\3\2\0\1\u01be\4\0\43\3\11\0"+
    "\2\3\2\0\1\3\4\0\11\3\1\u0242\31\3\11\0"+
    "\2\3\2\0\1\3\4\0\13\3\1\u0243\27\3\11\0"+
    "\2\3\2\0\1\3\4\0\34\3\1\u0244\6\3\11\0"+
    "\2\3\2\0\1\3\4\0\11\3\1\u01e0\31\3\11\0"+
    "\2\3\2\0\1\3\4\0\17\3\1\u0173\23\3\11\0"+
    "\2\3\2\0\1\3\4\0\13\3\1\u0245\27\3\11\0"+
    "\2\3\2\0\1\3\4\0\11\3\1\u0246\31\3\11\0"+
    "\2\3\2\0\1\3\4\0\14\3\1\u0247\26\3\11\0"+
    "\2\3\2\0\1\3\4\0\17\3\1\u0248\23\3\11\0"+
    "\2\3\2\0\1\3\4\0\15\3\1\u0249\25\3\11\0"+
    "\2\3\2\0\1\3\4\0\7\3\1\u024a\33\3\11\0"+
    "\2\3\2\0\1\3\4\0\11\3\1\56\13\3\1\u0144"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u024b"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\20\3\1\u0208"+
    "\22\3\11\0\2\3\2\0\1\3\4\0\12\3\1\u024c"+
    "\30\3\11\0\2\3\2\0\1\3\4\0\21\3\1\u022f"+
    "\21\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u024d"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u024e"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u0185"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\16\3\1\u024f"+
    "\24\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0165"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u0250"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u0251"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0252"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u0253"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\36\3\1\u0254"+
    "\4\3\11\0\2\3\2\0\1\3\4\0\15\3\1\u0110"+
    "\25\3\11\0\2\3\2\0\1\3\4\0\30\3\1\u0255"+
    "\12\3\11\0\2\3\2\0\1\3\4\0\31\3\1\u01a3"+
    "\11\3\11\0\2\3\2\0\1\u0256\4\0\43\3\43\0"+
    "\1\u0257\32\0\2\3\2\0\1\3\4\0\33\3\1\u0258"+
    "\7\3\11\0\2\3\2\0\1\3\4\0\35\3\1\u018e"+
    "\5\3\11\0\2\3\2\0\1\3\4\0\11\3\1\u0259"+
    "\31\3\11\0\2\3\2\0\1\3\4\0\30\3\1\u021c"+
    "\12\3\11\0\2\3\2\0\1\3\4\0\21\3\1\341"+
    "\21\3\11\0\2\3\2\0\1\3\4\0\21\3\1\u025a"+
    "\21\3\11\0\2\3\2\0\1\3\4\0\30\3\1\341"+
    "\12\3\11\0\2\3\2\0\1\3\4\0\7\3\1\u025b"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\26\3\1\u025c"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\36\3\1\u025d"+
    "\4\3\11\0\2\3\2\0\1\3\4\0\11\3\1\347"+
    "\31\3\11\0\2\3\2\0\1\3\4\0\20\3\1\u025e"+
    "\22\3\11\0\2\3\2\0\1\3\4\0\26\3\1\u025f"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0260"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\11\3\1\u0261"+
    "\31\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u025f"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\30\3\1\173"+
    "\12\3\11\0\2\3\2\0\1\3\4\0\27\3\1\u0262"+
    "\13\3\11\0\2\3\2\0\1\3\4\0\27\3\1\u0263"+
    "\13\3\11\0\2\3\2\0\1\3\4\0\21\3\1\u0264"+
    "\21\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0265"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\14\3\1\u0266"+
    "\26\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u0247"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\17\3\1\114"+
    "\23\3\11\0\2\3\2\0\1\3\4\0\36\3\1\u0267"+
    "\4\3\11\0\2\3\2\0\1\3\4\0\20\3\1\u0107"+
    "\22\3\11\0\2\3\2\0\1\3\4\0\26\3\1\u0268"+
    "\14\3\11\0\2\3\2\0\1\3\4\0\11\3\1\216"+
    "\31\3\11\0\2\3\2\0\1\u01a6\4\0\10\3\1\373"+
    "\2\3\1\u0269\27\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\345\25\3\11\0\2\3\2\0\1\3\4\0"+
    "\13\3\1\u026a\27\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\u026b\25\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\u0119\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\21\3\1\u025a\14\3\1\u026c\4\3\11\0\2\3\2\0"+
    "\1\3\4\0\7\3\1\u026d\33\3\11\0\2\3\2\0"+
    "\1\3\4\0\26\3\1\u026e\3\3\1\u026f\10\3\11\0"+
    "\2\3\2\0\1\3\4\0\21\3\1\u0173\21\3\11\0"+
    "\2\3\2\0\1\3\4\0\20\3\1\u0131\22\3\11\0"+
    "\2\3\2\0\1\3\4\0\23\3\1\u0270\7\3\1\u0271"+
    "\7\3\11\0\2\3\2\0\1\3\4\0\20\3\1\u0272"+
    "\22\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0273"+
    "\15\3\11\0\2\3\2\0\1\3\4\0\7\3\1\274"+
    "\33\3\11\0\2\3\2\0\1\3\4\0\13\3\1\u020d"+
    "\27\3\11\0\2\3\2\0\1\3\4\0\25\3\1\u0274"+
    "\15\3\11\0\2\3\2\0\1\u0275\4\0\43\3\11\0"+
    "\2\3\2\0\1\3\4\0\25\3\1\u0276\15\3\11\0"+
    "\2\3\2\0\1\3\4\0\11\3\1\u0277\31\3\11\0"+
    "\2\3\2\0\1\3\4\0\20\3\1\u0278\22\3\11\0"+
    "\2\3\2\0\1\3\4\0\25\3\1\u0279\15\3\11\0"+
    "\2\3\2\0\1\u027a\4\0\43\3\11\0\2\3\2\0"+
    "\1\3\4\0\33\3\1\u027b\7\3\11\0\2\3\2\0"+
    "\1\3\4\0\15\3\1\u027c\25\3\11\0\2\3\2\0"+
    "\1\3\4\0\10\3\1\u0192\32\3\11\0\2\3\2\0"+
    "\1\3\4\0\33\3\1\u027d\7\3\11\0\2\3\2\0"+
    "\1\3\4\0\27\3\1\u027e\13\3\11\0\2\3\2\0"+
    "\1\u0111\4\0\43\3\11\0\2\3\2\0\1\3\4\0"+
    "\15\3\1\u0191\25\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\u012a\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\11\3\1\u027f\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\26\3\1\u018e\14\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\u0280\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\17\3\1\u0281\23\3\11\0\2\3\2\0\1\3\4\0"+
    "\26\3\1\u01ce\14\3\11\0\2\3\2\0\1\3\4\0"+
    "\16\3\1\u0282\24\3\11\0\2\3\2\0\1\3\4\0"+
    "\23\3\1\u0283\17\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\u0284\33\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\u0285\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\14\3\1\u0286\26\3\11\0\2\3\2\0\1\3\4\0"+
    "\7\3\1\u0287\33\3\11\0\2\3\2\0\1\3\4\0"+
    "\25\3\1\u0288\15\3\11\0\2\3\2\0\1\3\4\0"+
    "\26\3\1\u0289\14\3\11\0\2\3\2\0\1\3\4\0"+
    "\13\3\1\u028a\27\3\11\0\2\3\2\0\1\3\4\0"+
    "\11\3\1\u028b\31\3\11\0\2\3\2\0\1\3\4\0"+
    "\27\3\1\u028c\13\3\11\0\2\3\2\0\1\3\4\0"+
    "\10\3\1\u028d\2\3\1\u026a\27\3\11\0\2\3\2\0"+
    "\1\3\4\0\11\3\1\u028e\31\3\11\0\2\3\2\0"+
    "\1\3\4\0\13\3\1\u028f\27\3\11\0\2\3\2\0"+
    "\1\3\4\0\7\3\1\u0290\33\3\11\0\2\3\2\0"+
    "\1\3\4\0\25\3\1\u0291\15\3\11\0\2\3\2\0"+
    "\1\3\4\0\16\3\1\u0292\24\3\11\0\2\3\2\0"+
    "\1\3\4\0\26\3\1\u028b\14\3\10\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[33867];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\41\1\3\11\4\1\1\0\167\1\1\0"+
    "\10\1\1\11\1\1\1\0\217\1\1\0\2\1\1\0"+
    "\25\1\1\0\141\1\1\11\16\1\1\0\113\1\1\0"+
    "\46\1\1\0\33\1\1\11\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[658];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 192) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return ERROR;
            } 
            // fall through
          case 13: break;
          case 2: 
            { lexeme=yytext(); return Identificador;
            } 
            // fall through
          case 14: break;
          case 3: 
            { lexeme = yytext(); return Numero;
            } 
            // fall through
          case 15: break;
          case 4: 
            { /*Ignore*/
            } 
            // fall through
          case 16: break;
          case 5: 
            { return Resta;
            } 
            // fall through
          case 17: break;
          case 6: 
            { return Division;
            } 
            // fall through
          case 18: break;
          case 7: 
            { return Igual;
            } 
            // fall through
          case 19: break;
          case 8: 
            { return Suma;
            } 
            // fall through
          case 20: break;
          case 9: 
            { return Multiplicacion;
            } 
            // fall through
          case 21: break;
          case 10: 
            { lexeme = yytext(); return ComentarioLinea;
            } 
            // fall through
          case 22: break;
          case 11: 
            { lexeme=yytext(); return Reservadas;
            } 
            // fall through
          case 23: break;
          case 12: 
            { lexeme = yytext(); return String1;
            } 
            // fall through
          case 24: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
